<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/</description>
	<atom:link rel="self" href="http://planeteclipse.org/rss20.xml" type="application/rss+xml"/>

<item>
	<title>Eclipse Announcements: The Eclipse Foundation Launches the Sparkplug Working Group to Bring Device Communications Standardization to the Industrial Internet of Things and Industrial Automation</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/cXtYn4w-vD4/The-Eclipse-Foundation-Launches-the-Sparkplug-Working-Group-to-Bring-Device-Communications-Standardization-to-the-Industrial-Internet-of-Things-and-Industrial-Automation.html</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/cXtYn4w-vD4/The-Eclipse-Foundation-Launches-the-Sparkplug-Working-Group-to-Bring-Device-Communications-Standardization-to-the-Industrial-Internet-of-Things-and-Industrial-Automation.html</link>
	<description>Founding members Chevron, Canary Labs, Cirrus Link Solutions, HiveMQ, Inductive Automation, and ORing are defining an open standard specification to create interoperable MQTT IIoT solutions&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/cXtYn4w-vD4&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 04 Feb 2020 13:00:00 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: Java Streams are great but it’s time for better Java Collections</title>
	<guid isPermaLink="false">https://medium.com/p/42d2c04235d1</guid>
	<link>https://medium.com/@donraab/java-streams-are-great-but-its-time-for-better-java-collections-42d2c04235d1?source=rss-df39b86e9f04------2</link>
	<description>&lt;p&gt;After 25 years, it’s time for Java to get a Collections upgrade.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*yX_bEyE-I5UR6kbDD-h8kA.jpeg&quot; /&gt;&lt;figcaption&gt;Java Streams and Collections Birds of a Feather Session from JavaOne 2014&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;25 Years of Java&lt;/h3&gt;&lt;p&gt;This year will mark the 25th anniversary of the Java programming language. In March 2020, we will celebrate the 6th anniversary of the release of Java 8 which included Lambdas, Method References, Default Methods and Java Streams.&lt;/p&gt;&lt;p&gt;Java 8 was and is still amazing. After 19 years without support for Lambdas, Java developers were suddenly enjoying amazing productivity gains with several great additions to the language and core libraries. Java Streams are extremely helpful and satisfy a large number of uses cases. They have also given Java content authors plenty to write about, and Java conference speakers plenty to talk about.&lt;/p&gt;&lt;p&gt;While the Java Collections framework has been greatly augmented with the new functionality in Java Streams, Java Streams are unfortunately hiding even greater productivity gains, increased type safety and improvements in performance.&lt;/p&gt;&lt;p&gt;Let’s explore why after 25 years, it is time for a better and more modern Java Collections framework. To see some of what we are still missing in Java, we can look to the past.&lt;/p&gt;&lt;h3&gt;40 Years of Smalltalk&lt;/h3&gt;&lt;p&gt;Forty years ago, Smalltalk-80 was released. Smalltalk has influenced so much that we use on a daily basis in modern programming languages and software development techniques like TDD and Refactoring.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Smalltalk&quot;&gt;Smalltalk&lt;/a&gt; is a dynamically typed object-oriented programming language. Smalltalk has a simple syntax that can fit on a &lt;a href=&quot;https://medium.com/@richardeng/syntax-on-a-post-card-cb6d85fabf88&quot;&gt;post card&lt;/a&gt;, and a large feature rich class library. I programmed professionally in Smalltalk from 1994–2000 while employed by IBM Global Services working at Horizon Blue Cross Blue Shield of New Jersey. Smalltalk shaped the way I think about programming over the past 25 years, and has directly impacted how I design and program in Java.&lt;/p&gt;&lt;p&gt;I believe one of the most overlooked features of Smalltalk is its rich Collections framework. Smalltalk collections have an organized and easy to learn hierarchy.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*BloF-IiQVMxYbUU_dUERQg.png&quot; /&gt;&lt;figcaption&gt;Smalltalk Collection Hierarchy&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The concrete collections in Smalltalk have simple factory methods for creating them (with:) and certain collection types like arrays and strings had literal syntax. In the screen shot below I create a Set, OrderedCollection (akaList), Bag, Array, String, Dictionary (aka Map) and Interval using Pharo Smalltalk. Smalltalk is a live programming environment. In Smalltalk, you can highlight code anywhere and execute it or inspect the results and view them in an inspector.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*bocMgEt3pos50GNaa-pi4w.png&quot; /&gt;&lt;figcaption&gt;Factory methods and literal syntax for creating Smalltalk collections&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The collection APIs in Smalltalk are very rich, and many of the common APIs are defined a the root of the hierarchy in the Collection class.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*QVVUCWb1Jy6E78NDqPk3Vw.png&quot; /&gt;&lt;figcaption&gt;APIs including select:, reject:, collect:, detect:, inject:into: available on all Collection types&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;To understand how rich the Smalltalk Collection API is, I have captured a mindmap for the Pharo Smalltalk Collection class showing major method categories and individual APIs. I really miss method categories in Java, as it is a great way to organize larger APIs. Every subclass of Collection inherits all of these common behaviors.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*n9EAjjiN7LPpTljqWVDHFQ.jpeg&quot; /&gt;&lt;figcaption&gt;Smalltalk Collection class API&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Smalltalk has had lambdas and a feature rich collections framework now for over 40 years — 40 years! After 25 years the JDK still does not have the same level of functionality available directly on the collections.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;There are options available in the Java open source community.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;h3&gt;16 Years of better Collections in Java&lt;/h3&gt;&lt;p&gt;I started developing a library named Caramel while working in Goldman Sachs in 2004. In 2012, the library was open sourced as &lt;a href=&quot;https://github.com/goldmansachs/gs-collections&quot;&gt;GS Collections&lt;/a&gt; on GitHub. In 2015 it was migrated to the Eclipse Foundation and became &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The Eclipse Collections framework was inspired from the the Smalltalk Collections framework. Eclipse Collections has factory classes which provide a consistent way of creating collections.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*kOIwZuo6F9lS55s5Cd6FTw.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;Eclipse Collections also provides a rich API, with most methods defined in a parent interface named RichIterable. The methods available directly on the collections are &lt;strong&gt;eager by default&lt;/strong&gt;. Methods which return collections such as select, reject and collect are co-variant in Eclipse Collections.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*XGEGb9CLpai3WgEnzNJDgQ.png&quot; /&gt;&lt;figcaption&gt;Compare this with the Smalltalk example above&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;There is a &lt;strong&gt;lazy&lt;/strong&gt; API available in Eclipse Collections by calling asLazy.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*QSXbv-LrVsIQzu_n7pQArA.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;The mutable types in Eclipse Collections extend the equivalent Collection types in Java.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;MutableList extends java.util.List&lt;/li&gt;&lt;li&gt;MutableSet extends java.util.Set&lt;/li&gt;&lt;li&gt;MutableMap extends java.util.Map&lt;/li&gt;&lt;li&gt;MutableBag extends java.util.Collection&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This means that methods like stream and parallelStream are also available on the Eclipse Collections types.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*HvZrTJR820yEu2QPUG_JMA.png&quot; /&gt;&lt;/figure&gt;&lt;p&gt;Eclipse Collections comes with a Collectors2 class with equivalent Collector implementations to those found in Collectors but that return Eclipse Collections types.&lt;/p&gt;&lt;p&gt;If you want to see visualizations of the Eclipse Collections library, there are many available in the following blog.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/oracledevs/visualizing-eclipse-collections-646dad9533a9&quot;&gt;Visualizing Eclipse Collections&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Comparing Collection base classes in Java&lt;/h3&gt;&lt;p&gt;So what is the difference between Eclipse Collections and the JDK Collections framework? In the image below I have calculated the difference and intersection of the MutableCollection and java.util.Collection APIs using method names without parameters, so overloaded methods are excluded.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*QladkOsfJe2hlrQ0n2uyHw.png&quot; /&gt;&lt;figcaption&gt;Eclipse Collection MutableCollection compared to java.util.Collection&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: MutableCollection extends RichIterable, which is where a lot of the behaviors for the class are inherited from.&lt;/p&gt;&lt;p&gt;There are a lot more features available on MutableCollection. These features result directly in productivity gains for Java developers. The MutableCollection class extends java.util.Collection so the intersections above include all of the methods in java.util.Collection and from java.lang.Iterable.&lt;/p&gt;&lt;h3&gt;What are Java Collections missing today?&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;Functional and fluent APIs directly on the collections&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/oracledevs/unifiedset-the-memory-saver-25b830745959&quot;&gt;Memory Efficiency&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/@donraab/the-4am-jamestown-scotland-ferry-and-other-optimization-strategies-66365ac415ef&quot;&gt;Optimized Eager APIs &lt;/a&gt;— Learn about eager vs. lazy here&lt;/li&gt;&lt;li&gt;Primitive Collections for all primitive types&lt;/li&gt;&lt;li&gt;Contractually Immutable Collections&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/@donraab/lazy-and-inexhaustible-f41ffda857dc&quot;&gt;Lazy Iterable API&lt;/a&gt;s for object and primitive collections&lt;/li&gt;&lt;li&gt;A *distinct* &lt;a href=&quot;https://www.infoq.com/presentations/java-streams-scala-parallel-collections&quot;&gt;Parallel Iterable Hierarchy&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/oracledevs/multimap-how-it-works-a3430f549d35&quot;&gt;Multimaps&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/oracledevs/bag-the-counter-2689e901aadb&quot;&gt;Bags&lt;/a&gt;&lt;/li&gt;&lt;li&gt;BiMaps&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://medium.com/@donraab/as-a-matter-of-factory-part-1-mutable-75cc2c5d72d9&quot;&gt;Mutable&lt;/a&gt; and &lt;a href=&quot;https://medium.com/@donraab/as-a-matter-of-factory-part-2-immutable-8cb72ff897ee&quot;&gt;Immutable&lt;/a&gt; Collection Factories&lt;/li&gt;&lt;li&gt;64-bit collections (size is long, arrays are 64-bit)&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;Past is present and future is now&lt;/h3&gt;&lt;p&gt;We have a lot we can still learn in Java from Smalltalk. Smalltalk was (arguably still is) way ahead of its time. Adding additional syntax in newer versions of the Java language may be useful, but we need to build much better support in the base class libraries like the Collections framework. I hope to see many of these classic collections features added in a future version of Java. Java is a great development platform, and an updated Collections framework will make Java even better.&lt;/p&gt;&lt;blockquote&gt;Let’s make Java even better for the next 25 years.&lt;/blockquote&gt;&lt;p&gt;If you’re eager for these features today, there is no need to wait. You can increase your productivity and joy of programming by using &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; right now. Eclipse Collections is available as a library in Maven Central, and has no dependencies. &lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt;Eclipse Collections&lt;/a&gt; is an open source project at the &lt;a href=&quot;https://www.eclipse.org/&quot;&gt;Eclipse Foundation&lt;/a&gt;, which is where it gets the name prefix of Eclipse. Eclipse Collections is not related to or dependent on the Eclipse IDE and it works in any Java library, application or IDE that supports Java 8 or above.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you are still using Java 5,6 or 7, there is still hope. Eclipse Collections 7.x versions should work just fine for you. This version also works fine with Java 8. We’ve been enjoying the rich collections features of Smalltalk since JDK 1.4, which is what was available when I created the the first set of classes in the original Caramel library back in 2004.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Thank you to all of our users, contributors, committers, advocates and friends for supporting our journey in open source for the past 8 years! Your contributions, support and feedback fuels our motivation to make Eclipse Collections even better. We are working to help make the Java platform the best platform to program in for the next 25 years. &lt;/em&gt;&lt;/strong&gt;&lt;a href=&quot;https://medium.com/@donraab/help-wanted-b1acf25d8c8d?source=friends_link&amp;amp;sk=64bf7b9fba1f083ec04af97a7c05bf97&quot;&gt;&lt;strong&gt;&lt;em&gt;Help wanted&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=42d2c04235d1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sun, 02 Feb 2020 20:58:15 +0000</pubDate>
</item>
<item>
	<title>Donald Raab: JVMs.Compare — Benchmark Performance at Devnexus 2020</title>
	<guid isPermaLink="false">https://medium.com/p/448e340d77e6</guid>
	<link>https://medium.com/@donraab/jvms-compare-benchmark-performance-at-devnexus-2020-448e340d77e6?source=rss-df39b86e9f04------2</link>
	<description>&lt;h3&gt;JVMs.Compare — Benchmark Performance at Devnexus 2020&lt;/h3&gt;&lt;p&gt;Round 3 —Open Java Track: Friday, Feb. 21, 3:30pm, Room 412!&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*UuC1SZt_P1hUSQjuBvfAmQ.png&quot; /&gt;&lt;/figure&gt;&lt;h3&gt;Devnexus 2020 is waiting for you!&lt;/h3&gt;&lt;p&gt;Devnexus is one of my favorite conferences to speak at and attend for the past three years . I am amazed at the number of great speakers and topics to choose from at this great conference held each year in Atlanta. This year is going to be even more spectacular. There are new speakers I am excited to hear speak for the first time, and veteran industry luminaries I can’t wait to meet and catch up with.&lt;/p&gt;&lt;p&gt;If you haven’t signed up already, I highly recommend you consider booking tickets and attending!&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://reg.connectevents.io/ConnectEvents/devnexus2020/&quot;&gt;Presale :: Devnexus 2020&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;So I have a talk at Devnexus 2020&lt;/h3&gt;&lt;p&gt;This year I have one talk at the Devnexus conference with my friend, colleague and fellow Java Champion — Chandra Guntur.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/CGuntur&quot;&gt;Chandra Guntur&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Chandra just gave a newly updated version of this talk at the NY Java SIG on January 30th. We gave the first version of the talk together at Oracle CodeOne 2019 in San Francisco. The first version of the talk was well received and we got some great feedback and suggestions to further improve the talk. We listened to the feedback and have incorporated many important changes into the new version of the talk.&lt;/p&gt;&lt;p&gt;What can I tell you about this talk? Please read on…&lt;/p&gt;&lt;h3&gt;What takes 56 hours and heats my home office?&lt;/h3&gt;&lt;p&gt;Come to our session at Devnexus titled: &lt;strong&gt;“JVMs.Compare — Benchmark Performance”&lt;/strong&gt; and you will find out. I don’t want to give too many spoilers, but we will be comparing the performance benchmarks running eight different JDK/JVM combinations on two different hardware configurations.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://devnexus.com/presentations/4688/&quot;&gt;JVMs.Compare - Benchmark Performance&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;The Beast is Hungry&lt;/h3&gt;&lt;p&gt;The Beast eats benchmarks for breakfast, lunch and dinner. In total, The Beast and his friend “The Little Monster” will run 336 hours of benchmarks comparing several different JDK/JVM combos.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*YUNX-QRdG7VOPZknLDm3Yw.jpeg&quot; /&gt;&lt;figcaption&gt;The Beast&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;How do you know when The Beast is feasting?&lt;/h3&gt;&lt;p&gt;The Beast has twenty four teeth, ready to cut through serial and parallel benchmarks with extreme focus. This is what The Beast looks like when it is feasting on the benchmarks. Do not attempt to approach the beast while it is feasting. It breathes burning hot air from its mouth when it is feasting.&lt;/p&gt;&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*LatJ0DuYJLd30VnCp7LoMw.png&quot; /&gt;&lt;/figure&gt;&lt;h3&gt;Why do you want to attend this talk?&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Java developers: learn what the JDK/JVM benchmark comparisons reveal.&lt;/li&gt;&lt;li&gt;JVM developers: learn what can be improved.&lt;/li&gt;&lt;li&gt;Learn some things about &lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;Eclipse Collections&lt;/a&gt; and Java Stream performance&lt;/li&gt;&lt;li&gt;Learn about Apache Zeppelin&lt;/li&gt;&lt;li&gt;Listen to me explain why my wife let me buy “The Beast”.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We learned a lot of interesting things running these benchmarks. I’ve given talks at Devnexus in 2018 comparing Java Collections frameworks and in 2019 comparing JVM Languages. This is the third in a growing collection of comparison talks I will have given at Devnexus. This is by far the most expensive talk I will ever give at Devnexus. I will have run 168 hours of benchmarks on The Beast in my home office.&lt;/p&gt;&lt;p&gt;So get ready, get set, and get going to Devnexus 2020 to attend all of the great talks!&lt;/p&gt;&lt;p&gt;&lt;em&gt;I am a Project Lead and Committer for the &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; OSS project at the &lt;/em&gt;&lt;a href=&quot;https://projects.eclipse.org/projects/technology.collections&quot;&gt;&lt;em&gt;Eclipse Foundation&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections&quot;&gt;&lt;em&gt;Eclipse Collections&lt;/em&gt;&lt;/a&gt;&lt;em&gt; is open for &lt;/em&gt;&lt;a href=&quot;https://github.com/eclipse/eclipse-collections/blob/master/CONTRIBUTING.md&quot;&gt;&lt;em&gt;contributions&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. If you like the library, you can let us know by starring it on GitHub.&lt;/em&gt;&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=448e340d77e6&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sat, 01 Feb 2020 18:13:13 +0000</pubDate>
</item>
<item>
	<title>InfoQ Eclipse feed: The Java EE Guardians Rebrand as the Jakarta EE Ambassadors</title>
	<guid isPermaLink="true">https://www.infoq.com/news/2020/01/rebranding-java-ee-guardians/?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</guid>
	<link>https://www.infoq.com/news/2020/01/rebranding-java-ee-guardians/?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=Eclipse</link>
	<description>&lt;img src=&quot;https://www.infoq.com/styles/i/logo_bigger.jpg&quot; /&gt;&lt;p&gt;Under the auspices of the Eclipse Foundation, the rebranding of the Java EE Guardians to the Jakarta EE Ambassadors has been completed. They were a driving force that ultimately led to Oracle open-sourcing Java EE and transferring ownership to the Eclipse Foundation. Reza Rahman, program manager, Java on Azure at Microsoft, spoke to InfoQ about this rebranding.&lt;/p&gt; &lt;i&gt;By Michael Redlich&lt;/i&gt;</description>
	<pubDate>Thu, 30 Jan 2020 09:00:00 +0000</pubDate>
</item>
<item>
	<title>Thabang Mashologu: CN4J Day Is an Important Industry First</title>
	<guid isPermaLink="false">6761 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/thabang-mashologu/cn4j-day-important-industry-first</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Mark Cloud Native for Java (CN4J) Day on March 30 on your calendars. This all-day event at KubeCon + CloudNativeCon Europe will be the first time the best and brightest minds from the Java and the Kubernetes communities join forces at a single event to collaborate and share their expertise.&lt;br /&gt;
 &lt;br /&gt;
CN4J Day attendees will benefit from expert talks, demos, and thought-provoking sessions focused on building cloud native enterprise applications using Jakarta EE-based microservices on Kubernetes.&lt;br /&gt;
&lt;br /&gt;
CN4J Day is a major milestone in open source software development. It’s also a significant day for everyone involved with the Eclipse Foundation because it confirms the Jakarta EE and MicroProfile communities are at the forefront of open source innovation, delivering on the promise of cloud native Java. Given that the Eclipse Foundation is Europe’s largest open source organization, it makes perfect sense to hold this first-of-its-kind event in Amsterdam.&lt;/p&gt;

&lt;p&gt;The timing of CN4J Day could not be better. As our Executive Director, Mike Milinkovich, noted in &lt;a href=&quot;https://blogs.eclipse.org/post/mike-milinkovich/moving-forward-jakarta-ee-9&quot;&gt;his blog&lt;/a&gt;, momentum toward Jakarta EE 9 is building. This event gives all of us an important and truly unique opportunity to:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Learn more about the future of cloud native Java development from industry and community leaders&lt;/li&gt;
	&lt;li&gt;Gain deeper insight into key aspects of Jakarta EE, MicroProfile, and Kubernetes technologies&lt;/li&gt;
	&lt;li&gt;Meet and share ideas with global Java and Kubernetes ecosystem innovators &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Leading minds from the global Java ecosystem will be on hand at CN4J Day to share their expertise. Along with keynote talks from our own Mike Milinkovich and IBM Java CTO, Tim Ellison, CN4J Day offers technical insights from well-known Java experts and Eclipse Foundation community members, including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Adam Bien, an internationally recognized Java architect, developer, workshop leader, and author&lt;/li&gt;
	&lt;li&gt;Sebastian Daschner, lead java developer advocate at IBM&lt;/li&gt;
	&lt;li&gt;Clement Escoffier, principal software engineer at Red Hat&lt;/li&gt;
	&lt;li&gt;Ken Finnegan, senior principal engineer at Red Hat&lt;/li&gt;
	&lt;li&gt;Emily Jiang, liberty architect for MicroProfile and CDI at IBM&lt;/li&gt;
	&lt;li&gt;Dmitry Kornilov, Jakarta EE and Helidon Team Leader at Oracle&lt;/li&gt;
	&lt;li&gt;Tomas Langer, Helidon Architect &amp;amp; Developer at Oracle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Leading players in the Java ecosystem have signed on to sponsor CN4J activities and show their support for the initiative. Our sponsors include the Cloud Native Computing Foundation (CNCF), IBM, Oracle, and Red Hat.&lt;/p&gt;

&lt;p&gt;Since we have limited capacity, this is a first-come, first-served event. To register today, just include CN4J Day when you’re registering for KubeCon + CloudNativeCon Europe. Thanks to the generous support of our sponsors, a limited amount of discounted CN4J Day add-on registrations will be made available to Jakarta EE and MicroProfile community members. For more information about CN4J Day and a link to the registration page, click &lt;a href=&quot;http://eclipse.org/cn4j-day&quot;&gt;here&lt;/a&gt;.&lt;br /&gt;
 &lt;br /&gt;
For additional questions regarding this event, please reach out to events-info@eclipse.org. We’ll let you know when we add speakers and sponsors for CN4J Day. Watch our&lt;a href=&quot;https://blogs.eclipse.org/&quot;&gt; blogs&lt;/a&gt; and&lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt; newsletters&lt;/a&gt; for updates.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-tags field-type-taxonomy-term-reference field-label-above&quot;&gt;&lt;div class=&quot;field-label&quot;&gt;Tags: &lt;/div&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/jakarta-ee&quot;&gt;Jakarta EE&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item odd&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/eclipse-microprofile&quot;&gt;Eclipse MicroProfile&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/kubernetes&quot;&gt;kubernetes&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item odd&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/cn4j-day&quot;&gt;CN4J Day&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/kubecon-europe-2020&quot;&gt;KubeCon Europe 2020&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 29 Jan 2020 02:44:31 +0000</pubDate>
</item>
<item>
	<title>Tom Schindl: Setting up e(fx)clipse RCP development for Java11+ and PDE</title>
	<guid isPermaLink="false">http://tomsondev.bestsolution.at/?p=5197</guid>
	<link>https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/</link>
	<description>&lt;p&gt;As I’m currently converting a Java-8 project to AdoptJDK-11 and JavaFX-11+ I thought it would be a good idea document the steps involved.&lt;/p&gt;
&lt;h2&gt;Prequisits&lt;/h2&gt;
&lt;p&gt;I assume you have installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eclipse 2019-12 – &lt;a href=&quot;http://download.eclipse.org/eclipse/&quot; rel=&quot;nofollow&quot;&gt;http://download.eclipse.org/eclipse/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Installed e(fx)clipse 3.6.0 or above – &lt;a href=&quot;https://marketplace.eclipse.org/content/efxclipse&quot; rel=&quot;nofollow&quot;&gt;https://marketplace.eclipse.org/content/efxclipse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AdoptJDK-11 – &lt;a href=&quot;https://adoptopenjdk.net/?variant=openjdk11&amp;amp;jvmVariant=hotspot&quot; rel=&quot;nofollow&quot;&gt;https://adoptopenjdk.net/?variant=openjdk11&amp;amp;jvmVariant=hotspot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Downloaded and extracted the JavaFX-SDK-11 – &lt;a href=&quot;https://openjfx.io/&quot; rel=&quot;nofollow&quot;&gt;https://openjfx.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Configure your Eclipse&lt;/h2&gt;
&lt;h3&gt;Java Settings&lt;/h3&gt;
&lt;p&gt;Make AdoptJDK-11 the default JRE unless it is already the default.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-03-59/&quot; rel=&quot;attachment wp-att-5203&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5203&quot; height=&quot;585&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.03.59.png?w=640&amp;amp;h=585&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Make sure AdoptJDK-11 is used for the Java-SE-11 EE&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-05-46/&quot; rel=&quot;attachment wp-att-5205&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5205&quot; height=&quot;362&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.05.46.png?w=640&amp;amp;h=362&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;e(fx)clipse Settings&lt;/h3&gt;
&lt;p&gt;Open the JavaFX-Preference Page and point it to your JavaFX-11-SDK&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-10-44/&quot; rel=&quot;attachment wp-att-5208&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5208&quot; height=&quot;472&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.10.44.png?w=640&amp;amp;h=472&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This step is required because JavaFX is not part of AdoptJDK-11 and hence Eclipse won’t find the libraries and your code won’t compile inside the IDE (we’ll revisit this topic below once more)&lt;/p&gt;
&lt;h3&gt;Setup a target platform&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-15-43/&quot; rel=&quot;attachment wp-att-5233&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5233&quot; height=&quot;618&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.15.43.png?w=640&amp;amp;h=618&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-17-54/&quot; rel=&quot;attachment wp-att-5235&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5235&quot; height=&quot;593&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.17.54.png?w=640&amp;amp;h=593&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-19-06/&quot; rel=&quot;attachment wp-att-5237&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5237&quot; height=&quot;684&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.19.06.png?w=640&amp;amp;h=684&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Create your project&lt;/h2&gt;
&lt;h3&gt;Bootstrap your project&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-22-27/&quot; rel=&quot;attachment wp-att-5216&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5216&quot; height=&quot;584&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.22.27.png?w=640&amp;amp;h=584&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-24-19/&quot; rel=&quot;attachment wp-att-5217&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5217&quot; height=&quot;584&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.24.19.png?w=640&amp;amp;h=584&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-24-40/&quot; rel=&quot;attachment wp-att-5219&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5219&quot; height=&quot;584&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.24.40.png?w=640&amp;amp;h=584&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Check your project setup&lt;/h3&gt;
&lt;p&gt;Check if Eclipse correctly recognized the javafx-library and magically added them to your plug-in dependendencies&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-27-01/&quot; rel=&quot;attachment wp-att-5221&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5221&quot; height=&quot;591&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.27.01.png?w=640&amp;amp;h=591&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Implement the UI&lt;/h2&gt;
&lt;h3&gt;Add javax.annotation to your MANIFEST.MF&lt;/h3&gt;
&lt;p&gt;Before you can write the Java-Code for your UI you need to add javax.annotation-package to your bundle (this used to ship with Java-8 has been removed since then)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-32-48/&quot; rel=&quot;attachment wp-att-5223&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5223&quot; height=&quot;346&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.32.48.png?w=640&amp;amp;h=346&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Create a Java-Class&lt;/h3&gt;
&lt;pre class=&quot;brush: java; title: ; notranslate&quot;&gt;package my.app.app;

import javax.annotation.PostConstruct;

import javafx.scene.control.Label;
import javafx.scene.layout.BorderPane;

public class SamplePart {
  @PostConstruct
  void init(BorderPane root) {
    root.setCenter(
      new Label(System.getProperty(&quot;javafx.version&quot;))
    );
  }
}
&lt;/pre&gt;
&lt;h3&gt;Adapt your e4xmi&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-13-38-34/&quot; rel=&quot;attachment wp-att-5228&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5228&quot; height=&quot;514&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-13.38.34.png?w=640&amp;amp;h=514&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Running your application&lt;/h2&gt;
&lt;p&gt;While everything happily compiles running the application would fail because in the initial steps we only satisfied the Eclipse compiler by magically injecting the JavaFX-Libraries in your Plug-in-Dependency (see above).&lt;/p&gt;
&lt;p&gt;To run the application we need to decide how we’d like to ship JavaFX:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;next to your application in a folder&lt;/li&gt;
&lt;li&gt;as part of your eclipse application inside the the plugins-directory&lt;/li&gt;
&lt;li&gt;you jlink yourself a JDK&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’ll not take a look at the 3rd solution as part of this blog post!&lt;/p&gt;
&lt;h3&gt;Running with an external folder&lt;/h3&gt;
&lt;p&gt;Open the generated launch configuration and append &lt;code&gt;-Defxclipse.java-modules.dir=PATH_TO_YOUR_JAVAFX_LIBS&lt;/code&gt; in the VM arguments-field&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-21-04/&quot; rel=&quot;attachment wp-att-5239&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5239&quot; height=&quot;487&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.21.04.png?w=640&amp;amp;h=487&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Running with bundled javafx-modules&lt;/h3&gt;
&lt;p&gt;We provide OSGi-Bundles who contain the original and unmodified JavaFX-Modules (note you can NOT use them are OSGi-Dependencies!) you can use them by adding &lt;a href=&quot;http://downloads.efxclipse.bestsolution.at/p2-repos/openjfx-11/repository/&quot; rel=&quot;nofollow&quot;&gt;http://downloads.efxclipse.bestsolution.at/p2-repos/openjfx-11/repository/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-32-02/&quot; rel=&quot;attachment wp-att-5241&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5241&quot; height=&quot;633&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.32.02.png?w=640&amp;amp;h=633&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-32-48/&quot; rel=&quot;attachment wp-att-5242&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5242&quot; height=&quot;597&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.32.48.png?w=640&amp;amp;h=597&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add them to your launch configuration&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-35-44/&quot; rel=&quot;attachment wp-att-5244&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5244&quot; height=&quot;489&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.35.44.png?w=640&amp;amp;h=489&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Exporting your application&lt;/h2&gt;
&lt;p&gt;The project wizard already generated the basic infrastructure for you but we need to make some small changes. We assume you’ve chosen to option to ship the JavaFX-modules as part of the plugins-directory to keep it simple.&lt;/p&gt;
&lt;p&gt;The wizard already added the JavaFX-Standard-Feature into your product-File&lt;br /&gt;
&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-44-17/&quot; rel=&quot;attachment wp-att-5246&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5246&quot; height=&quot;489&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.44.17.png?w=640&amp;amp;h=489&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It also added the parts to satisfy the compiler in your releng/pom.xml&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-14-45-50/&quot; rel=&quot;attachment wp-att-5248&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5248&quot; height=&quot;489&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-14.45.50.png?w=640&amp;amp;h=489&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While most of the stuff is already in place we need to make 2 small modifications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update the tycho-version property to 1.5.0&lt;/li&gt;
&lt;li&gt;Change the export environment to match the operation-system(s) you want to target
&lt;ul&gt;
&lt;li&gt;Windows: os=win32, ws=win32, arch=x86_64&lt;/li&gt;
&lt;li&gt;Linux: os=linux, ws=gtk, arch=x86_64&lt;/li&gt;
&lt;li&gt;OS-X: os=macosx, ws=cocoa, arch=x86_64&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-15-07-53/&quot; rel=&quot;attachment wp-att-5250&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5250&quot; height=&quot;384&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-15.07.53.png?w=640&amp;amp;h=384&quot; width=&quot;640&quot; /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;Producing a native launcher&lt;/h3&gt;
&lt;p&gt;As we anyway have to produce a platform-dependent we can also add the creation of a native launcher. For that open your .product-File:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tick the “The product includes native launcher artifacts”&lt;/li&gt;
&lt;li&gt;Change the application to main-thread-application&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://tomsondev.bestsolution.at/2020/01/28/setting-up-efxclipse-rcp-development-for-java11-and-pde/bildschirmfoto-2020-01-28-um-15-53-49/&quot; rel=&quot;attachment wp-att-5254&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-5254&quot; height=&quot;384&quot; src=&quot;https://tomsondev.files.wordpress.com/2020/01/bildschirmfoto-2020-01-28-um-15.53.49.png?w=640&amp;amp;h=384&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Tue, 28 Jan 2020 15:00:08 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: The Eclipse Foundation Announces the CN4J Day 2020 Event for Building Enterprise Java on Kubernetes</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/G-IVzMvJ570/</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/G-IVzMvJ570/</link>
	<description>Today the Eclipse Foundation announced the launch of the Cloud Native for Java (CN4J) Day event, a full-day of expert talks, demos, and thought-provoking sessions focused on enterprise applications implemented using open source vendor-neutral Jakarta EE (successor of Java EE) and Eclipse MicroProfile specifications on Kubernetes.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/G-IVzMvJ570&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 28 Jan 2020 13:00:00 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Cloud Native for Java Day @ KubeCon EU</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1521</guid>
	<link>https://eclipse-foundation.blog/2020/01/28/cloud-native-for-java-day-kubecon-eu/</link>
	<description>&lt;p&gt;&lt;a href=&quot;http://eclipse-5413615.hs-sites&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Cloud Native for Java (CN4J) Day&lt;/a&gt; at KubeCon + CloudNativeCon Europe will be the first time the best and brightest minds from the Java ecosystem and the Kubernetes ecosystem come together at one event to collaborate and share their expertise.&lt;/p&gt;
&lt;p&gt;The all-day event on March 30 includes expert talks, demos, and thought-provoking sessions focused on building cloud native enterprise applications using Jakarta EE-based microservices on Kubernetes. CN4J Day is a proud moment for all of us at the Eclipse Foundation as it confirms the Jakarta EE and MicroProfile communities are at the forefront of fulfilling the promise of cloud native Java. We’re excited to be working with our friends at the CNCF to offer this event co-located with KubeCon Europe.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;A Unique Opportunity to Engage With Global Experts&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;The timing of CN4J Day could not be better. With &lt;a href=&quot;https://blogs.eclipse.org/post/mike-milinkovich/moving-forward-jakarta-ee-9&quot;&gt;momentum toward the Jakarta EE 9&lt;/a&gt; release building, this event gives all of us an important and truly unique opportunity to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;    Learn more about the future of cloud native Java development from industry and community leaders&lt;/li&gt;
&lt;li&gt;    Gain deeper insight into key aspects of Jakarta EE, MicroProfile, and Kubernetes technologies&lt;/li&gt;
&lt;li&gt;    Meet and share ideas with global Java and Kubernetes ecosystem innovators&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The global Java ecosystem has embraced CN4J day and several of its leading minds will be on-hand to share their insights. Along with keynote addresses from my colleague Tanja Obradovic and IBM Java CTO, Tim Ellison, CN4J Day features informative technical talks from Java experts and Eclipse Foundation community members, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;    Adam Bien, an internationally recognized Java architect, developer, workshop leader, and author&lt;/li&gt;
&lt;li&gt;    Sebastian Daschner, lead java developer advocate at IBM&lt;/li&gt;
&lt;li&gt;    Clement Escoffier, principal software engineer at Red Hat&lt;/li&gt;
&lt;li&gt;    Ken Finnegan, senior principal engineer at Red Hat&lt;/li&gt;
&lt;li&gt;    Emily Jiang, liberty architect for MicroProfile and CDI at IBM&lt;/li&gt;
&lt;li&gt;    Dmitry Kornilov, Jakarta EE and Helidon Team Leader at Oracle&lt;/li&gt;
&lt;li&gt;    Tomas Langer, Helidon Architect &amp;amp; Developer at Oracle&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Major Industry and Ecosystem Endorsement&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Leading industry players in the Java ecosystem are also showing their support for CN4J Day through sponsorship. Our sponsors include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;    Cloud Native Computing Foundation (CNCF)&lt;/li&gt;
&lt;li&gt;    IBM&lt;/li&gt;
&lt;li&gt;    Oracle&lt;/li&gt;
&lt;li&gt;    Red Hat&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The event is being coordinated by an independent program committee composed of Arun Gupta, principal technologist at Amazon Web Services, Reza Rahman, principal program manager for Java on Azure at Microsoft, and Tanja Obradovic, program manager for Jakarta EE at the Eclipse Foundation.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Register Today&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To register today, simply add the event to your KubeCon + CloudNativeCon Europe registration. Thanks to the generous support of our sponsors, a limited amount of discounted CN4J Day add-on registrations will be made available to Jakarta EE and MicroProfile community members on a first-come, first-served basis.&lt;/p&gt;
&lt;p&gt;For more details about CN4J Day and a link to the registration page, click&lt;a href=&quot;http://eclipse.org/cn4j-day&quot;&gt; here&lt;/a&gt;. For additional questions regarding this event, please reach out to events-info@eclipse.org.&lt;/p&gt;
&lt;p&gt;As additional speakers and sponsors come onboard, we’ll keep you posted, so watch for updates in our&lt;a href=&quot;https://blogs.eclipse.org/&quot;&gt; blogs&lt;/a&gt; and&lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt; newsletters&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 28 Jan 2020 12:00:08 +0000</pubDate>
</item>
<item>
	<title>Wayne Beaton: Organizing Your Eclipse Foundation Open Source Project Team</title>
	<guid isPermaLink="false">http://waynebeaton.wordpress.com/?p=5619</guid>
	<link>https://waynebeaton.wordpress.com/2020/01/27/organizing-your-eclipse-foundation-open-source-project-team/</link>
	<description>&lt;p&gt;The &lt;a href=&quot;https://www.eclipse.org/projects/dev_process/&quot;&gt;Eclipse Foundation Development Process&lt;/a&gt; (AKA, the Eclipse Development Process or EDP) says nothing about how teams should organize. &lt;/p&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter size-large is-resized&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-5624&quot; height=&quot;225&quot; src=&quot;https://waynebeaton.files.wordpress.com/2020/01/image.png?w=549&quot; width=&quot;358&quot; /&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;The EDP defines a &lt;em&gt;committer&lt;/em&gt; role: committers are those developers who have the ability to make decisions for the project (e.g., push commits to project Git repositories and configure build servers). We often say that the committers are the ones with the real power: they’re the ones that hold all of the keys to all of the project resources. With great power comes great responsibility, so we have a &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#elections-committer&quot;&gt;well-defined process&lt;/a&gt; by which a contributor may demonstrate to the existing project committers that they are worthy of joining them as a peer.&lt;/p&gt;



&lt;p&gt;The EDP also defines a &lt;em&gt;project lead&lt;/em&gt; role: project leads are responsible for ensuring that the processes are being followed. So, for example, project leads need to ensure that committers are engaging in the &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#ip&quot;&gt;IP due diligence process&lt;/a&gt;. But they are also responsible for ensuring that committers are “playing nice”. That is, they need to ensure that the level playing field and vendor neutrality bits in the EDP are being observed, but the EDP does not explicitly grant project leads any special powers to make technical decisions on behalf of the project team. &lt;/p&gt;



&lt;blockquote class=&quot;wp-block-quote&quot;&gt;&lt;p&gt;As the first link in the project leadership chain, one important power granted to project leads by the EDP is the ability to retire committers who are working against the interests of the team. This is essentially the &lt;em&gt;nuclear option&lt;/em&gt;  (&lt;a href=&quot;https://www.merriam-webster.com/dictionary/nuclear%20option&quot;&gt;per Merriam-Webster&lt;/a&gt;,  “an extreme option regarded as a drastic step or last resort”) and it should be used with care.&lt;/p&gt;&lt;/blockquote&gt;



&lt;p&gt;Other than defining committers and project leads, the EDP says nothing about how teams organize. We expect that project teams sort this out for themselves.&lt;/p&gt;



&lt;p&gt;While it is natural to have one or more committers become technical leaders in the project team, there is no formal &lt;em&gt;technical lead&lt;/em&gt; role defined in the EDP. Likewise, while it is natural for certain members of a specification project team to become leaders in the specification process, there is no formal notion of &lt;em&gt;specification lead&lt;/em&gt; (or “spec lead”) defined in the &lt;a href=&quot;https://www.eclipse.org/projects/efsp/&quot;&gt;Eclipse Foundation Specification Process&lt;/a&gt; (EFSP). Any de facto technical or specification lead does not have any special authority beyond that which is granted to them by the other project committers. &lt;/p&gt;



&lt;p&gt;So the committers in a project team have some say over who their leaders are and what powers they grant to those leaders. While the role is not specifically defined for this sort of thing, the project lead role &lt;em&gt;could&lt;/em&gt; be granted decision making powers. It is completely reasonable for a project team to decide, for example, that somebody in the project lead role must approve of all commits and anybody with that role can mitigate potential rogue actions by rolling back commits. One of the key benefits of organizing in this manner is that project lead is an &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#elections-pl&quot;&gt;elected position&lt;/a&gt;, so project committers have a build-in process for capturing the decision to grant those extra powers.&lt;/p&gt;



&lt;p&gt;So how does all of this work?&lt;/p&gt;



&lt;p&gt;For many open source projects, the committers follow the natural leaders, and that’s the end of it. But when a more formal relationship is desired, it must be arrived at by consensus of the project team (via public channels) and documented clearly so that everybody can understand how the project team works (making it very clear how a project team works is a critically important aspect of growing diversity in your project team). If the project team decides, for example, that all committers must contribute their updates as pull requests that may only be merged by a project lead, that must be documented (it’s fairly common for project teams to require that pull requests from one committer be merged by a different committer). When the role is formally defined, it’s also important to document how a committer ascends to into that role (to be clear, in the spirit of vendor neutrality, this criteria cannot be based on employment status).&lt;/p&gt;



&lt;p&gt;Note that any rules that a project team decides to adopt don’t have to apply homogeneously across the entire project; a specification project team could decide, for example, that all contributions of text to a specification document must be approved by project lead before they can be merged, but that all committers can just merge their contributions to an API.&lt;/p&gt;



&lt;p&gt;While I have your attention… I’d like to also highlight that the Eclipse Development Process says nothing about day-to-day development within a project. It is the project team’s responsibility to decide things like development methodology, merit criteria for new committers and project leads, etc.. &lt;/p&gt;
			&lt;div id=&quot;atatags-26942-5e2f50db1ae84&quot;&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 27 Jan 2020 21:04:58 +0000</pubDate>
</item>
<item>
	<title>vert.x project: Eclipse Vert.x 3.8.5</title>
	<guid isPermaLink="true">https://vertx.io/blog/eclipse-vert-x-3-8-5</guid>
	<link>https://vertx.io/blog/eclipse-vert-x-3-8-5</link>
	<description>&lt;article&gt;&lt;p&gt;We have just released Vert.x 3.8.5, a bug fix release of Vert.x 3.8.x.&lt;/p&gt;
&lt;p&gt;Since the release of Vert.x 3.8.5, quite a few bugs have been reported. We would like to thank you all for reporting these issues.&lt;/p&gt;
&lt;p&gt;Vert.x 3.8.5 deprecations and breaking changes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vert-x3/wiki/wiki/3.8.5-Deprecations-and-breaking-changes&quot;&gt;https://github.com/vert-x3/wiki/wiki/3.8.5-Deprecations-and-breaking-changes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vert.x 3.8.5 release notes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vert-x3/wiki/wiki/3.8.5-Release-Notes&quot;&gt;https://github.com/vert-x3/wiki/wiki/3.8.5-Release-Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The artifacts have been deployed to &lt;a href=&quot;http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.vertx%22%20AND%20v%3A%223.8.%22&quot;&gt;Maven Central&lt;/a&gt; and you can get the distribution on &lt;a href=&quot;https://bintray.com/vertx/downloads/distribution/3.8.4/view&quot;&gt;Bintray&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can bootstrap a Vert.x 3.8.5 project using &lt;a href=&quot;https://start.vertx.io&quot;&gt;https://start.vertx.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The event bus client using the SockJS bridge are available from NPM, Bower and as a WebJar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/vertx3-eventbus-client&quot;&gt;https://www.npmjs.com/package/vertx3-eventbus-client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vert-x3/vertx-bus-bower&quot;&gt;https://github.com/vert-x3/vertx-bus-bower&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.webjars.org/&quot;&gt;http://www.webjars.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docker images are also available on the &lt;a href=&quot;https://hub.docker.com/u/vertx/&quot;&gt;Docker Hub&lt;/a&gt;. The Vert.x distribution is also available from &lt;a href=&quot;http://sdkman.io/index.html&quot;&gt;SDKMan&lt;/a&gt; and &lt;a href=&quot;http://brew.sh/&quot;&gt;HomeBrew&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy coding and see you soon on our user or dev &lt;a href=&quot;https://vertx.io/community&quot;&gt;channels&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;</description>
	<pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Mat Booth: Eclipse 2019-12 Now Available From Flathub</title>
	<guid isPermaLink="false">tag:blog.matbooth.co.uk,2020-01-20:/12-eclipse-now-in-flathub.html/</guid>
	<link>http://blog.matbooth.co.uk/12-eclipse-now-in-flathub.html</link>
	<description>&lt;p&gt;How to get the latest release of Eclipse from Flathub.&lt;/p&gt;</description>
	<pubDate>Mon, 20 Jan 2020 16:00:00 +0000</pubDate>
</item>
<item>
	<title>Jeremie Bresson: JDT without Eclipse</title>
	<guid isPermaLink="false">blog/2020/2020-01-17_jdt-without-eclipse.html</guid>
	<link>http://jmini.github.io/blog/2020/2020-01-17_jdt-without-eclipse.html</link>
	<description>&lt;div id=&quot;preamble&quot;&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;The &lt;a href=&quot;https://www.eclipse.org/jdt/&quot;&gt;JDT&lt;/a&gt; (Java Development Tools) is an important part of Eclipse IDE but it can also be used without Eclipse.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;For example the Spring Tools 4, which is nowadays a cross-platform tool (Visual Studio Code, Eclipse IDE, …), is highly using the JDT behind the scene. If you would like to know more, I recommend you this podcast episode: &lt;a href=&quot;https://soundcloud.com/a-bootiful-podcast/spring-tools-lead-martin-lippert&quot;&gt;Spring Tools lead Martin Lippert&lt;/a&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;A second known example is the Java Formatter that is also part of the JDT. Since a long time there are maven and gradle plugins that performs the same formatting as Eclipse IDE but as part of the build (often with the possibly to break the build when the code is wrongly formatted).&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Reusing the JDT has been made easier since 2017 when it was decided to publish each release and its dependencies on maven central (with following &lt;code&gt;groupId&lt;/code&gt;: &lt;code&gt;org.eclipse.jdt&lt;/code&gt;, &lt;code&gt;org.eclipse.platform&lt;/code&gt;). Stephan Herrmann did a lot of work to achieve this goal. I blogged about this: &lt;a href=&quot;https://jmini.github.io/blog/2017/2017-01-10_use-eclipse-jdt-in-java-app.html&quot;&gt;Use the Eclipse Java Development Tools in a Java SE application&lt;/a&gt; and I have pushed a simple example the Java Formatter is used in a simple &lt;code&gt;main(String[])&lt;/code&gt; method built by a classic minimal Maven project: &lt;a href=&quot;https://github.com/jmini/jdt-experiments/tree/master/java-formatter&quot;&gt;java-formatter&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;sect1&quot;&gt; 
 &lt;h2 id=&quot;workspace_or_not&quot;&gt;Workspace or not?&lt;/h2&gt; 
 &lt;div class=&quot;sectionbody&quot;&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;When using the JDT in an headless application, two cases needs to be distinguished:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;olist arabic&quot;&gt; 
   &lt;ol class=&quot;arabic&quot;&gt; 
    &lt;li&gt; &lt;p&gt;Some features (the parser, the formatter…) can be used in a simple Java main method.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Other features (search index, AST rewriter…) require a workspace. This imply that the code run inside an OSGi runtime.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;To illustrate this aspect, I took some of the examples provided by the site &lt;code&gt;www.programcreek.com&lt;/code&gt; in the blog post series &lt;a href=&quot;https://www.programcreek.com/2011/01/best-java-development-tooling-jdt-and-astparser-tutorials/&quot;&gt;Eclipse JDT Tutorials&lt;/a&gt; and I adapted them so that each code snippet can be executed inside a JUnit test. This is the &lt;a href=&quot;https://jmini.github.io/jdt-experiments/#programcreek-examples&quot;&gt;Programcreek examples&lt;/a&gt; project.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;I have split the unit-tests into two projects:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;ulist&quot;&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;&lt;code&gt;programcreek-standalone&lt;/code&gt; for the one that do not require OSGi. The maven project is really simple (using the default convention everywhere)&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;&lt;code&gt;programcreek-osgi&lt;/code&gt; for the one that must run inside an OSGi runtime. The &lt;a href=&quot;https://github.com/bndtools/bnd/tree/master/maven/bnd-maven-plugin&quot;&gt;bnd maven plugins&lt;/a&gt; are configured in the &lt;code&gt;pom.xml&lt;/code&gt; to take care of the OSGi stuff.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;If you run the test with Maven, it will work out-of-the box.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;If you would like to run them inside an IDE, you should use one that starts OSGi when executing the tests (in the same way the maven build is doing it). To get a bnd aware IDE, you can use &lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-12/r/eclipse-ide-java-developers&quot;&gt;Eclipse IDE for Java Developers&lt;/a&gt; with the additional plugin &lt;a href=&quot;https://bndtools.org/&quot;&gt;Bndtools&lt;/a&gt; installed, but there are other possibilities.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class=&quot;paragraph&quot;&gt; 
   &lt;p&gt;Source code can be found on GitHub: &lt;a href=&quot;https://github.com/jmini/jdt-experiments/tree/master/programcreek-examples&quot;&gt;programcreek-examples&lt;/a&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</description>
	<pubDate>Thu, 16 Jan 2020 23:00:00 +0000</pubDate>
</item>
<item>
	<title>Stephan Herrmann: Oracle made me a Stackoverflow Guru</title>
	<guid isPermaLink="false">http://objectteams.wordpress.com/?p=677</guid>
	<link>https://objectteams.wordpress.com/2020/01/16/oracle-made-me-a-stackoverflow-guru/</link>
	<description>&lt;p&gt;Just today Oracle helped me to become a “&lt;a href=&quot;https://stackoverflow.com/help/badges/18/guru&quot;&gt;Guru&lt;/a&gt;” on &lt;a href=&quot;https://stackoverflow.com&quot;&gt;Stackoverflow&lt;/a&gt;! How did they do it? By doing nothing.&lt;/p&gt;
&lt;p&gt;In former times, I was periodically enraged, when Oracle didn’t pay attention to the feedback I was giving them during my work on ecj (the Eclipse Compiler for Java) – &lt;em&gt;at least not the attention that I had hoped for&lt;/em&gt; (to be fair: there was a lot of good communication, too). At those times I had still hoped I could help make Java a language that is completely and unambiguously defined by specifications. Meanwhile I recognized that Java is at least three languages: the language defined by &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se13/html/index.html&quot;&gt;JLS&lt;/a&gt; etc., the language implemented by javac, and the language implemented by ecj (and no chance to make ecj to conform to both others). I realized that &lt;a href=&quot;https://objectteams.wordpress.com/2017/04/02/several-languages-java-8/&quot;&gt;we were not done with Java 8&lt;/a&gt; even 3 years after its release. Three more years later it’s still much the same.&lt;/p&gt;
&lt;p&gt;So let’s move on, haven’t things improved in subsequent versions of Java? One of the key new rules in Java 9 is, that&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;“If [a qualified package name] does not name a package that is uniquely visible to the current module (&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se13/html/jls-7.html#jls-7.4.3&quot;&gt;§7.4.3&lt;/a&gt;), then a compile-time error occurs”.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Simple and unambiguous. That’s what compilers have to check.&lt;/p&gt;
&lt;p&gt;Except: javac doesn’t check for uniqueness if one of the modules involved is the “unnamed module”.&lt;/p&gt;
&lt;p&gt;In 2018 there was some confusion about this, and during &lt;a href=&quot;https://stackoverflow.com/questions/51094274/eclipse-cant-find-xml-related-classes-after-switching-build-path-to-jdk-10&quot;&gt;discussion on stackoverflow&lt;/a&gt; I raised this &lt;a href=&quot;http://mail.openjdk.java.net/pipermail/jigsaw-dev/2018-December/014076.html&quot;&gt;issue to the jigsaw-dev mailing list&lt;/a&gt;. A &lt;a href=&quot;https://bugs.openjdk.java.net/browse/JDK-8215739&quot;&gt;bug was raised against javac&lt;/a&gt;, &lt;a href=&quot;http://mail.openjdk.java.net/pipermail/jigsaw-dev/2018-December/014077.html&quot;&gt;confirmed to be a bug by spec lead Alex Buckley&lt;/a&gt;. I summarized the situation in &lt;a href=&quot;https://stackoverflow.com/questions/51094274/eclipse-cant-find-xml-related-classes-after-switching-build-path-to-jdk-10/53824670#53824670&quot;&gt;my answer on stackoverflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This bug could have been easily fixed in javac version 12, but wasn’t. Meanwhile upvotes on my answer on stackoverflow started coming in. The same for Java 13. The same for Java 14. And yet no visible activity on the javac bug. You need ecj to find if your program violates this rule of JLS.&lt;/p&gt;
&lt;p&gt;Today the 40th upvote earned me the “Guru” tag on stackoverflow.&lt;/p&gt;
&lt;p&gt;So, please Oracle, keep that bug unresolved, it will earn me a lot of reputation for a bright future – by doing: nothing &lt;img alt=&quot;ðŸ™‚&quot; class=&quot;wp-smiley&quot; src=&quot;https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 16 Jan 2020 18:40:45 +0000</pubDate>
</item>
<item>
	<title>Mike Milinkovich: Moving Forward With Jakarta EE 9</title>
	<guid isPermaLink="false">http://eclipse-foundation.blog/?p=1518</guid>
	<link>https://eclipse-foundation.blog/2020/01/16/moving-forward-with-jakarta-ee-9/</link>
	<description>&lt;p&gt;On behalf of the Jakarta EE Working Group, I am excited to announce the unanimous approval of the &lt;a href=&quot;https://eclipse-ee4j.github.io/jakartaee-platform/jakartaee9/JakartaEE9ReleasePlan&quot;&gt;plan for Jakarta EE 9&lt;/a&gt;, with an anticipated mid-2020 release. Please note that the project team believes this timeline is aggressive, so think of this as a plan of &lt;i&gt;intent&lt;/i&gt; with early estimate dates. The milestone dates will be reviewed and possibly adjusted at each release review.&lt;/p&gt;
&lt;p&gt;If you have any interest at all in the past, present, or future of Java, I highly recommend that you read that plan document, as Jakarta EE 9 represents a major inflection point in the platform.&lt;/p&gt;
&lt;p&gt;The key elements of  this Jakarta EE 9 release plan are to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;move all specification APIs to the jakarta namespace (sometimes referred to as the “big bang”);&lt;/li&gt;
&lt;li&gt;remove unwanted or deprecated specifications;&lt;/li&gt;
&lt;li&gt;minor enhancements to a small number of specifications;&lt;/li&gt;
&lt;li&gt;add no new specifications, apart from specifications pruned from Java SE 8 where appropriate; and&lt;/li&gt;
&lt;li&gt;Java SE 11 support.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What is not in the plan is the addition of any significant new functionality. That is because the goals of this Jakarta EE 9 release plan are to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lower the barrier of entry to new vendors and implementations to achieve compatibility;&lt;/li&gt;
&lt;li&gt;make the release available rapidly as a platform for future innovation; and&lt;/li&gt;
&lt;li&gt;provide a platform that developers can use as a stable target for testing migration to the new namespace.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Moving a platform and ecosystem the size and scale of Jakarta EE takes time and careful planning. After a great deal of discussion the community consensus was that using EE 9 to provide a clear transition to the jakarta namespace, and to pare down the platform would be the best path to future success. While work on the EE 9 platform release is proceeding, individual component specification teams are encouraged to innovate in their individual specifications, which will hopefully lead to a rapid iteration towards the Jakarta EE 10 release.&lt;/p&gt;
&lt;p&gt;Defining this release plan has been an enormous community effort. A lot of time and energy went into its development. It has been exciting to watch the … ummm &lt;i&gt;passionate&lt;/i&gt;…. discussions evolve towards a pretty broad consensus on this approach. I would like to particularly recognize the contributions of Steve Millidge, Kevin Sutter, Bill Shannon, David Blevins, and Scott Stark for their tireless and occasionally thankless work in guiding this process.&lt;/p&gt;
&lt;p&gt;The Jakarta EE Working Group has been busy working on creating a Program Plan, Marketing Plan and Budget for 2020. The team has also been very busy with creating a plan for the Jakarta EE 9 release. The Jakarta EE Platform project team, as requested, has delivered a proposal plan to the Steering Committee. With their endorsement, it will be voted on by the Specification Committee at their first meeting in January 2020.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Retrospective&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;The Jakarta EE 9 release is going to be an important step in the evolution of the platform, but it is important to recognize the many accomplishments that happened in 2019 that made this plan possible.&lt;/p&gt;
&lt;p&gt;First, the Eclipse Foundation and Oracle &lt;a href=&quot;https://blogs.eclipse.org/post/mike-milinkovich/update-jakarta-ee-rights-java-trademarks&quot;&gt;successfully completed some very complex negotiations&lt;/a&gt; about how Java EE would be evolved under the community-led Jakarta EE process. Although the Jakarta EE community cannot evolve the specifications under the javax namespace, we were still able to fully transition the Java EE specifications to the Eclipse Foundation. That transition led to the second major accomplishment in 2019: &lt;a href=&quot;https://blogs.eclipse.org/post/mike-milinkovich/welcome-future-cloud-native-java&quot;&gt;the first release of Jakarta EE&lt;/a&gt;. Those two milestones were, in my view, absolutely key accomplishments. They were enabled by a number of other large efforts, such as creating the &lt;a href=&quot;https://www.eclipse.org/projects/efsp/&quot;&gt;Eclipse Foundation Specification Process&lt;/a&gt;, significant revisions to our IP Policy, and establishing the &lt;a href=&quot;https://jakarta.ee/legal/trademark_guidelines/&quot;&gt;Jakarta EE compatibility program&lt;/a&gt;. But ultimately, the most satisfying result of all of this effort is the fact that we have seven fully compatible &lt;a href=&quot;https://jakarta.ee/compatibility/&quot;&gt;Jakarta EE 8 products&lt;/a&gt;, with more on the way.&lt;/p&gt;
&lt;p&gt;The Jakarta EE community was also incredibly active in 2019. Here are just a few of the highlights:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jakartaone.org/2019/&quot;&gt;JakartaOne Livestream&lt;/a&gt; was a great success, with over 1400 attendees from around the world enjoying eighteen hours of material.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.oracle.com/java/2019-dukes-choice-award-winners&quot;&gt;Jakarta EE is a 2019 Duke’s Choice Award Winner&lt;/a&gt;, recognizing its open source contribution.&lt;/li&gt;
&lt;li&gt;We published the second annual &lt;a href=&quot;https://blogs.eclipse.org/post/mike-milinkovich/cloud-native-imperative-%E2%80%94-results-2019-jakarta-ee-developer-survey&quot;&gt;Jakarta EE Developers Survey&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2019 was a very busy year, and it laid the foundation for a very successful 2020. I, and the entire Jakarta EE community, look forward to the exciting progress and innovation coming in 2020.&lt;/p&gt;</description>
	<pubDate>Thu, 16 Jan 2020 17:06:50 +0000</pubDate>
</item>
<item>
	<title>Eclipse Dirigible: Release 4.2</title>
	<guid isPermaLink="false">http://dirigible.io/release/2020/01/14/news_new_release_4_2</guid>
	<link>http://dirigible.io/release/2020/01/14/news_new_release_4_2.html</link>
	<description>&lt;p&gt;New version &lt;a href=&quot;https://download.eclipse.org/dirigible/drops/R-4.2-202001141444/index.html&quot;&gt;4.2&lt;/a&gt; has been released.&lt;/p&gt;

&lt;p&gt;Release is of &lt;em&gt;Type B&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;features&quot;&gt;Features&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;OData artefact for declarative service exposure (*.odata)&lt;/li&gt;
  &lt;li&gt;Pretty names parameter for tables and columns names&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;fixes&quot;&gt;Fixes&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Dependencies fixes&lt;/li&gt;
  &lt;li&gt;Minor fixes&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;statistics&quot;&gt;Statistics&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;64K+ Sessions&lt;/li&gt;
  &lt;li&gt;45K+ Users&lt;/li&gt;
  &lt;li&gt;180 Countries&lt;/li&gt;
  &lt;li&gt;356 Repositories in DirigibleLabs&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;operational&quot;&gt;Operational&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Available packages for download - &lt;a href=&quot;https://download.eclipse.org/dirigible/drops/R-4.2-202001141444/index.html&quot;&gt;https://download.eclipse.org/dirigible/drops/R-4.2-202001141444/index.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Docker images at Docker Hub under DirigibleLabs organization:	&lt;a href=&quot;https://hub.docker.com/u/dirigiblelabs/&quot;&gt;https://hub.docker.com/u/dirigiblelabs/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Maven Central artifacts by org.eclipse.dirigible namespace: &lt;a href=&quot;https://mvnrepository.com/artifact/org.eclipse.dirigible&quot;&gt;https://mvnrepository.com/artifact/org.eclipse.dirigible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The full list of bug-fixes and enhancements can be found here: &lt;a href=&quot;https://github.com/eclipse/dirigible/milestone/29?closed=1&quot;&gt;https://github.com/eclipse/dirigible/milestone/29?closed=1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The source code is available at GitHub repository here: &lt;a href=&quot;https://github.com/eclipse/dirigible/tree/4.2.0&quot;&gt;https://github.com/eclipse/dirigible/tree/4.2.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The instant trial is updated accordingly with the released version here: &lt;a href=&quot;http://trial.dirigible.io&quot;&gt;http://trial.dirigible.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;enjoy&quot;&gt;Enjoy!&lt;/h4&gt;</description>
	<pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Jeremie Bresson: Building and running Equinox with maven without Tycho</title>
	<guid isPermaLink="false">blog/2020/2020-01-13_equinox-without-tycho.html</guid>
	<link>http://jmini.github.io/blog/2020/2020-01-13_equinox-without-tycho.html</link>
	<description>&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Eclipse Tycho is a great way to let maven build PDE based projects. But the Plug-in Development Environment (PDE) model is not the only way to work with OSGi.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;In particular, since 2 or 3 years the Eclipse Platform jars (including the Equinox jars) are regularly published on Maven Central (check the artifacts having &lt;code&gt;org.eclipse.platform&lt;/code&gt; as &lt;code&gt;groupId&lt;/code&gt;).&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I was looking for an alternative to P2 and to the target-platform mechanism.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;imageblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;img alt=&quot;bnd and bndtools logo&quot; src=&quot;http://jmini.github.io/blog/2020/2020-01-13_bnd-bndtools.png&quot; /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Bnd and Bndtools are always mentioned as potential alternative to PDE (I attended several talks discussing this at EclipseCon 2018: &lt;a href=&quot;https://www.eclipsecon.org/europe2018/sessions/migrating-pde-bndtools-practice&quot;&gt;Migrating from PDE to Bndtools in Practice&lt;/a&gt;, &lt;a href=&quot;https://www.eclipsecon.org/europe2018/sessions/zero-professional-osgi-project-minutes&quot;&gt;From Zero to a Professional OSGi Project in Minutes&lt;/a&gt;). So I decided to explore this path.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This StackOverflow question catches my attention: &lt;a href=&quot;https://stackoverflow.com/questions/52776222/how-to-start-with-osgi&quot;&gt;How to start with OSGi&lt;/a&gt;. I had a close look at the answer provided by Peter Kriens (the founder of the Bnd and Bndtools projects), where he discusses the different possible setup:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;ulist&quot;&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;Maven Only&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Gradle Only&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Eclipse, M2E, Maven, and Bndtools&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Eclipse, Bndtools, Gradle&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Even in the &quot;Maven Only&quot; or &quot;Gradle Only&quot; setups, the proposed solution relies on plugins using bnd under the hood.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;imageblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;img alt=&quot;How to start?&quot; src=&quot;http://jmini.github.io/blog/2020/2020-01-13_how-to-start.png&quot; /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;My project is quite simple, the dependencies are already on maven central. I will not have a complex use-case with multiple versions of the same library or with platform dependent artifacts. So fetching the dependencies with maven is sufficient.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I decided to try the &quot;Maven Only&quot; model.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;imageblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;img alt=&quot;How to start?&quot; src=&quot;http://jmini.github.io/blog/2020/2020-01-13_effective-osgi-logo.png&quot; /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;I was not sure to understand how to use the different &lt;a href=&quot;https://github.com/bndtools/bnd/tree/master/maven/bnd-maven-plugin&quot;&gt;bnd maven plugins&lt;/a&gt;: &lt;code&gt;bnd-maven-plugin&lt;/code&gt;, &lt;code&gt;bnd-indexer-maven-plugin&lt;/code&gt;, &lt;code&gt;bnd-testing-maven-plugin&lt;/code&gt;, &lt;code&gt;bnd-export-maven-plugin&lt;/code&gt; …&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Luckily I found the slides of the &lt;a href=&quot;https://www.slideshare.net/mfrancis/bndtools-and-maven-a-brave-new-world-n-bartlett-t-ward&quot;&gt;Bndtools and Maven: A Brave New World&lt;/a&gt; workshop (given at EclipseCon 2017) and the corresponding git repository: &lt;a href=&quot;https://github.com/paremus/osgi-community-event2017&quot;&gt;osgi-community-event2017&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The corresponding &lt;a href=&quot;https://github.com/effectiveosgi/maven-archetypes&quot;&gt;effective-osgi maven archetypes&lt;/a&gt; used during the workshop are still working well. I could follow the step-by-step guide (in the readme of the maven archetypes project). I got everything working as described and I could find enough explanations about the generated projects. I think I understood what I did and this is very important when you start.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;After some cleanup and a switch from Apache Felix to Eclipse Equinox, I got my running setup and I answered my question: &quot;&lt;em&gt;How to start with OSGi without PDE and Tycho&lt;/em&gt;&quot;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;The corresponding code is in this folder: &lt;a href=&quot;https://github.com/jmini/bnd-experiments/tree/master/effectiveosgi-example&quot;&gt;effectiveosgi-example&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt;</description>
	<pubDate>Sun, 12 Jan 2020 23:00:00 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Jakarta EE Community Update January 2020</title>
	<guid isPermaLink="false">6754 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-update-january-2020</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;Welcome to our first update of 2020. As we start the new year, I want to wish you all the best. We have a lot to look forward to in 2020 as it will be the first year with multiple Jakarta EE releases. What a bright and optimistic way to start a new year!&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;As we ramp up our 2020 activities, here’s a look back at Jakarta EE highlights from the last few weeks in November and December of 2019. &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;The Jakarta EE 8 Retrospective Is Complete&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;As we mentioned in our last update, the Jakarta EE Steering Committee asked the community to provide feedback on the Jakarta EE 8 release so we can make improvements in Jakarta EE 9 and future releases.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We’re happy to tell you that feedback has now been collected, analyzed, and summarized. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To learn more about the results of the retrospective, keep an eye out for a blog post on the topic, but also, please join us for the January 15 at 11:00 a.m. EST using&lt;a href=&quot;https://eclipse.zoom.us/j/267901694&quot;&gt; this meeting ID&lt;/a&gt; where this topic will be on the Agenda.&lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt; The Jakarta EE 9 Release Plan Is Ready for Specification Committee Review&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;The Jakarta EE Platform Project team, led by Kevin Sutter and Steve Millidge, has been working very hard to create the detailed Jakarta EE 9 release plan. As promised, the plan has been created, presented, and endorsed by the Jakarta EE Steering Committee. The next step is for the Specification Committee to review it and vote on it early this year.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;You can read the minutes of the Jakarta EE Platform Project team meetings&lt;a href=&quot;https://eclipse-ee4j.github.io/jakartaee-platform/minutes/minutes.html&quot;&gt; here&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;For the latest updates on Jakarta EE 9 release planning, listen to the recording of the December Jakarta EE update call &lt;a href=&quot;http://www.crowdcast.io/e/communitycall_jan&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Reminder: We Need Your Help to Jakartify Specifications&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;Just a reminder that we now have the copyright for quite a number of Java EE specifications and we need the community to Jakartify them so they can be contributed to Jakarta EE.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To help you get started:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·      The Specification Committee has created a document that explains&lt;a href=&quot;https://github.com/jakartaee/specification-committee/blob/master/steps_javaee_to_jakartaee.adoc&quot;&gt; how to convert Java EE specifications to Jakarta EE&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·      Ivar Grimstad provided a demo during the community call in October. You can&lt;a href=&quot;https://www.youtube.com/watch?v=s8Kwz5_u88Y&amp;amp;list=PLy7t4z5SYNaSY0Um6Vbez3G5Lc2AMaMw7&amp;amp;index=5&quot;&gt; view it here&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;And, here’s the list of specifications that are ready for the community to Jakartify.&lt;/p&gt;

&lt;table&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;td&gt;
			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Annotations&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Enterprise Beans&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Expression Language&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Security&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Server Faces&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Interceptors&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Authorization&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Activation&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Managed Beans&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;
			&lt;/td&gt;
			&lt;td&gt;
			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Deployment&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta XML RPC&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Authentication&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Mail&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta XML Binding&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta RESTful Web Services&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Web Services Metadata&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta XML Web Services&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Connectors&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;
			&lt;/td&gt;
			&lt;td&gt;
			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Persistence&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta JSON Binding&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta JSON Processing&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Debugging Support for Other Languages&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Server Pages&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta Transactions&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;• Jakarta WebSocket&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Jakarta EE 2020 Marketing Plan Finalized&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;The Jakarta EE Marketing Operations Report for Q3 2019 was presented during the December Marketing Committee call. The report includes market activities and metrics for planned versus actual activities in Q3 and was generally well received by the committee.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;You can read the meeting minutes&lt;a href=&quot;https://jakarta.ee/meeting_minutes/&quot;&gt; here&lt;/a&gt;. &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Upcoming Events&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;Here’s a brief look at two upcoming Jakarta EE events to mark on your calendar:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·      JakartaOne Livestream – Japan, February 26&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;With the success of the JakartaOne Livestream event in September 2019, we’re expanding the initiative with more virtual conferences in more languages. Our next event is&lt;a href=&quot;https://jakartaone.org/japan2020/&quot;&gt; JakartaOne Livestream - Japan&lt;/a&gt; scheduled for February 26. Please follow the event on Twitter @JakartaOneJPN for all the details. Registration will open shortly. &lt;strong&gt;Keep in mind this entire event will be presented in Japanese&lt;/strong&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·      Cloud Native for Java (CN4J) Day at KubeCon Amsterdam, March 30&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;CN4J day on March 30 is a full day (9:00 a.m.-5:00 p.m.) of expert talks, demos, and thought-provoking sessions focused on enterprise applications implemented using Jakarta EE and Eclipse MicroProfile on Kubernetes. This event is a great opportunity to meet with industry and community leaders, to better understand key aspects of Jakarta EE and MicroProfile technologies, and to share your ideas with ecosystem innovators. Learn more about the event&lt;a href=&quot;https://eclipse-5413615.hs-sites.com/cn4j-day&quot;&gt; here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Join Community Update Calls&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;Every month, the Jakarta EE community holds a community call for everyone in the Jakarta EE community. For upcoming dates and connection details, see the&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Community Calendar&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; Our next call is Wednesday, January 15 at 11:00 a.m. EST using&lt;a href=&quot;https://www.crowdcast.io/e/communitycall_jan&quot;&gt; this meeting ID&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We know it’s not always possible to join calls in real time, so here are links to the recordings and presentations:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·     &lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaSY0Um6Vbez3G5Lc2AMaMw7&quot;&gt; The complete playlist&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·     &lt;a href=&quot;https://www.youtube.com/watch?v=yrHCCAv65L0&amp;amp;list=PLy7t4z5SYNaSY0Um6Vbez3G5Lc2AMaMw7&amp;amp;index=2&amp;amp;t=326s&quot;&gt; December 11 call&lt;/a&gt; and&lt;a href=&quot;https://drive.google.com/drive/u/0/folders/16xP9-kEidAB6s_TEDPimSBCS2T5XNczc&quot;&gt; presentation&lt;/a&gt;, featuring Steve Millage discussing Jakarta EE 9 release planning, an update on Jakartifying specifications from Ivar Grimstad, and a call for action to help with the&lt;a href=&quot;https://www.youtube.com/watch?v=XYFYUKmK22g&amp;amp;list=PLy7t4z5SYNaSY0Um6Vbez3G5Lc2AMaMw7&amp;amp;index=4&amp;amp;t=3s&quot;&gt; Jakarta EE 2020 Program Plan and budget&lt;/a&gt; from Jakarta EE Steering Committee chair, Will Lyons.&lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;November and December Event Summary&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;We ended a very exciting year for Jakarta EE by participating in three major events:  &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·     &lt;a href=&quot;https://devoxx.be/&quot;&gt; Devoxx BE&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·     &lt;a href=&quot;https://events19.linuxfoundation.org/events/kubecon-cloudnativecon-north-america-2019/&quot;&gt; KubeCon NA&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;·     &lt;a href=&quot;https://2019.java2days.com/tag/sofia/&quot;&gt; Java2Days&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;We had members presenting at all three events and we’d like to sincerely thank them for their time and effort. A special shout-out to our Jakarta EE Developer Advocate, Ivar Grimstad, who presented multiple times and participated in a panel discussion at Java2Days.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Our members were also on hand at our booths at Devoxx BE and KubeCon NA to share their expertise, provide demos, and engage with attendees. Again, a huge thank you to everyone involved for their enthusiastic participation. Your engagement helps drive the success of the entire Jakarta EE community.&lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Stay Connected With the Jakarta EE Community&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;The Jakarta EE community is very active and there are a number of channels to help you stay up to date with all of the latest and greatest news and information. Tanja Obradovic’s&lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-engagement&quot;&gt; blog&lt;/a&gt; summarizes the community engagement plan, which includes:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;•  Social media:&lt;a href=&quot;https://twitter.com/jakartaee&quot;&gt; Twitter&lt;/a&gt;,&lt;a href=&quot;https://www.facebook.com/JakartaEE/&quot;&gt; Facebook&lt;/a&gt;,&lt;a href=&quot;https://www.linkedin.com/groups/13597511/&quot;&gt; LinkedIn Group&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;•  Mailing lists: jakarta.ee-community@eclipse.org and jakarta.ee-wg@eclipse.org&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;•  Newsletters, blogs, and emails:&lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt; Eclipse newsletter&lt;/a&gt;,&lt;a href=&quot;https://jakartablogs.ee/#main-content&quot;&gt; Jakarta EE blogs&lt;/a&gt;, monthly update emails to jakarta.ee-community@eclipse.org, and community blogs on&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1JflN_xJ9d5ZWu5VUbDV9Spj7mc8WuPGMfd6EZgabXz0/edit#gid=0&quot;&gt; “how are you involved with Jakarta EE”&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;•  Meetings:&lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot;&gt; Jakarta Tech Talks&lt;/a&gt;,&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Update&lt;/a&gt;, Jakarta Town Hall, and Eclipse Foundation events and conferences&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Subscribe to your preferred channels today. And, get involved in the&lt;a href=&quot;https://jakarta.ee/membership/&quot;&gt; Jakarta EE Working Group&lt;/a&gt; to help shape the future of open source, cloud native Java.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To learn more about Jakarta EE-related plans and check the date for the next Jakarta Tech Talk, be sure to bookmark the&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Community Calendar&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 09 Jan 2020 14:26:25 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: 4 Years at The Linux Foundation</title>
	<guid isPermaLink="false">https://www.aniszczyk.org/?p=4328</guid>
	<link>https://www.aniszczyk.org/2020/01/03/4-years-at-the-linux-foundation/</link>
	<description>&lt;p&gt;Late last year marked the 4th year anniversary of the formation of the &lt;a href=&quot;https://www.cncf.io/&quot;&gt;CNCF&lt;/a&gt; and me joining The Linux Foundation:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;… this also marks 4+ years since I joined the &lt;a href=&quot;https://twitter.com/linuxfoundation?ref_src=twsrc%5Etfw&quot;&gt;@linuxfoundation&lt;/a&gt;, after experiencing crazy startup growth/success at Twitter, I was looking for something more NOT startup… was somewhat suckered in by &lt;a href=&quot;https://twitter.com/jzemlin?ref_src=twsrc%5Etfw&quot;&gt;@jzemlin&lt;/a&gt; to join a &quot;chill, totally not like a startup&quot; nonprofit… &lt;a href=&quot;https://t.co/S3f5jmyqoT&quot;&gt;pic.twitter.com/S3f5jmyqoT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Chris Aniszczyk (@cra) &lt;a href=&quot;https://twitter.com/cra/status/1205147194673762304?ref_src=twsrc%5Etfw&quot;&gt;December 12, 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;As we enter 2020, it’s amusing for me to reflect on my decision to join The Linux Foundation a little over 4 years ago when I was looking for something new to focus on. I spent about 5 years at Twitter which felt like an eternity (the average tenure for a silicon valley employee is &lt;a href=&quot;https://workology.com/ep-31-employee-tenure-of-silicon-valleys-hottest-tech-companies/&quot;&gt;under 2 years&lt;/a&gt;), focused on open source and enjoyed the startup life of going from a hundred or so engineers to a couple of thousand. I truly enjoyed the ride, it was a high impact experience where we were able to open source projects that changed the industry for the better: &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; (changed front end development for the better), &lt;a href=&quot;https://twemoji.twitter.com/&quot;&gt;Twemoji&lt;/a&gt; (made emojis more open source friendly and embeddable), &lt;a href=&quot;http://mesos.apache.org/&quot;&gt;Mesos&lt;/a&gt; (pushed the state of art for open source infrastructure), co-founded &lt;a href=&quot;https://todogroup.org&quot;&gt;TODO Group&lt;/a&gt; (pushed the state of corporate open source programs forward) and more!&lt;/p&gt;
&lt;p&gt;When I was looking for change, I wanted to find an opportunity that could impact more than I could just do at one company. I had some offers from FAANG companies and amazing startups but eventually settled on the nonprofit Linux Foundation because I wanted to build an open source foundation from scratch, teach other companies about open source best practices and assumed non profit life would be a bit more relaxing than diving into a new company (&lt;strong&gt;I was wrong)&lt;/strong&gt;. Also, I was throughly &lt;span style=&quot;font-size: inherit;&quot;&gt;convinced that an openly governed foundation pushing Kubernetes, container specifications and adjacent independent cloud native technologies would be the right model to move open infrastructure forward.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;As we enter 2020, I realize that I’ve been with one organization for a long time and that puts me on edge as I enjoy challenges, chaos and dread anything that makes me comfortable or complacent. Also, I have a strong desire to focus on efforts that involve improving the state of security and privacy in a connected world, participatory democracy, climate change; also anything that pushes open source to new industries and geographies.&lt;/p&gt;
&lt;p&gt;While I’m always happy to entertain opportunities that align to my goals, the one thing that I do enjoy at the LF is that I’ve had the ability to build a variety of new open source foundations improving industries and communities: &lt;a href=&quot;https://cd.foundation/&quot;&gt;CDF&lt;/a&gt;, &lt;a href=&quot;https://foundation.graphql.org&quot;&gt;GraphQL Foundation&lt;/a&gt;, &lt;a href=&quot;https://www.opencontainers.org/&quot;&gt;Open Container Initiative&lt;/a&gt; (OCI), &lt;a href=&quot;https://prestodb.io&quot;&gt;Presto Foundation&lt;/a&gt;, &lt;a href=&quot;https://todogroup.org&quot;&gt;TODO Group&lt;/a&gt;, &lt;a href=&quot;https://uc.foundation&quot;&gt;Urban Computing Foundation&lt;/a&gt; and more.&lt;/p&gt;
&lt;p&gt;Anyways, thanks for reading and I look forward to another year of bringing open source practices to new industries and places, the world is better when we are collaborating openly.&lt;/p&gt;</description>
	<pubDate>Fri, 03 Jan 2020 09:54:28 +0000</pubDate>
</item>
<item>
	<title>Eclipse Dirigible: Release 4.1</title>
	<guid isPermaLink="false">http://dirigible.io/release/2019/12/27/news_new_release_4_1</guid>
	<link>http://dirigible.io/release/2019/12/27/news_new_release_4_1.html</link>
	<description>&lt;p&gt;New version &lt;a href=&quot;https://download.eclipse.org/dirigible/drops/R-4.1-201912271640/index.html&quot;&gt;4.1&lt;/a&gt; released.&lt;/p&gt;

&lt;p&gt;Release of &lt;em&gt;Type B&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;features&quot;&gt;Features&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Enchanced persistence models for references&lt;/li&gt;
  &lt;li&gt;Embedded mode and executable jar removed from distributions&lt;/li&gt;
  &lt;li&gt;Update to JDK 11&lt;/li&gt;
  &lt;li&gt;OData persistence layer&lt;/li&gt;
  &lt;li&gt;Ephemeral distibution for SAP Cloud Platform&lt;/li&gt;
  &lt;li&gt;Case sensitive parameter for tables and columns names&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;fixes&quot;&gt;Fixes&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Database API fixes&lt;/li&gt;
  &lt;li&gt;HTTP Client fixes&lt;/li&gt;
  &lt;li&gt;Custom datasources fixes&lt;/li&gt;
  &lt;li&gt;Quartz integrated with datasources management layer&lt;/li&gt;
  &lt;li&gt;Minor fixes&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;statistics&quot;&gt;Statistics&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;64K+ Sessions&lt;/li&gt;
  &lt;li&gt;45K+ Users&lt;/li&gt;
  &lt;li&gt;180 Countries&lt;/li&gt;
  &lt;li&gt;356 Repositories in DirigibleLabs&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;operational&quot;&gt;Operational&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Available packages for download - &lt;a href=&quot;https://download.eclipse.org/dirigible/drops/R-4.1-201912271640/index.html&quot;&gt;https://download.eclipse.org/dirigible/drops/R-4.1-201912271640/index.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Docker images at Docker Hub under DirigibleLabs organization:	&lt;a href=&quot;https://hub.docker.com/u/dirigiblelabs/&quot;&gt;https://hub.docker.com/u/dirigiblelabs/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Maven Central artifacts by org.eclipse.dirigible namespace: &lt;a href=&quot;https://mvnrepository.com/artifact/org.eclipse.dirigible&quot;&gt;https://mvnrepository.com/artifact/org.eclipse.dirigible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The full list of bug-fixes and enhancements can be found here: &lt;a href=&quot;https://github.com/eclipse/dirigible/milestone/28?closed=1&quot;&gt;https://github.com/eclipse/dirigible/milestone/28?closed=1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The source code is available at GitHub repository here: &lt;a href=&quot;https://github.com/eclipse/dirigible/tree/4.1.0&quot;&gt;https://github.com/eclipse/dirigible/tree/4.1.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The instant trial is updated accordingly with the released version here: &lt;a href=&quot;http://trial.dirigible.io&quot;&gt;http://trial.dirigible.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;enjoy&quot;&gt;Enjoy!&lt;/h4&gt;</description>
	<pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Eclipse Theia IDE – FAQ</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=42471</guid>
	<link>https://eclipsesource.com/blogs/2019/12/24/eclipse-theia-ide-faq/</link>
	<description>&lt;p&gt;In this article weÂ´ll answer the most frequently asked questions about the Eclipse Theia IDE, the open source platform for building...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2019/12/24/eclipse-theia-ide-faq/&quot; rel=&quot;nofollow&quot;&gt;Eclipse Theia IDE – FAQ&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 24 Dec 2019 00:00:26 +0000</pubDate>
</item>
<item>
	<title>Jens Reimann: An update on Eclipse IoT Packages</title>
	<guid isPermaLink="false">https://dentrassi.de/?p=4373</guid>
	<link>https://dentrassi.de/2019/12/19/update-on-eclipse-iot-packages/</link>
	<description>&lt;p&gt;A lot has happened, since &lt;a href=&quot;https://dentrassi.de/2019/09/10/from-building-blocks-to-iot-solutions/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;I wrote last about the Eclipse IoT Packages project&lt;/a&gt;. We had some great discussions at &lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;EclipseCon Europe&lt;/a&gt;, and started to work together online, having new ideas in the progress. Right before the end of the year, I think it is a good time to give an update, and peek a bit into the future.&lt;/p&gt;



&lt;h2&gt;Homepage&lt;/h2&gt;



&lt;p&gt;One of the first things we wanted to get started, was a home for the content we plan on creating. An important piece of the puzzle is to explain to people, what we have in mind. Not only for people that want to try out the various Eclipse IoT projects, but also to possible contributors. And in the end, an important goal of the project is to attract interested parties. For consuming our ideas, or growing them even further.&lt;/p&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter is-resized&quot;&gt;&lt;img alt=&quot;Eclipse IoT Packages logo&quot; class=&quot;wp-image-4377&quot; height=&quot;192&quot; src=&quot;https://dentrassi.de/wp-content/uploads/logo.svg&quot; width=&quot;453&quot; /&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;So we now have a logo, &lt;a href=&quot;https://www.eclipse.org/packages/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;a homepage&lt;/a&gt;, built using using templates in a continuous build system. We are in a position to start focusing on the actual content, and on the more tricky tasks and questions ahead. And should you want to create a PR for the homepage, you are more than welcome. There is also already some content, explaining the main goals, the way we want to move forward, and demo of a first package: “Package Zero”.&lt;/p&gt;



&lt;h2&gt;Community&lt;/h2&gt;



&lt;p&gt;While the homepage is a good entry point for people to learn about Eclipse IoT and packages, &lt;a href=&quot;https://github.com/eclipse/packages/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;our GitHub repository&lt;/a&gt; is the home for the community. And having some great discussions on GitHub, quickly brought up the need for &lt;a href=&quot;https://github.com/eclipse/packages/issues/4&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;a community call&lt;/a&gt; and &lt;a href=&quot;https://github.com/eclipse/packages/issues/6&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;a more direct communication channel&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;If you are interested in the project, come and join &lt;a href=&quot;https://www.eclipse.org/packages/contribute/#join-the-community-call&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;our bi-weekly community call&lt;/a&gt;. It is a quick, 30 minutes call at 16:00 CET, and open to everyone. Repeating every two weeks, starting 2019-12-02.&lt;/p&gt;



&lt;p&gt;The URL to the call is: &lt;a href=&quot;https://eclipse.zoom.us/j/317801130&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;https://eclipse.zoom.us/j/317801130&lt;/a&gt;. You can also subscribe to the &lt;a href=&quot;https://calendar.google.com/calendar/ical/lu98p1vc1ed4itl7n9qno3oogc%40group.calendar.google.com/public/basic.ics&quot;&gt;community calendar&lt;/a&gt; to get a reminder.&lt;/p&gt;



&lt;p&gt;In between calls, we have a chat room &lt;a href=&quot;https://gitter.im/eclipse/packages&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;eclipse/packages&lt;/a&gt; on Gitter.&lt;/p&gt;



&lt;h2&gt;Eclipse IoT Helm Chart Repository&lt;/h2&gt;



&lt;p&gt;One of the earliest discussion we had, was around the question of how and were we want to host the Helm charts. We would prefer not to author them ourselves, but let the projects contribute them. After all, the IoT packages project has the goal of enabling you to install a whole set of Eclipse IoT projects, with only a few commands. So the focus is on the integration, and the expert knowledge required for creating project Helm chart, is in the actual projects.&lt;/p&gt;



&lt;p&gt;On the other side, having a one-stop shop, for getting your Eclipse IoT Helm charts, sounds pretty convenient. So why not host our own Helm chart repository?&lt;/p&gt;



&lt;p&gt;Thanks to a company called &lt;a href=&quot;https://github.com/kiwigrid/helm-charts&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Kiwigrid&lt;/a&gt;, who contributed a CI pipeline for validating charts, we could easily extend our existing homepage publishing job, to also publish Helm charts. As a first chart, we published the &lt;a href=&quot;https://www.eclipse.org/ditto/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Ditto&lt;/a&gt; chart. And, as expected with Helm, installing it is as easy as:&lt;/p&gt;



&lt;div class=&quot;wp-block-columns&quot;&gt;
&lt;div class=&quot;wp-block-column&quot;&gt;
&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;a href=&quot;https://dentrassi.de/wp-content/uploads/h1.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-4387&quot; src=&quot;https://dentrassi.de/wp-content/uploads/h1-1024x427.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;/div&gt;



&lt;div class=&quot;wp-block-column&quot;&gt;
&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;a href=&quot;https://dentrassi.de/wp-content/uploads/h2.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-4388&quot; src=&quot;https://dentrassi.de/wp-content/uploads/h2-1024x427.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Of course having a single chart is only the first step. Publishing a single Helm charts isn’t that impressive. But getting an agreement on the community, getting the validation and publishing pipeline set up, attracting new contributors, that is definitely a big step in the right direction.&lt;/p&gt;



&lt;h2&gt;Outlook&lt;/h2&gt;



&lt;p&gt;I think that we now have a good foundation, for moving forward. We have a place called “home”, for documentation, code and community. And it looks like we have also been able to attract more people to the project.&lt;/p&gt;



&lt;p&gt;While our first package, “Package Zero”, still isn’t complete, it should be pretty close. Creating a first, joint deployment of Hono and Ditto is our immediate focus. And we will continue to work towards a first release of “Package Zero”. Finding a better name is still an item on the list.&lt;/p&gt;



&lt;p&gt;Having this foundation in place also means, that the time is right, for you to think about contributing your own Eclipse IoT Package. Contributions are always welcome.&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://dentrassi.de/2019/12/19/update-on-eclipse-iot-packages/&quot; rel=&quot;nofollow&quot;&gt;An update on Eclipse IoT Packages&lt;/a&gt; appeared first on &lt;a href=&quot;https://dentrassi.de&quot; rel=&quot;nofollow&quot;&gt;ctron's blog&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Thu, 19 Dec 2019 12:17:44 +0000</pubDate>
</item>
<item>
	<title>Webtools News: WTP 3.16 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink190</guid>
	<link>http://eclipse.org/webtools/releases/3.16</link>
	<description>&lt;div&gt;
		The Eclipse Web Tools Platform 3.16 has been released!
		&lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
		and updates can be performed using the
		Eclipse IDE 2019-12
		&lt;a href=&quot;http://download.eclipse.org/releases/2019-12/&quot;&gt;Update Site&lt;/a&gt;
		or through the
		&lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
		.
		Release 3.16 is included in the 2019-12
		&lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-12/r/eclipse-ide-enterprise-java-developers&quot;&gt;
			Eclipse IDE for Enterprise Java Developers
		&lt;/a&gt;
		, with selected portions also included in several
		&lt;a href=&quot;http://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
		. Adopters can download
		&lt;a href=&quot;http://download.eclipse.org/webtools/downloads/&quot;&gt;the R3.16 build&lt;/a&gt;
		directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink190&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 18 Dec 2019 22:42:59 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: EMF Forms and EMF Client Platform 1.23.0 released!</title>
	<guid isPermaLink="false">https://eclipsesource.com/?p=42438</guid>
	<link>https://eclipsesource.com/blogs/2019/12/18/emf-forms-and-emf-client-platform-1-23-0-released/</link>
	<description>&lt;p&gt;We are happy to announce that with the Eclipse Release 2019-12, we have also shipped  EMF Forms and EMF Client Platform...&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://eclipsesource.com/blogs/2019/12/18/emf-forms-and-emf-client-platform-1-23-0-released/&quot; rel=&quot;nofollow&quot;&gt;EMF Forms and EMF Client Platform 1.23.0 released!&lt;/a&gt; appeared first on &lt;a href=&quot;https://eclipsesource.com&quot; rel=&quot;nofollow&quot;&gt;EclipseSource&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Wed, 18 Dec 2019 08:36:33 +0000</pubDate>
</item>
<item>
	<title>Alex Lagarde</title>
	<guid isPermaLink="true">https://alagarde.tumblr.com/post/189730641412</guid>
	<link>https://alagarde.tumblr.com/post/189730641412</link>
	<pubDate>Wed, 18 Dec 2019 01:51:34 +0000</pubDate>
</item>
<item>
	<title>Alex Lagarde: Video</title>
	<guid isPermaLink="true">https://alagarde.tumblr.com/post/189730554792</guid>
	<link>https://alagarde.tumblr.com/post/189730554792</link>
	<description>&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Wed, 18 Dec 2019 01:45:29 +0000</pubDate>
</item>
<item>
	<title>vert.x project: Eclipse Vert.x 4 milestone 4 released!</title>
	<guid isPermaLink="true">https://vertx.io/blog/eclipse-vert-x-4-milestone-4-released</guid>
	<link>https://vertx.io/blog/eclipse-vert-x-4-milestone-4-released</link>
	<description>&lt;article&gt;&lt;p&gt;We are extremely pleased to announce the fourth 4.0 milestone release of Eclipse Vert.x .&lt;/p&gt;
&lt;p&gt;Vert.x 4 is the evolution of the Vert.x 3.x series that will bring key features to Vert.x.&lt;/p&gt;
&lt;p&gt;This release aims to provide a reliable distribution of the current development of Vert.x 4 for people that
want to try it and provide feedback.&lt;/p&gt;
&lt;h4 id=&quot;futurisation&quot;&gt;Futurisation&lt;/h4&gt;
&lt;p&gt;Vert.x 4 extends the 3.x callback asynchronous model to a future/callback hybrid model.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;hljs java&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;NetClient&lt;/span&gt; &lt;/span&gt;{

  &lt;span class=&quot;hljs-comment&quot;&gt;// Since 3.0&lt;/span&gt;
  &lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; port, String host, Handler&amp;gt; handler)&lt;/span&gt;&lt;/span&gt;;

  &lt;span class=&quot;hljs-comment&quot;&gt;// New in 4.0&lt;/span&gt;
  &lt;span class=&quot;hljs-function&quot;&gt;Future &lt;span class=&quot;hljs-title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; port, String host)&lt;/span&gt;&lt;/span&gt;;
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This third milestone makes progress and fully covers with the following stack modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vert.x Shell&lt;/li&gt;
&lt;li&gt;Vert.x Mail Client&lt;/li&gt;
&lt;li&gt;Vert.x Consul Client&lt;/li&gt;
&lt;li&gt;Vert.x RabbitMQ Client&lt;/li&gt;
&lt;li&gt;Vert.x Stomp&lt;/li&gt;
&lt;li&gt;Vert.x Mongo Client&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;mail-client-improvements&quot;&gt;Mail client improvements&lt;/h4&gt;
&lt;p&gt;Our mail clients had nice contribution with the ability to use streaming payload for attachements and the
support for DKIM signatures.&lt;/p&gt;
&lt;h4 id=&quot;general-client-improvements&quot;&gt;General client improvements&lt;/h4&gt;
&lt;p&gt;Some Vert.x client are designed to be used within the verticle that created it while some can be shared between
verticles. This is a technical limitation that stems from the fact that client are implemented using Vert.x or Netty
(such as &lt;code&gt;HttpClient&lt;/code&gt;) and are bound to the underlying event-loop that powers them.&lt;/p&gt;
&lt;p&gt;In Vert.x 4 we decided to get away of this limitation to simplify the usage and the configuration of the clients. Of course
it is possible to continue confining clients within a verticle (for best performance) but clients can be now shared between
verticles when desired with a neglectible impact on performance (requiring message passing).&lt;/p&gt;
&lt;h4 id=&quot;security-improvements&quot;&gt;Security improvements&lt;/h4&gt;
&lt;p&gt;Finally here are a few improvements done in our security layer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vertx Auth is now decoupled to handle authn/authz as 2 independent functions thanks to @sbastiandev&lt;/li&gt;
&lt;li&gt;Auth Shiro is deprecated in favour of the new “auth properties” module and “auth ldap”&lt;/li&gt;
&lt;li&gt;Web CSRF tokens are session aware to allow multiple requests from the same user&lt;/li&gt;
&lt;li&gt;Initial support for webauthn&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;ramping-up-to-vert-x-4&quot;&gt;Ramping up to Vert.x 4&lt;/h4&gt;
&lt;p&gt;Instead of developing all new features exclusively in Vert.x 4, we introduce some of these features in the 3.x branch
so the community can benefit from them. The Vert.x 4 development focus on more fundamental changes that cannot be done
in the 3.x series.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Screenshot&quot; class=&quot;img-responsive&quot; src=&quot;https://vertx.io/assets/blog/vertx-4-milestone4-release/vertx-4-timeline.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;This is the forth milestone of Vert.x 4, you can of course expect more milestones to outline the progress of the effort.&lt;/p&gt;
&lt;p&gt;You can also read the previous milestone announces:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://vertx.io/blog/eclipse-vert-x-4-milestone-3-released&quot;&gt;https://vertx.io/blog/eclipse-vert-x-4-milestone-3-released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://vertx.io/blog/eclipse-vert-x-4-milestone-2-released&quot;&gt;https://vertx.io/blog/eclipse-vert-x-4-milestone-2-released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://vertx.io/blog/eclipse-vert-x-4-milestone-1-released&quot;&gt;https://vertx.io/blog/eclipse-vert-x-4-milestone-1-released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;finally&quot;&gt;Finally&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/vert-x3/wiki/wiki/4.0.0-Deprecations-and-breaking-changes&quot;&gt;deprecations and breaking changes&lt;/a&gt;
 can be found on the wiki.&lt;/p&gt;
&lt;p&gt;For this release there are no Docker images.,&lt;/p&gt;
&lt;p&gt;The release artifacts have been deployed to &lt;a href=&quot;https://search.maven.org/search?q=g:io.vertx%20AND%20v:4.0.0-milestone4&quot;&gt;Maven Central&lt;/a&gt; and you can get the distribution on &lt;a href=&quot;https://repo1.maven.org/maven2/io/vertx/vertx-stack-manager/4.0.0-milestone4/&quot;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can bootstrap a Vert.x 4.0.0-milestone4 project using &lt;a href=&quot;https://start.vertx.io&quot;&gt;https://start.vertx.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The documentation has been deployed on this preview web-site &lt;a href=&quot;https://vertx-ci.github.io/vertx-4-preview/docs/&quot;&gt;https://vertx-ci.github.io/vertx-4-preview/docs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That’s it! Happy coding and see you soon on our user or dev &lt;a href=&quot;https://vertx.io/community&quot;&gt;channels&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;</description>
	<pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Announcing Eclipse Ditto Release 1.0.0</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2019-12-12-release-announcement-100.html</guid>
	<link>https://www.eclipse.org/ditto/2019-12-12-release-announcement-100.html</link>
	<description>&lt;p&gt;Today the Eclipse Ditto is thrilled to announce the availability of Eclipse Ditto’s first major release
&lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/1.0.0&quot;&gt;1.0.0&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;maturity&quot;&gt;Maturity&lt;/h2&gt;

&lt;p&gt;The initial code contribution was done in October 2017, 2 years later and 2 releases 
(&lt;a href=&quot;https://www.eclipse.org/ditto/2018-11-28-release-announcement-080.html&quot;&gt;0.8.0&lt;/a&gt; and &lt;a href=&quot;https://www.eclipse.org/ditto/2019-07-10-release-announcement-090.html&quot;&gt;0.9.0&lt;/a&gt;) later, we 
think its time to graduate from the Eclipse “incubation” phase and officially declare the project as mature.&lt;/p&gt;

&lt;p&gt;Recent adoptions and contributions from our community show us that Eclipse Ditto solves problems which also other
companies have. Adopters add Eclipse Ditto as a central part of their own IoT platforms.&lt;/p&gt;

&lt;h3 id=&quot;api-stability&quot;&gt;API stability&lt;/h3&gt;

&lt;p&gt;Having reached 1.0.0, some additional promises towards “API stability” do apply:&lt;/p&gt;

&lt;h4 id=&quot;http-api-stability&quot;&gt;HTTP API stability&lt;/h4&gt;
&lt;p&gt;Ditto uses schema versioning (currently schema version 1 and 2) at the HTTP API level in order to being able to 
evolve APIs.
It is backward compatible to the prior versions 0.8.0 and 0.9.0.&lt;/p&gt;

&lt;h4 id=&quot;json-api-stability&quot;&gt;JSON API stability&lt;/h4&gt;
&lt;p&gt;Ditto kept its main JSON APIs (regarding things, policies and search) backwards compatible to 0.8.0 and 0.9.0 releases.
The JSON format of “connections” was changed since 0.9.0 and will from 1.0.0 on be kept backwards compatible as well.&lt;/p&gt;

&lt;h4 id=&quot;java-api-stability&quot;&gt;Java API stability&lt;/h4&gt;
&lt;p&gt;The Java APIs will for the 1.x release be kept backwards compatible, so only non-breaking additions to the APIs will be done. This is enforced by a Maven tooling.&lt;/p&gt;

&lt;p&gt;The following Java modules are treated as API for which compatibility is enforced:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ditto-json&lt;/li&gt;
  &lt;li&gt;ditto-model-*&lt;/li&gt;
  &lt;li&gt;ditto-signals-*&lt;/li&gt;
  &lt;li&gt;ditto-protocol-adapter&lt;/li&gt;
  &lt;li&gt;ditto-utils&lt;/li&gt;
  &lt;li&gt;ditto-client&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;scalability&quot;&gt;Scalability&lt;/h3&gt;

&lt;p&gt;The focus on the 0.9.0 and 1.0.0 releases regarding non-functionals were laid on horizontal scalability.&lt;/p&gt;

&lt;p&gt;With Eclipse Ditto 1.0.0 we are confident to face production grade scalability requirements being capable of handling 
millions of managed things.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main changes compared to the last release, &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_090.html&quot;&gt;0.9.0&lt;/a&gt;, are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;addition of a Java and a JavaScript client SDK in separate &lt;a href=&quot;https://github.com/eclipse/ditto-clients&quot;&gt;GitHub repo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;configurable OpenID Connect authorization servers&lt;/li&gt;
  &lt;li&gt;support for OpenID Connect / OAuth2.0 based authentication in Ditto Java Client&lt;/li&gt;
  &lt;li&gt;invoking custom foreign HTTP endpoints as a result of events/messages&lt;/li&gt;
  &lt;li&gt;ability to reflect Eclipse Hono’s device connection state in Ditto’s things&lt;/li&gt;
  &lt;li&gt;configurable throttling of max. consumed WebSocket commands / time interval&lt;/li&gt;
  &lt;li&gt;Addition of “definition” field in thing at model level containing the model ID a thing may follow&lt;/li&gt;
  &lt;li&gt;Improved connection response handling/mapping&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_100.html&quot;&gt;1.0.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>itemis: Xtext 2.20 Release</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/xtext-2.20-release</guid>
	<link>https://blogs.itemis.com/en/xtext-2.20-release</link>
	<description>&lt;p&gt;Right on time for the Eclipse 2019-12 Simultaneous Release, we have shipped Xtext 2.20. This time we focussed more on maintenance work than on features. As with each release, the world around us is spinning fast, and keeping the whole technology stack up-to-date and testing against it is quite time consuming.&lt;/p&gt;  
&lt;h2&gt;Let’s talk about Xtend&lt;/h2&gt; 
&lt;p&gt;For a long time, the Java language missed some features that could make a developer’s life easier. This was one of the reasons that a broad range of languages running on the Java Virtual Machine (JVM) became popular, Xtend being one of them. With its powerful lambda expressions, extension methods, and template support, Xtend had some sweet spots back in 2013, which Java did not have. And even with the availability of lambdas with Java 8, it took some years for projects to catch up with that. Xtend provided this for years, while still being able to produce Java 1.6-compliant code.&lt;/p&gt; 
&lt;p&gt;Now the (Java) world has changed, and some nice language features have been added to Java, making the gap to Xtend smaller. Back in 2013, we claimed Xtend to be the “Java 10 of today”. We are realistic enough to state that Xtend is not and will not be the “Java 17 of today”. However, there are still areas where we see Xtend as beneficial over other Java and other JVM languages. To be more specific, we still think that Xtend is the most powerful language supporting template expressions. The most common use case for this are code generators. Besides that, writing unit tests with Xtend feels much cleaner than with Java.&lt;/p&gt; 
&lt;p&gt;However, we decided to encourage to use Xtend only for these areas, and not as the primary general-purpose language. And we start doing this with the “New Project” wizard. The configuration that this wizard creates for a new Xtext project, will now use Java as the language for generated skeleton classes, so that newly-created projects (and especially new users) are using Java by default. This is just a changed default for the generated MWE2 workflow, and users, who still prefer to use Xtend for the generated artifacts, can simply modify the workflow file. We expect that those users are advanced anyway. Xtend will stay the default language for the code generator and unit test fragments.&lt;/p&gt; 
&lt;p&gt;Additionally, we have started to clean up the code base and to refactor some of the Xtend code to Java. As Xtend already is compiled into Java, this basically means that we take those sources and clean them up. This will be an ongoing maintenance work. If you like to contribute to Xtext, this would be a good starting point for refactoring contributions.&lt;/p&gt; 
&lt;h2&gt;New Xtend features&lt;/h2&gt; 
&lt;p&gt;After that being said, there is some good news about some features that have been added to Xtend’s Eclipse integration. We are very happy about some useful contributions from Vivien Jovet in this area.&lt;/p&gt; 
&lt;p&gt;A new refactoring has been implemented that allows the user to refactor a call to a static method either as static import or as a static extension. This allows the user to produce more readable and fluent code.&lt;/p&gt; 
&lt;p&gt;EMBED:&lt;/p&gt; 
&lt;img alt=&quot;Xtext_Release_2_20_refactoring_import_static_method&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Software%20Development/Xtext%202.20%20Release/Xtext_Release_2_20_refactoring_import_static_method.gif?width=871&amp;amp;name=Xtext_Release_2_20_refactoring_import_static_method.gif&quot; style=&quot;width: 871px; display: block; margin: 0px auto;&quot; width=&quot;871&quot; /&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;testing support&lt;/strong&gt; for Xtend has been improved:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An Xtend unit test can now be triggered within the Eclipse IDE when the cursor is located around the test class definition.&lt;/li&gt; 
 &lt;li&gt;As known from JDT’s JUnit integration, Xtend now also provides quickfixes if the JUnit library is missing on the classpath. By using the quickfix, the library can be added for either JUnit 4 or 5.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;It’s time to get rid off old generator workflows&lt;/h2&gt; 
&lt;p&gt;Already back in 2015, we changed to new Xtend-based generator fragments and deprecated the old Xpand-based language generator. If you still use an old generator workflow based on the &lt;em&gt;org.eclipse.xtext.generator&lt;/em&gt; bundle (the new bundle is &lt;em&gt;org.eclipse.xtext.xtext.generator&lt;/em&gt;, please note the duplicated &lt;em&gt;.xtext&lt;/em&gt; segment), then it is time for you to finally take action!&lt;/p&gt; 
&lt;p&gt;The old generator is based on the Xpand language, which is dormant for a while. We are refactoring Xtext to avoid any dependency on Xpand, except for the deprecated generator bundle. Also, we do not change the old generator templates anymore, so we strongly recommend to use the maintained new generator infrastructure. Although it is not scheduled yet, dropping the whole old generator completely is just a matter of time. So, please, if you still have any anciently-structured Xtext projects, migrate them to the recommended infrastructure! If you need help on this, get in contact with us. We have enough experience to help you quickly on that.&lt;/p&gt; 
&lt;h2&gt;Create new projects and files from the toolbar&lt;/h2&gt; 
&lt;p&gt;If you want to allow creation of projects and files for your DSL from the toolbar, then this is good news for you: The fragments for generating the infrastructure for wizards have been extended by an option called &lt;em&gt;generateToolbarButton&lt;/em&gt;. As the name already suggests, the generator fragments will generate the button to the toolbar, if this option is enabled in the fragment’s configuration in your generator workflow.&lt;/p&gt; 
&lt;h2&gt;Making our maintenance work easier&lt;/h2&gt; 
&lt;p&gt;With 4 releases per year and 3 milestone releases towards any release, it is quite some effort to make these releases. As we finished our hopefully last build infrastructure change to Eclipse JIRO with the previous release, we were able to invest a bit of time into enhancing our build pipelines again.&lt;/p&gt; 
&lt;p&gt;As a result, initiating a milestone or final release is mostly triggering a parameterized build job now and then waiting several hours until everything has been build. Actually, while I’m writing this article, the final Xtext release is being build for you, which has been triggered 3.5 hours before. Yes, it still builds that long. And it is still painful to orchestrate the build over all Xtext repositories. There are still some steps that require manual action (releasing to Maven Central, updating Eclipse Marketplace, sending notifications to the communication channels), but we slowly add all automatable tasks to the pipelines.&lt;/p&gt; 
&lt;p&gt;Also, we interacted with the Eclipse infrastructure staff to get us in the position that our technical build user is able to raise pull requests on GitHub automatically. This enabled us to create a bot update pipeline that lets us automate some frequently occurring update changes. This is, for example, updating the version, versions to use (like Tycho), the Orbit URL, etc. The job raises pull requests for us, so we can safely verify that nothing is missing and that everything is properly built. It is very much like these dependency update bots like &lt;a href=&quot;https://dependabot.com/&quot; style=&quot;font-style: italic; font-weight: normal;&quot; title=&quot;Link to dependabot.com (opens in a new tab)&quot;&gt;Dependabot&lt;/a&gt; that are coming up more and more, but tightly tailored to the very specific needs of the Xtext project. We are still at the beginning here. Some first pull requests merged for 2.20 have been created by the bot job. We expect that the bot will be triggered automatically in the future and that the bot user will become one of the most active Xtext contributors then.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;Xtext 2.20 is a maintenance release. For users of a recent Xtext version it will be a drop-in replacement. Users of old versions and project structures are recommended to upgrade their projects, in order to keep their projects compatible.&lt;/p&gt; 
&lt;p&gt;The Xtext project started to discourage the usage of Xtend where the latter’s language features do not have a significant benefit over Java. And internally, the project started to refactor the codebase to follow this recommendation.&lt;/p&gt; 
&lt;p&gt;For build and release engineering, the project improved towards more automated tasks and benefits from reduced manual maintenance tasks.&lt;/p&gt; 
&lt;p&gt;The project team is happy about receiving contributions. We are especially grateful about new feature ideas that are actively developed by contributors.&lt;/p&gt; 
&lt;p&gt;Do you want to know more? Have a look at the &lt;a href=&quot;https://www.eclipse.org/Xtext/releasenotes.html#/releasenotes/2019/03/05/version-2-17-0&quot; style=&quot;font-style: italic;&quot; title=&quot;Link to eclipse.org/Xtext (opens in a new tab)&quot;&gt;release notes for Xtext&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.eclipse.org/xtend/releasenotes.html#/releasenotes/2019/03/05/version-2-17-0&quot; title=&quot;Link to eclipse.org/Xtend (opens in a new tab)&quot;&gt;&lt;span style=&quot;font-style: italic;&quot;&gt;Xtend&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fxtext-2.20-release&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 03 Dec 2019 14:38:45 +0000</pubDate>
	<author>thoms@itemis.de (Karsten Thoms)</author>
</item>
<item>
	<title>Wayne Beaton: Yearly Release Reviews for Eclipse Projects</title>
	<guid isPermaLink="false">http://waynebeaton.wordpress.com/?p=5613</guid>
	<link>https://waynebeaton.wordpress.com/2019/12/02/yearly-release-reviews-for-eclipse-projects/</link>
	<description>&lt;p&gt;One of the key roles of he &lt;a href=&quot;https://wiki.eclipse.org/Architecture_Council&quot;&gt;Eclipse Architecture Council&lt;/a&gt; is to maintain the &lt;a href=&quot;http://www.eclipse.org/projects/dev_process/development_process.php&quot;&gt;Eclipse Development Process&lt;/a&gt; (EDP). Maintenance usually takes the form of an update every year or so. Updates to the EDP are approved by the Eclipse Board of Directors. The Architecture Council records &lt;a href=&quot;https://bugs.eclipse.org/bugs/buglist.cgi?bug_status=NEW&amp;amp;bug_status=ASSIGNED&amp;amp;bug_status=REOPENED&amp;amp;classification=Eclipse%20Foundation&amp;amp;component=Architecture%20Council&amp;amp;list_id=19090287&amp;amp;product=Community&amp;amp;query_format=advanced&amp;amp;short_desc=%5BEDP%5D&amp;amp;short_desc_type=allwordssubstr&quot;&gt;issues&lt;/a&gt; that need to be addressed and tracks the work in the Community/Architecture component in the Eclipse Foundation’s Bugzilla instance.&lt;/p&gt;



&lt;p&gt;The update to the EDP in late 2018 changed the way that we engage in &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#release-review&quot;&gt;release reviews&lt;/a&gt;. Project teams only need to engage in a release review for releases that occur more than one year after their last successful release review. For most project teams (i.e., active projects making regular releases), this means that they only need to engage in a release review once every year.&lt;/p&gt;



&lt;p&gt;Project teams still need to &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#pmi-commands-release&quot;&gt;create a release record&lt;/a&gt;, but do not have to engage with the Eclipse Management Organization (EMO) or their Project Management Committee (PMC), and don’t need to submit their &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#ip-iplog&quot;&gt;IP Log&lt;/a&gt; for review. Project leads must still take care to ensure that the intellectual property included in all releases has been fully vetted by the &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#ip&quot;&gt;IP due diligence process&lt;/a&gt; (in practical terms, this means that all &lt;a href=&quot;https://www.eclipse.org/projects/handbook/#ip-cq&quot;&gt;CQs&lt;/a&gt; for content included in a release must be resolved, and the license compatibility of all third party content must be established before making the release official). &lt;/p&gt;



&lt;p&gt;Eclipse open source project teams who aren’t sure whether or not they’re ready to release, can check with the EMO or can submit their IP Log for a sanity check.&lt;/p&gt;</description>
	<pubDate>Mon, 02 Dec 2019 15:02:30 +0000</pubDate>
</item>
<item>
	<title>Melanie Bats: Obeo Cloud Platform</title>
	<guid isPermaLink="true">http://localhost:4000/2019/12/02/ocp-9-month-journey/</guid>
	<link>http://localhost:4000/2019/12/02/ocp-9-month-journey/</link>
	<description>&lt;p&gt;&lt;em&gt;TLDR; This is almost the story of my first CTO pregnancy experience, organizational stuff inside.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It’s been almost 2 years since I started operating as Obeo’s CTO, 2 years since I accepted the challenge to take the lead of our R&amp;amp;D. As part of this, almost 1 year ago I started to organize the development of our new generation modeling tool solution. And for the past 9 months my team has been busy working full time on this new product.&lt;/p&gt;

&lt;p&gt;When you become &lt;del&gt;pregnant&lt;/del&gt; a product manager, you are basically a story trigger for everyone around you: people love to tell their failure-project and their stupid-leader story. It is scary to be at the place where you are the one who decides. It is even more frightening when you are at the point where you redesign your products with a completely different technological layer. This is where I was one year ago. At Obeo, we have been developing for years modeling workbenches based on the Eclipse Platform. Today our customers want more and asked us to modernize the modeling stack by making it cloud compliant. So how do we go from this statement to a first software release?&lt;/p&gt;

&lt;p&gt;If you’re a product manager or affiliate, you’re probably aware that the first nine months of a new software product are always a big adventure.
CTOs-to-be may have a lot of questions about what they can expect and the changes they’ll go through.
Do you know when to expect to feel your product move? When to look for a UI/UX designer or a continuous deployment pipeline? Customer interest on what you are developing? Is that the signs of preterm labor?&lt;/p&gt;

&lt;h2 id=&quot;1st-month---your-imagination-has-no-limit&quot;&gt;1st month - Your imagination has no limit&lt;/h2&gt;

&lt;p&gt;The beginning of a new product is not easy. Where should we start?
Should we rely on the prototypes we already have? Should we built a completely new project? How will you build your team? Who will be in? When? What will be the first scenario that will be supported in your software? How should you be organized?
These are all the first questions you will come across.&lt;/p&gt;

&lt;p&gt;What I will remember from that first month is that at some point you have to take decision: that is why you are here, that’s your job, and that will remind you why there is a C in CTO. You have the power of choice.
There is not a unique good solution for everything. When every other person has a piece of advice for you, you start to understand that not everything works for everyone. I found what I believe works best for me. Of course, what works for me may not work for you: it depends on your company technological background but also on how you want to get your collaborators engaged as well. Each project, team and context is different.&lt;/p&gt;

&lt;p&gt;Take the time to discuss this with others in your company, take the time to find what they need but also what are they dreaming about this new product. I developed my product vision for example by asking people to fill in a survey with questions such as in 1, 2, 5 years what is the final goal, the business needs, the users expectations, the success factor, etc. See the &lt;a href=&quot;http://melb.enix.org/img/ocp-9month/ProductVision.png&quot;&gt;product vision template&lt;/a&gt; available on my github for details.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://melb.enix.org/img/ocp-9month/ProductVision.png&quot;&gt;&lt;img alt=&quot;Product Vision Template&quot; class=&quot;center&quot; src=&quot;http://melb.enix.org/img/ocp-9month/ProductVision.png&quot; title=&quot;Product Vision&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Write a summary of all this.
And in the end, find your own voice in the ocean of opinions.
Build your team, define your first scenario, share with everyone what you decided and do not hesitate to fail! Your first organisation might not be the best one: try, learn, update, reorganize, try something else… You are not alone in this task, this is a collective effort. The entire team cares about its organization and discusses it regularly by making retrospectives, having a dedicated moment during regular meetings, defining process to improve their collaboration, selecting tools…&lt;/p&gt;

&lt;p&gt;The questional period you just went through, your team will go through the same. Which technical bricks will they rely on? Which part of our existing code will integrate this new project? Should we start by building the simplest scenario, this without taking into account the whole complexity of the end product you are trying to build? What should in the end be the software architecture?&lt;/p&gt;

&lt;p&gt;Important point, give some time to your team to discuss all those things. But ask them to produce something even during that period. In our case, we wrote documents (AsciiDoc rocks!) and decided to keep a trace of all our decisions. For that, we used ADR - Architectural Decision Record: it is like reading the pocket reference of your project. After several months of use, it has turned out to be really useful. It helps people who are working part time on the project to get what we decided and why and help remember why we took a given decision. It forces us to discuss and validate all the important decisions together.
You also need to stop this questioning period by just pushing your team to contribute &lt;em&gt;code&lt;/em&gt; and not just loosing them in the limbs of the imaginative product.&lt;/p&gt;

&lt;h2 id=&quot;mid-months---scared-believe-realize&quot;&gt;Mid months - Scared! Believe! Realize!&lt;/h2&gt;

&lt;p&gt;Pregnancy, giving software birth and the first 3 months is such an emotional roller coaster with so many changes. As you move forward on your development journey, it is amazing to discover all the things your sweety-software can do before he’s born. We went through different themes during these months: Persistence, CRUD, Diagram, Properties views, Edition, Concurrence, Authentication…
Then everything is on track, you are organized as a team, code is being produced, your scenarios are more and more rich. And at some point, we realized we were actually growing life within us. It did not come right when we started the project.&lt;/p&gt;

&lt;p&gt;I felt it in 3 specific moments —&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When we chose the name - Obeo Cloud Platform,&lt;/li&gt;
  &lt;li&gt;When I had a first &lt;del&gt;ultrasound scan&lt;/del&gt; preview of the UI - fortunately we have a Design team to work with,&lt;/li&gt;
  &lt;li&gt;And when he kicked for the first time - I mean his first public live demo.&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;We will also never forget our baby shower celebration at EclipseCon Europe! This was an amazing moment for us. We were so happy to present our new work to the Sirius community.
That day I was feeling the kicks in my belly.
As Steve Jobs puts it, “A lot of times, people don’t know what they want until you show it to them.” That’s why we decided to give a preview of our new product even before it is polished, and why we launched a beta testing team. The idea is to give them a preview access and organize live remote testing sessions to grow the feedback river with real end-users. &lt;a href=&quot;https://t.co/Zgh3KMxtUU?amp=1&quot;&gt;Join us now and share your needs&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&quot;8-9th-months---you-are-almost-releasing&quot;&gt;8-9th months - You are (almost) releasing!&lt;/h2&gt;

&lt;p&gt;Today, I do not even realise it is already the last months of pregnancy: we are getting closer and closer to our due date. I have this mixed feeling of excitement and nervousness and want our software product to come as soon as possible.&lt;/p&gt;

&lt;p&gt;Our product is getting ready for birth, and the whole Obeo family is preparing to welcome a new member. You are also invited to join us, stay tuned for the upcoming SiriusCon Live Q1 2020.&lt;/p&gt;

&lt;p&gt;At the end of this year, on his first days, our software product will be tiny and little. It will know only a few things but will do them well. Next we will continue to feed him: baby bottles first and then we will go through the diversification phase introducing new kind of food.
My team will help him to grow, you, our users, our customers will be part of its education. We have many projects and plans, but we need you to turn true customers problems into product features.&lt;/p&gt;

&lt;p&gt;Sometimes it’s important to stop and look back. It really made me appreciate and comprehend what an amazing experience I and my company went through ❤ and still are.&lt;/p&gt;

&lt;p&gt;Hope you had a good read.&lt;/p&gt;</description>
	<pubDate>Mon, 02 Dec 2019 10:00:00 +0000</pubDate>
</item>
<item>
	<title>Karsten Thoms: Eclipse m2e: How to use a WORKSPACE Maven installation</title>
	<guid isPermaLink="false">http://kthoms.wordpress.com/?p=1027</guid>
	<link>https://kthoms.wordpress.com/2019/11/27/eclipse-m2e-how-to-use-a-workspace-maven-installation/</link>
	<description>&lt;p&gt;Today a colleague of me asked me about the Maven Installations preference page in Eclipse. There is an entry &lt;tt&gt;WORKSPACE&lt;/tt&gt; there, which is disabled and shows &lt;tt&gt;NOT AVAILABLE&lt;/tt&gt;. He wanted to know how to enable a workspace installation of Maven.&lt;br /&gt;
&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-1029&quot; height=&quot;433&quot; src=&quot;https://kthoms.files.wordpress.com/2019/11/screenshot-343.png?w=584&amp;amp;h=433&quot; width=&quot;584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Since we both did not find the documentation of the feature I digged into the m2e sources and found class &lt;a href=&quot;https://github.com/eclipse/m2e-core/blob/releases/1.12/1.12.0.20190529-1916/org.eclipse.m2e.core/src/org/eclipse/m2e/core/internal/launch/MavenWorkspaceRuntime.java&quot;&gt;&lt;tt&gt;MavenWorkspaceRuntime&lt;/tt&gt;&lt;/a&gt;. The relevant snippets are the method &lt;tt&gt;getMavenDistribution()&lt;/tt&gt; and the &lt;tt&gt;MAVEN_DISTRIBUTION&lt;/tt&gt; constant:&lt;/p&gt;
&lt;pre class=&quot;c-mrkdwn__pre&quot;&gt;private static final ArtifactKey MAVEN_DISTRIBUTION = new ArtifactKey(
      &quot;org.apache.maven&quot;, &quot;apache-maven&quot;, &quot;[3.0,)&quot;, null); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$

...

protected IMavenProjectFacade getMavenDistribution() {
  try {
    VersionRange range = VersionRange.createFromVersionSpec(getDistributionArtifactKey().getVersion());
    for(IMavenProjectFacade facade : projectManager.getProjects()) {
      ArtifactKey artifactKey = facade.getArtifactKey();
      if(getDistributionArtifactKey().getGroupId().equals(artifactKey.getGroupId()) //
          &amp;amp;&amp;amp; getDistributionArtifactKey().getArtifactId().equals(artifactKey.getArtifactId())//
          &amp;amp;&amp;amp; range.containsVersion(new DefaultArtifactVersion(artifactKey.getVersion()))) {
        return facade;
      }
    }
  } catch(InvalidVersionSpecificationException e) {
    // can't happen
  }
  return null;
}&lt;/pre&gt;
&lt;p&gt;From here you can see that m2e tries to look for workspace (Maven) projects and to find one the has the coordinates &lt;tt&gt;org.apache.maven:apache-maven:[3.0,)&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;So the answer how to enable a WORKSPACE Maven installation is: Import the project &lt;tt&gt;apache-maven&lt;/tt&gt; into the workspace. And here is how to do it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone Apache Maven from &lt;a href=&quot;https://github.com/apache/maven.git&quot;&gt;https://github.com/apache/maven.git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optionally: check out a release tag
&lt;pre&gt;git checkout maven-3.6.3&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Perform &lt;em&gt;File / Import / Existing Maven Projects&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;As &lt;em&gt;Root Directory&lt;/em&gt; select the &lt;tt&gt;apache-maven&lt;/tt&gt; subfolder in your Maven clone location&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now you will have the project that m2e searches for in your workspace:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-1035&quot; src=&quot;https://kthoms.files.wordpress.com/2019/11/screenshot-344.png?w=584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;And the Maven Installations preference page lets you now select this distribution:&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;alignnone size-full wp-image-1037&quot; height=&quot;478&quot; src=&quot;https://kthoms.files.wordpress.com/2019/11/screenshot-345.png?w=584&amp;amp;h=478&quot; width=&quot;584&quot; /&gt;&lt;/p&gt;</description>
	<pubDate>Wed, 27 Nov 2019 09:39:29 +0000</pubDate>
</item>
<item>
	<title>Christopher Guindon: Modernizing our GitHub Sync Toolset</title>
	<guid isPermaLink="true">https://www.chrisguindon.com/post/modernizing-our-github-sync-script/</guid>
	<link>https://www.chrisguindon.com/post/modernizing-our-github-sync-script/</link>
	<description>&lt;p&gt;I am happy to announce that my team is ready to deploy a new version of our &lt;a href=&quot;https://github.com/EclipseFdn/eclipsefdn-github-sync&quot;&gt;GitHub Sync Toolset&lt;/a&gt; on November 26, 2019 from 10:00 to 11:00 am EST.&lt;/p&gt;
&lt;p&gt;We are not expecting any disruption of service but it’s possible that some committers may lose write access to their Eclipse project GitHub repositories during this 1 hour maintenance window.&lt;/p&gt;
&lt;p&gt;This toolset is responsible for syncronizing Eclipse committers accross all our GitHub repositories and on top of that, this new release will start syncronizing contributors.&lt;/p&gt;
&lt;p&gt;In this context, a contributor is a GitHub user with read access to the project GitHub repositories. This new feature will allow committers to assign issues to contributors who currently don’t have write access to the repository. This feature was requested in 2015 via &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=483563&quot;&gt;Bug 483563&lt;/a&gt; - Allow assignment of GitHub issues to contributors.&lt;/p&gt;
&lt;p&gt;Eclipse Committers are reponsible for maintaining a list of GitHub contributors from their &lt;a href=&quot;https://projects.eclipse.org/&quot;&gt;project&lt;/a&gt; page on the Eclipse Project Management Infrastructure (PMI).&lt;/p&gt;
&lt;p&gt;To become an Eclipse contributor on a GitHub for a project, please make sure to tell us your &lt;strong&gt;GitHub Username&lt;/strong&gt; in your &lt;a href=&quot;https://accounts.eclipse.org/user/edit&quot;&gt;Eclipse account&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 19 Nov 2019 20:10:46 +0000</pubDate>
</item>
<item>
	<title>Tanja Obradovic: Jakarta EE Community Update November 2019</title>
	<guid isPermaLink="false">6745 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-update-november-2019</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;Now that Jakarta EE 8 has been available for a couple of months, I want to share news about some of the great committee work that’s been happening. I also want to tell you about our latest Jakarta EE-compatible product, and make sure you have links to the recordings of our Jakarta EE community calls and presentations.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; Due to the timing of this update, I’ve included news about activities in the first half of November as well as October.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Another Jakarta EE-Compatible Product&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;I’m very pleased to tell you that Payara Server is now fully certified as a&lt;a href=&quot;https://jakarta.ee/compatibility/&quot;&gt; Jakarta EE 8-compatible implementation&lt;/a&gt;. If you’re not familiar with Payara Server, take a few minutes to learn more about this&lt;a href=&quot;https://www.payara.fish/software/downloads/&quot;&gt; innovative, cloud native application server&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; The Payara team told us they found the compatibility process smooth and easy. To learn more about the benefits of being certified as a Jakarta EE-compatible product and the process to get listed,&lt;a href=&quot;https://jakarta.ee/compatibility/get_listed/&quot;&gt; click here&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Jakarta EE 8 Feedback Will Drive Improvements&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;The Jakarta EE Steering Committee started a community retrospective on the Jakarta EE 8 release, sharing&lt;a href=&quot;https://docs.google.com/document/d/1E7uHGyvjDH0fimxxdHwHtC6iZIC9wwEBfWLRilVQs80/edit&quot;&gt; this document&lt;/a&gt; to drive the process.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;You’ll also see retrospectives from each of the other Jakarta EE Working Group committees as they look to gather community input on improvements for the next release. Once all of the input is collected, we’ll summarize and publish the findings.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Jakarta EE 9 Delivery Plan to Be Ready December 9&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;Jakarta EE 9 planning is underway, and the Steering Committee has published a resolution requesting Jakarta EE Platform Project leaders to deliver a Jakarta EE 9 Delivery Plan, including a release date, to the Steering Committee no later than December 9, 2019.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; According to the resolution, the Jakarta EE 9 Delivery Plan should:&lt;/p&gt;

&lt;ul dir=&quot;ltr&quot;&gt;
	&lt;li&gt;Implement the “big bang”&lt;/li&gt;
	&lt;li&gt;Include an explicit means to identify and enable specifications that are unnecessary or unwanted to be deprecated or removed &lt;/li&gt;
	&lt;li&gt;Move all remaining specification APIs to the Jakarta namespace&lt;/li&gt;
	&lt;li&gt;Add no new specifications, apart from those pruned from Java SE 8 where appropriate, unless those specifications will not impact the target delivery date&lt;/li&gt;
&lt;/ul&gt;

&lt;p dir=&quot;ltr&quot;&gt;The resolution is now with the Jakarta EE Platform Project team, which is actively looking into the Steering Committee requests. The Platform Project team will put a higher priority on meeting the Steering Committee resolution requests as soon as possible rather than adding more functionality to the release.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; You can read the minutes of the Jakarta EE Platform Project team meetings&lt;a href=&quot;https://eclipse-ee4j.github.io/jakartaee-platform/&quot;&gt; here&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;New Chair for the Jakarta EE Specification Committee&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;We welcome Paul Buck as the non-voting Chair of the Jakarta EE Specification Committee. Paul is Vice President of Community Development at the Eclipse Foundation, and was unanimously elected to his new role.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Jakarta EE 8 Restructuring Continues&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;In the push to complete Jakarta EE 8, a number of planned improvements were deferred. Here’s a brief summary of the improvements the Jakarta EE Specification Committee is currently discussing:&lt;/p&gt;

&lt;ul dir=&quot;ltr&quot;&gt;
	&lt;li&gt;Updating project ids and technical namespaces. For example:
	&lt;ul&gt;
		&lt;li&gt;ee4j.jms becomes ee4j.messaging&lt;/li&gt;
		&lt;li&gt;https://github.com/eclipse-ee4j/jms-api becomes https://github.com/eclipse-ee4j/messaging-api&lt;/li&gt;
		&lt;li&gt;javax.jms becomes jakarta.messaging&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Updating project names. For example:
	&lt;ul&gt;
		&lt;li&gt;Jakarta Server Faces becomes Jakarta Faces&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Whether top-level projects should be changed to include both specifications and compatible implementations as subpages&lt;/li&gt;
	&lt;li&gt;How to address the decision to rename TCK files from “eclipse-” to “jakarta-”&lt;/li&gt;
&lt;/ul&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Time to Jakartify More Specifications&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;When Jakarta EE 8 was released, we provided specifications for the Jakarta EE Full Profile and Jakarta EE Web Profile. Now that we’ve acquired the copyright for additional specifications, it’s time for the community to Jakartify them so they can be contributed to Jakarta EE.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To help you get started:&lt;/p&gt;

&lt;ul dir=&quot;ltr&quot;&gt;
	&lt;li&gt;The Specification Committee has created a document that explains&lt;a href=&quot;https://github.com/jakartaee/specification-committee/blob/master/steps_javaee_to_jakartaee.adoc&quot;&gt; how to convert Java EE specifications to Jakarta EE&lt;/a&gt;.&lt;/li&gt;
	&lt;li&gt;Ivar Grimstand provided a demo during the monthly community call on October 16. You can&lt;a href=&quot;https://www.youtube.com/watch?v=s8Kwz5_u88Y&amp;amp;list=PLy7t4z5SYNaSY0Um6Vbez3G5Lc2AMaMw7&amp;amp;index=5&quot;&gt; view it here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p dir=&quot;ltr&quot;&gt;And, here’s the list of specifications that are ready for the community to &quot;Jakartify&quot;:&lt;/p&gt;

&lt;table&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;td&gt;
			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Annotations&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Enterprise Beans&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Expression Language&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Security&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Server Faces&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Interceptors&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Authorization&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Activation&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Managed Beans&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;
			&lt;/td&gt;
			&lt;td&gt;
			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Deployment&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta XML RPC&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Authentication&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Mail&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta XML Binding&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta RESTful Web Services&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Web Services Metadata&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta XML Web Services&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Connectors&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;
			&lt;/td&gt;
			&lt;td&gt;
			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Persistence&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta JSON Binding&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta JSON Processing&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Debugging Support for Other Languages&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Server Pages&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta Transactions&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt;•    Jakarta WebSocket&lt;/p&gt;

			&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;On a related note, the Specification Committee is also working to further define compatibility testing requirements for the full platform and web profile specifications for subsequent releases of&lt;a href=&quot;https://jakarta.ee/compatibility/&quot;&gt; Jakarta EE-compatible products&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Jakarta EE Marketing Plan Nearly Finalized&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;We expect the Jakarta EE 2020 marketing plan and budget to be approved by the end of November.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;The Marketing Committee is also looking to choose a Committee Chair very soon. In the meantime, the Eclipse Foundation will be actively participating in &lt;a href=&quot;https://events19.linuxfoundation.org/events/kubecon-cloudnativecon-north-america-2019/&quot;&gt;KubeCon, NA&lt;/a&gt;. If you’re there, be sure to drop by booth S5 to talk to our technical experts and check out the demos on the cloud native Java projects.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Join Community Update Calls&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;Every month, the Jakarta EE community holds a Community Call for everyone in the Jakarta EE community. For upcoming dates and connection details, see the&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Community Calendar&lt;/a&gt;.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; We know it’s not always possible to join calls in real time, so here are links to the recordings and presentations:&lt;/p&gt;

&lt;ul dir=&quot;ltr&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLy7t4z5SYNaSY0Um6Vbez3G5Lc2AMaMw7&quot;&gt;The complete playlist&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=H-XifUPIbS8&quot;&gt; October 16th call&lt;/a&gt; and&lt;a href=&quot;https://drive.google.com/drive/u/0/folders/1ANrmkg3nGfQIUC9WqfRvK9zLeyustsIg&quot;&gt; presentation&lt;/a&gt;, featuring Ivar Grimstad demo on &lt;a href=&quot;https://docs.google.com/document/d/1HUp0ftvbPeXJoNE3VnpjygbTnTs6tZLdYs7uxKfN50s/edit&quot;&gt;Steps to Jakartify a Specification document &lt;/a&gt; and Ed Bratt’s Jakarta EE 8 release wrap-up and invitation to add to the&lt;a href=&quot;https://docs.google.com/document/d/1E7uHGyvjDH0fimxxdHwHtC6iZIC9wwEBfWLRilVQs80/edit&quot;&gt; retrospective document&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=clnUiRDfbkI&amp;amp;list=PLy7t4z5SYNaSY0Um6Vbez3G5Lc2AMaMw7&amp;amp;index=1&quot;&gt; November 13 call&lt;/a&gt; and&lt;a href=&quot;https://drive.google.com/drive/u/0/folders/16NZvBw82MiSurZbnR5qhHjnOKTh1TwkI&quot;&gt; presentation&lt;/a&gt;, featuring updates from community members, Arjan Tijms - Jakarta Security and  Markus Karg - Jakarta RESTful Web, about their experiences Jakartifying specifications as well as Steve Millage - Jakarta EE Platform team member on the Jakarta EE 9 release roadmap, and Jakarta EE election results&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;A Look Back at October Events&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;October was another busy month for Jakarta EE and cloud native Java events as we participated in. Beside &lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot;&gt;EclipseCon Europe 2019&lt;/a&gt;, we were present at &lt;a href=&quot;https://2019.trondheimdc.no/&quot;&gt;Trondheim Developer Conference&lt;/a&gt; in Norway, &lt;a href=&quot;https://events19.linuxfoundation.org/events/open-source-summit-europe-2019/&quot;&gt;Open Source Summit EU&lt;/a&gt; in France, &lt;a href=&quot;https://springoneplatform.io/&quot;&gt;SpringOne Platform&lt;/a&gt;, &lt;a href=&quot;https://www.ibm.com/uk-en/events/think-summit/&quot;&gt;Think London - UK&lt;/a&gt; and &lt;a href=&quot;https://jokerconf.com/en/&quot;&gt;Joker&amp;lt;?&amp;gt;&lt;/a&gt; - Russia.&lt;/p&gt;

&lt;p&gt;In addition to many reports and blogs you may find on the participation, I would like to point out the ECE 2019 Community Day collaboration between IoT and Cloud Native Java teams. Even though it was just a starting point attempt to work on the solution by both teams, it was great seeing two Eclipse Foundation communities working together! I am looking for more of these collaborations in the future. Please look for blog from Jens Reimann (@ctron) from Red Hat on this. &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 dir=&quot;ltr&quot;&gt;Stay Connected With the Jakarta EE Community&lt;/h2&gt;

&lt;p dir=&quot;ltr&quot;&gt;The Jakarta EE community is very active and there are a number of channels to help you stay up to date with all of the latest and greatest news and information. Tanja Obradovic’s&lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/jakarta-ee-community-engagement&quot;&gt; blog&lt;/a&gt; summarizes the community engagement plan, which includes:&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;•      Social media:&lt;a href=&quot;https://twitter.com/jakartaee&quot;&gt; Twitter&lt;/a&gt;,&lt;a href=&quot;https://www.facebook.com/JakartaEE/&quot;&gt; Facebook&lt;/a&gt;,&lt;a href=&quot;https://www.linkedin.com/groups/13597511/&quot;&gt; LinkedIn Group&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;•      Mailing lists: jakarta.ee-community@eclipse.org and jakarta.ee-wg@eclipse.org&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;•      Newsletters, blogs, and emails:&lt;a href=&quot;https://www.eclipse.org/community/eclipse_newsletter/&quot;&gt; Eclipse newsletter&lt;/a&gt;,&lt;a href=&quot;https://jakartablogs.ee/#main-content&quot;&gt; Jakarta EE blogs&lt;/a&gt;, monthly update emails to jakarta.ee-community@eclipse.org, and community blogs on&lt;a href=&quot;https://docs.google.com/spreadsheets/d/1JflN_xJ9d5ZWu5VUbDV9Spj7mc8WuPGMfd6EZgabXz0/edit#gid=0&quot;&gt; “how are you involved with Jakarta EE”&lt;/a&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;•      Meetings:&lt;a href=&quot;https://www.meetup.com/jakartatechtalks_/&quot;&gt; Jakarta Tech Talks&lt;/a&gt;,&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Update&lt;/a&gt;, Jakarta Town Hall, and Eclipse Foundation events and conferences&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;Subscribe to your preferred channels today. And, get involved in the&lt;a href=&quot;https://jakarta.ee/membership/&quot;&gt; Jakarta EE Working Group&lt;/a&gt; to help shape the future of open source, cloud native Java.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To learn more about Jakarta EE-related plans and check the date for the next Jakarta Tech Talk, be sure to bookmark the&lt;a href=&quot;https://calendar.google.com/calendar/embed?src=eclipse-foundation.org_3281qms6riu4kdf354jn5idon0%40group.calendar.google.com&amp;amp;ctz=America%2FToronto&quot;&gt; Jakarta EE Community Calendar&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 19 Nov 2019 18:52:38 +0000</pubDate>
</item>
<item>
	<title>Christian Pontesegger: Jakarta Microprofile REST Client in Eclipse</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3460102793186140898.post-3693889557082666010</guid>
	<link>http://codeandme.blogspot.com/2019/11/jakarta-microprofile-rest-client-in.html</link>
	<description>Today we are going to implement a simple REST client for an Eclipse RCP application. Now with Jakarta @ Eclipse and all these nice Microprofile implementations this should be a piece of cake, right? Now lets see...&lt;br /&gt;&lt;br /&gt;Source code for this tutorial is available on github as a &lt;a href=&quot;https://github.com/Pontesegger/codeandme/blob/master/Code%20&amp;amp;%20Me%20Blog/RESTEasy_client.zip?raw=true&quot; target=&quot;_blank&quot;&gt;single zip archive&lt;/a&gt;, as a &lt;a href=&quot;https://github.com/Pontesegger/codeandme/blob/master/Code%20&amp;amp;%20Me%20Blog/RESTEasy_client.psf?raw=true&quot;&gt;Team Project Set&lt;/a&gt; or you can &lt;a href=&quot;https://github.com/Pontesegger/codeandme/tree/master/rest_client&quot; target=&quot;_blank&quot;&gt;browse the files&lt;/a&gt; online.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 1: Dependencies&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The &lt;a href=&quot;https://github.com/eclipse/microprofile-rest-client&quot; target=&quot;_blank&quot;&gt;Eclipse Microprofile REST Client repository&lt;/a&gt; is a good place to get started. It points to several implementations (at the bottom of the readme). Unfortunately these implementations do not host any kind of p2 sites which we could use directly. So our next stop is &lt;a href=&quot;https://download.eclipse.org/tools/orbit/downloads/&quot; target=&quot;_blank&quot;&gt;Eclipse Orbit&lt;/a&gt;, but same situation there. This means we need to collect our dependencies manually.&lt;br /&gt;&lt;br /&gt;For my example I used &lt;a href=&quot;https://resteasy.github.io/&quot; target=&quot;_blank&quot;&gt;RESTEasy&lt;/a&gt;, simply as it was the only one I could get working within reasonable time. To fetch dependencies, download the &lt;a href=&quot;https://resteasy.github.io/downloads.html&quot; target=&quot;_blank&quot;&gt;latest version of RESTEasy&lt;/a&gt;. As the RESTEasy download package does not contain the REST client API, we need to fetch that from another source. I found it in the &lt;a href=&quot;http://cxf.apache.org/download.html&quot; target=&quot;_blank&quot;&gt;Apache CXF project&lt;/a&gt;, so download the latest version too. If you know a better source, please let me know in the comments.&lt;br /&gt;&lt;br /&gt;Now create a new &lt;i&gt;Plug-in from Existing JAR Archives&lt;/i&gt;. Click on &lt;i&gt;Add External...&lt;/i&gt; and add all jars from resteasy-jaxrs-x.y.z.Final/lib/*.jar. Further add apache-cxf-x.y.z/lib/jakarta.ws.rs-api-x.y.z.jar.&lt;br /&gt;This plug-in now contains all dependencies we need for our client. Unfortunately also a lot of other stuff we probably do not need, but we leave the cleanup for later.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 2: Define the REST service&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;For our example we will build a client for the &lt;a href=&quot;https://petstore.swagger.io/&quot; target=&quot;_blank&quot;&gt;Petstore Service&lt;/a&gt;, which can be used for testing purposes. Further it provides a swagger interface to test the REST calls online. I recommend to check out the API and play with some commands online and with curl.&lt;br /&gt;&lt;br /&gt;Lets write a simple client for the store with its 4 commands. The simplest seems to be the &lt;i&gt;inventory&lt;/i&gt; command, so we will start there. Create a new Java interface:&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;package com.codeandme.restclient.resteasy;&lt;br /&gt;&lt;br /&gt;import javax.ws.rs.GET;&lt;br /&gt;import javax.ws.rs.Path;&lt;br /&gt;import javax.ws.rs.Produces;&lt;br /&gt;import javax.ws.rs.core.MediaType;&lt;br /&gt;import javax.ws.rs.core.Response;&lt;br /&gt;&lt;br /&gt;public interface IStoreService {&lt;br /&gt;&lt;br /&gt; @GET&lt;br /&gt; @Path(&quot;/v2/store/inventory&quot;)&lt;br /&gt; @Produces(MediaType.APPLICATION_JSON)&lt;br /&gt; Response getInventory();&lt;br /&gt;}&lt;/pre&gt;Everything necessary for RESTEasy is provided via annotations:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;@Path&lt;/i&gt; defines the path for the command of the REST service&lt;/li&gt;&lt;li&gt;&lt;i&gt;@GET&lt;/i&gt; defines that we have to use a GET command (there exist annotations for POST, DELETE, PUT)&lt;/li&gt;&lt;li&gt;&lt;i&gt;@Produces&lt;/i&gt; finally defines the type of data we do get in response from the server.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;&lt;u&gt;Step 3: Create an instance of the service&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Create a new class &lt;i&gt;StoreServiceFactory&lt;/i&gt;:&lt;/div&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;package com.codeandme.restclient.resteasy;&lt;br /&gt;&lt;br /&gt;import java.net.URI;&lt;br /&gt;import java.net.URISyntaxException;&lt;br /&gt;&lt;br /&gt;import org.jboss.resteasy.client.jaxrs.ResteasyClient;&lt;br /&gt;import org.jboss.resteasy.client.jaxrs.ResteasyWebTarget;&lt;br /&gt;import org.jboss.resteasy.client.jaxrs.internal.ResteasyClientBuilderImpl;&lt;br /&gt;&lt;br /&gt;public class StoreServiceFactory {&lt;br /&gt;&lt;br /&gt; public static IStoreService createStoreService() throws URISyntaxException {&lt;br /&gt;  ResteasyClient client = new ResteasyClientBuilderImpl().build();&lt;br /&gt;  ResteasyWebTarget target = client.target(new URI(&quot;https://petstore.swagger.io/&quot;));&lt;br /&gt;  return target.proxy(IStoreService.class);&lt;br /&gt; }&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;This is the programmatic way to create a client instance. There also exists another method called &lt;a href=&quot;https://download.eclipse.org/microprofile/microprofile-rest-client-1.3/microprofile-rest-client-1.3.html#restcdi&quot; target=&quot;_blank&quot;&gt;CDI&lt;/a&gt;, which I did not try out in Eclipse.&lt;br /&gt;&lt;br /&gt;The service is ready and usable, so give it a try. The result object returned does contain some valuable information:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;getStatus()&lt;/i&gt; provides the H&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_status_codes&quot; target=&quot;_blank&quot;&gt;TTP response status&lt;/a&gt;. 200 is expected for a successful &lt;i&gt;getInventory()&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;getEntity()&lt;/i&gt; provides an &lt;i&gt;InputStream&lt;/i&gt; which contains the JSON encoded response data from the server&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;&lt;u&gt;Step 4: Response decoding&lt;/u&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Our response is encoded as &lt;a href=&quot;https://www.tutorialspoint.com/json/json_data_types.htm&quot; target=&quot;_blank&quot;&gt;JSON collection of properties&lt;/a&gt;. In Java terms this basically reflects to a &lt;i&gt;Map&amp;lt;String, String&amp;gt;&lt;/i&gt;. Instead of decoding the data manually, we let the framework do it for us:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Change the &lt;i&gt;IStoreService&lt;/i&gt; to:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;pre class=&quot;brush: javascript&quot;&gt; Map&amp;lt;String, String&amp;gt; getInventory();&lt;/pre&gt;Anything else is done by the framework. Now how easy was that?&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 5: POST request&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;To place an order we need order parameters. Best we encapsulate them in a dedicated &lt;a href=&quot;https://github.com/Pontesegger/codeandme/blob/master/rest_client/com.codeandme.restclient.resteasy/src/com/codeandme/restclient/resteasy/Order.java&quot; target=&quot;_blank&quot;&gt;Order class&lt;/a&gt;. From the definition of the &lt;i&gt;order&lt;/i&gt; REST call we can see that we need following class properties: &lt;i&gt;id, petId, quantity, shipDate, status, complete&lt;/i&gt;. Add these parameters as fields to the &lt;i&gt;Order&lt;/i&gt; class and create getters/setters for them.&lt;br /&gt;&lt;br /&gt;Now we can extend our &lt;i&gt;IStoreService&lt;/i&gt; with the &lt;i&gt;fileOrder()&lt;/i&gt; call:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt;@Path(&quot;/v2/store&quot;)&lt;br /&gt;public interface IStoreService {&lt;br /&gt;&lt;br /&gt; @GET&lt;br /&gt; @Path(&quot;inventory&quot;)&lt;br /&gt; @Produces(MediaType.APPLICATION_JSON)&lt;br /&gt; Map&amp;lt;String, String&amp;gt; getInventory();&lt;br /&gt;&lt;br /&gt; @POST&lt;br /&gt; @Path(&quot;order&quot;)&lt;br /&gt; @Consumes(MediaType.APPLICATION_JSON)&lt;br /&gt; void fileOrder(Order order);&lt;br /&gt;}&lt;/pre&gt;&lt;br /&gt;The &lt;i&gt;Order&lt;/i&gt; automatically gets encoded as JSON object. No need for us to do the coding manually!&lt;br /&gt;&lt;br /&gt;As parts of the path are the same for both calls, I moved the common component to the class level.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 6: Path parameters&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;To fetch an order we need to put the &lt;i&gt;orderId&lt;/i&gt; in the request path. Coding of such parameters is put in curly braces. The parameter on the java call then gets annotated so the framework knows which parameter value to put into the path:&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt; @GET&lt;br /&gt; @Path(&quot;order/{orderId}&quot;)&lt;br /&gt; @Produces(MediaType.APPLICATION_JSON)&lt;br /&gt; Order getOrder(@PathParam(&quot;orderId&quot;) int orderId);&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;Again the framework takes care of the decoding of the JSON data.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Step 7: DELETE an Order&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Deleting needs the &lt;i&gt;orderId&lt;/i&gt; as before:&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;brush: javascript&quot;&gt; @DELETE&lt;br /&gt; @Path(&quot;order/{orderId}&quot;)&lt;br /&gt; void deleteOrder(@PathParam(&quot;orderId&quot;) int orderId);&lt;br /&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;The REST API does not provide a useful JSON response to the delete call. One option is to leave the response type to &lt;i&gt;void&lt;/i&gt;. In case the command fails, an exception will be thrown (eg when the &lt;i&gt;orderId&lt;/i&gt; is not found and the server returns 404).&lt;br /&gt;&lt;br /&gt;Another option is to set the return type to &lt;i&gt;javax.ws.rs.core.Response&lt;/i&gt;. Now we do get everything the server sends back and no execption is thrown anymore. Sometimes we might only be interested in the status code. This can be fetched when setting the return type to &lt;i&gt;Response.Status&lt;/i&gt;. Again, no exception will be thrown on a 404.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;u&gt;Optional: Only have required RESTEasy dependencies&lt;/u&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Looking at all these jars I could not figure out a good way to get rid of the ones unused by the REST client. So I provided unit tests for all my calls and then removed dependencies step by step until I found the minimal set of required jars.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Mon, 18 Nov 2019 11:19:24 +0000</pubDate>
	<author>noreply@blogger.com (Christian Pontesegger)</author>
</item>
<item>
	<title>Christopher Guindon: Show Your Support for Open Source IoT at the Eclipse Foundation</title>
	<guid isPermaLink="true">https://www.chrisguindon.com/post/show-your-support-for-open-source-iot-at-the-eclipse-foundation/</guid>
	<link>https://www.chrisguindon.com/post/show-your-support-for-open-source-iot-at-the-eclipse-foundation/</link>
	<description>&lt;p&gt;The &lt;a href=&quot;https://iot.eclipse.org&quot;&gt;Eclipse IoT&lt;/a&gt; working group is launching a campaign to identify the adopters of Eclipse IoT open source projects. Companies — whether or not they are working group members — can be listed as &lt;a href=&quot;https://iot.eclipse.org/adopters/&quot;&gt;adopters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Adopters are organizations that voluntarily show their support for the Eclipse IoT projects they have adopted (i.e. shipping commercial products based on the projects and/or using the projects for non-commercial or internal reasons).&lt;/p&gt;
&lt;p&gt;You can add your organization logo to our list of adopters by submitting a &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org/pulls&quot;&gt;pull request&lt;/a&gt; or by creating an &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org/issues/new?template=adopter_request.md&quot;&gt;issue&lt;/a&gt;. You can attach files to an issue by dragging and dropping them in the text editor of the form.&lt;/p&gt;
&lt;p&gt;If you plan on submitting a pull request, you will need to make the following changes to the website codebase:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a colored and a white organization logo to &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org/tree/master/static/assets/images/adopters&quot;&gt;static/assets/images/adoptors&lt;/a&gt;. We expect that all submitted logos to be transparent svg.&lt;/li&gt;
&lt;li&gt;Update the adopter data file: &lt;a href=&quot;https://github.com/EclipseFdn/iot.eclipse.org/blob/master/data/adopters.yml&quot;&gt;data/adopters.yml&lt;/a&gt; If your organization wishes to express support for multiple projects, you will need to add your organization’s YAML definition to the adopters list of each of the relevant project nodes.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Your participation in this initiative will publicly show your support for open source innovation.&lt;/p&gt;
&lt;h3 id=&quot;list-eclipse-iot-adopters-on-an-eclipse-project-website&quot;&gt;List Eclipse IoT adopters on an Eclipse project website&lt;/h3&gt;
&lt;p&gt;Eclipse projects can showcase the logos of their adopters on their project websites. We built a JavaScript plugin to make this process easier. If you are a project committer, here are quick instructions on how to use the &lt;a href=&quot;https://iot.eclipse.org/assets/js/eclipsefdn.adopters.js&quot;&gt;eclipsefdn-adopters.js&lt;/a&gt; on your Eclipse project website:&lt;/p&gt;
&lt;h4 id=&quot;usage&quot;&gt;Usage&lt;/h4&gt;
&lt;p&gt;Include the plugin’s JS in the  section of the page:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script src=&quot;//iot.eclipse.org/assets/js/eclipsefdn.adopters.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Load the plugin:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
eclipseFdnAdopters.getList({
project_id: &quot;[project_id]&quot;
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create an HTML element containing the chosen selector:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;eclipsefdn-adopters&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;By default, the selector’s value is &lt;code&gt;eclipsefdn-adopters&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;options&quot;&gt;Options&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
eclipseFdnAdopters.getList({
project_id: &quot;[project_id]&quot;,
selector: &quot;.eclipsefdn-adopters&quot;,
ul_classes: &quot;list-inline&quot;,
logo_white: false
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Attribute&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;project_id&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;String&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt;: Select adopters from a specific project ID.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;selector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;String&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;.eclipsefdn-adopters&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Define the selector that the plugin will insert adopters into.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ul_classes&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;String&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Define classes that will be assigned to the ul element.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;logo_white&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Boolean&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Whether or not we use the white version of the logo.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
	<pubDate>Thu, 14 Nov 2019 16:35:00 +0000</pubDate>
</item>
<item>
	<title>Red Hat Developers: New features in Red Hat CodeReady Studio 12.13.0.GA and JBoss Tools 4.13.0.Final for Eclipse 2019-09</title>
	<guid isPermaLink="false">https://developers.redhat.com/blog/?p=649017</guid>
	<link>https://developers.redhat.com/blog/2019/11/11/new-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09/</link>
	<description>&lt;p&gt;&lt;a href=&quot;http://tools.jboss.org/documentation/whatsnew/jbosstools/4.13.0.Final.html&quot;&gt;JBoss Tools 4.13.0&lt;/a&gt; and &lt;a href=&quot;https://developers.redhat.com/products/codeready-studio/overview&quot;&gt;Red Hat CodeReady Studio 12.13&lt;/a&gt; for Eclipse 2019-09 are here and waiting for you. In this article, I’ll cover the highlights of the new releases and show how to get started.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;more-649017&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.redhat.com/products/codeready-studio/overview&quot;&gt;Red Hat CodeReady Studio&lt;/a&gt; (previously known as Red Hat Developer Studio) comes with everything pre-bundled in its installer. Simply download it from our &lt;a href=&quot;https://developers.redhat.com/products/codeready-studio/overview&quot;&gt;Red Hat CodeReady Studio product page&lt;/a&gt; and run it like this:&lt;/p&gt;
&lt;pre&gt;java -jar codereadystudio-&amp;lt;installername&amp;gt;.jar&lt;/pre&gt;
&lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio requires a bit more.&lt;/p&gt;
&lt;p&gt;This release requires at least Eclipse 4.13 (2019-09), but we recommend using the latest &lt;a href=&quot;http://www.eclipse.org/downloads/packages/release/2019-09/r/eclipse-ide-java-ee-developers&quot;&gt;Eclipse 4.13 2019-09 JEE Bundle&lt;/a&gt; because then you get most of the dependencies pre-installed.&lt;/p&gt;
&lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under “JBoss Tools” or “Red Hat CodeReady Studio.”&lt;/p&gt;
&lt;p&gt;For JBoss Tools, you can also use our update site directly:&lt;/p&gt;
&lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt;
&lt;h2 id=&quot;what-is-new&quot;&gt;What’s new?&lt;/h2&gt;
&lt;p&gt;Our main focus for this release was improvements for container-based development and bug fixing. Eclipse 2019-06 itself has a lot of new cool stuff, but I’ll highlight just a few updates in both Eclipse 2019-06 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt;
&lt;h3 id=&quot;openshift&quot;&gt;Red Hat OpenShift&lt;/h3&gt;
&lt;h4 id=&quot;openshift-container-platform-4-2-support&quot;&gt;OpenShift Container Platform 4.2 support&lt;/h4&gt;
&lt;p&gt;With the new &lt;a href=&quot;https://developers.redhat.com/blog/2019/10/16/developer-tools-openshift/&quot;&gt;OpenShift Container Platform (OCP) 4.2&lt;/a&gt; now available (see the &lt;a href=&quot;https://www.redhat.com/en/about/press-releases/red-hat-expands-kubernetes-developer-experience-newest-version-red-hat-openshift-4&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;announcement&lt;/a&gt;), even if this is a major shift compared to OCP 3, Red Hat CodeReady Studio and JBoss Tools are compatible with this major release in a transparent way. Just define your connection to your OCP 4.2 based cluster as you did before for an OCP 3 cluster, and use the tooling!&lt;/p&gt;
&lt;h4 id=&quot;codeready-containers-1-0-server-adapter&quot;&gt;CodeReady Containers 1.0 Server Adapter&lt;/h4&gt;
&lt;p&gt;A new server adapter has been added to support the next generation of CodeReady Containers 1.0. Although the server adapter itself has limited functionality, it is able to start and stop the CodeReady Containers virtual machine via its crc binary. Simply hit Ctrl+3 (Cmd+3 on OSX) and type &lt;code&gt;new server&lt;/code&gt;, which will bring up a command to set up a new server.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;crc server adapter&quot; class=&quot;aligncenter&quot; src=&quot;https://tools.stage.jboss.org/documentation/whatsnew/openshift/images/crc-server-adapter.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Enter &lt;code&gt;crc&lt;/code&gt; in the filter textbox.&lt;/p&gt;
&lt;p&gt;You should see the &lt;em&gt;Red Hat CodeReady Containers 1.0&lt;/em&gt; server adapter.&lt;/p&gt;
&lt;p id=&quot;pdBgHkl&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot; size-full  wp-image-649037 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28750dea1a.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Select &lt;em&gt;Red Hat CodeReady Containers 1.0&lt;/em&gt; and click &lt;em&gt;Next&lt;/em&gt;.&lt;/p&gt;
&lt;p id=&quot;CXRwfPn&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649047 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2877a15c37.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All you have to do is set the location of the CodeReady Containers crc binary file and the pull secret file location, which can be downloaded from &lt;a class=&quot;bare&quot; href=&quot;https://cloud.redhat.com/openshift/install/crc/installer-provisioned&quot;&gt;https://cloud.redhat.com/openshift/install/crc/installer-provisioned&lt;/a&gt;.&lt;/p&gt;
&lt;p id=&quot;vmqfgiq&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649057 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28799cc391.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once you’re finished, a new CodeReady Containers server adapter will then be created and visible in the Servers view.&lt;/p&gt;
&lt;p id=&quot;qBXUONu&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649067 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287b585d64.png&quot; /&gt;&lt;/a&gt;Once the server is started, a new OpenShift connection should appear in the &lt;em&gt;OpenShift Explorer&lt;/em&gt; view, allowing the user to quickly create a new Openshift application and begin developing their AwesomeApp in a highly replicatable environment.&lt;/p&gt;
&lt;h3 id=&quot;miwdVPP&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649077 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc287e49749c.png&quot; /&gt;&lt;/a&gt;Server tools&lt;/h3&gt;
&lt;h4 id=&quot;wildfly-18-server-adapter&quot;&gt;Wildfly 18 Server Adapter&lt;/h4&gt;
&lt;p&gt;A server adapter has been added to work with Wildfly 18. It adds support for Java EE 8 and Jakarta EE 8.&lt;/p&gt;
&lt;h4 id=&quot;eap-7-3-beta-server-adapter&quot;&gt;EAP 7.3 Beta Server Adapter&lt;/h4&gt;
&lt;p&gt;A server adapter has been added to work with EAP 7.3 Beta.&lt;/p&gt;
&lt;h3 id=&quot;hibernate-tools&quot;&gt;Hibernate Tools&lt;/h3&gt;
&lt;h4 id=&quot;hibernate-runtime-provider-updates&quot;&gt;Hibernate Runtime Provider Updates&lt;/h4&gt;
&lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime providers.&lt;/p&gt;
&lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.7.Final and Hibernate Tools version 5.4.7.Final.&lt;/p&gt;
&lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.13.Final and Hibernate Tools version 5.3.13.Final.&lt;/p&gt;
&lt;h3 id=&quot;platform&quot;&gt;Platform&lt;/h3&gt;
&lt;h4 id=&quot;views-dialogs-and-toolbar&quot;&gt;Views, Dialogs and Toolbar&lt;/h4&gt;
&lt;h5 id=&quot;quick-search&quot;&gt;Quick Search&lt;/h5&gt;
&lt;p&gt;The new &lt;em&gt;Quick Search&lt;/em&gt; dialog provides a convenient, simple and fast way to run a textual search across your workspace and jump to matches in your code. The dialog provides a quick overview showing matching lines of text at a glance. It updates as quickly as you can type and allows for quick navigation using only the keyboard. A typical workflow starts by pressing the keyboard shortcut Ctrl+Alt+Shift+L (or Cmd+Alt+Shift+L on Mac). Typing a few letters updates the search result as you type. Use Up-Down arrow keys to select a match, then hit Enter to open it in an editor.&lt;/p&gt;
&lt;p id=&quot;pHSOHma&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649087 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288852cfb9.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;save-editor-when-project-explorer-has-focus&quot;&gt;Save editor when Project Explorer has focus&lt;/h5&gt;
&lt;p&gt;You can now save the active editor even when the Project Explorer has focus. In cases where an extension contributes Saveables to the Project Explorer, the extension is honored and the save action on the Project Explorer will save the provided saveable item instead of the active editor.&lt;/p&gt;
&lt;p id=&quot;CTSUcva&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649097 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288b0979ab.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;show-in-context-menu-available-for-normal-resources&quot;&gt;“Show In” context menu available for normal resources&lt;/h5&gt;
&lt;p&gt;The &lt;em&gt;Show In&lt;/em&gt; context menu is now available for an element inside a resource project on the &lt;em&gt;Project Explorer&lt;/em&gt;.&lt;/p&gt;
&lt;p id=&quot;EACPfRL&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649107 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288d81717c.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;show-colors-for-additions-and-deletions-in-compare-viewer&quot;&gt;Show colors for additions and deletions in Compare viewer&lt;/h5&gt;
&lt;p&gt;In simple cases such as a two-way comparison or a three-way comparison with no merges and conflicts, the &lt;em&gt;Compare&lt;/em&gt; viewer now shows different colors, depending on whether text has been added, removed, or modified. The default colors are green, red, and black, respectively.&lt;/p&gt;
&lt;p id=&quot;WZwBvIr&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649117 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc288f9ed9e9.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The colors can be customized through usual theme customization approaches, including using related entries in the Colors and Fonts preference page.&lt;/p&gt;
&lt;h5 id=&quot;editor-status-line-shows-more-selection-details&quot;&gt;Editor status line shows more selection details&lt;/h5&gt;
&lt;p&gt;The status line for Text Editors now shows the cursor position, and when the editor has something selected, it shows the number of characters in the selection as well. This also works in the block selection mode.&lt;/p&gt;
&lt;p&gt;These two new additions to the status line can be disabled via the &lt;em&gt;General &amp;gt; Editors &amp;gt; Text Editors&lt;/em&gt; preference page.&lt;/p&gt;
&lt;p id=&quot;FWOExwX&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649127 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2892891c5f.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;WozmhCk&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649137 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc2893cba375.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;shorter-dialog-text&quot;&gt;Shorter dialog text&lt;/h5&gt;
&lt;p&gt;Several dialog texts have been shortened. This allows you to capture important information faster.&lt;/p&gt;
&lt;p&gt;Previously:&lt;/p&gt;
&lt;p id=&quot;gkQxLJW&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649147 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28962eb8b2.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now:&lt;/p&gt;
&lt;p id=&quot;hvcRhOL&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649157 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289809331d.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;close-project-via-middle-click&quot;&gt;Close project via middle-click&lt;/h5&gt;
&lt;p&gt;In the Project Explorer, you can now close a project using middle-click.&lt;/p&gt;
&lt;h4 id=&quot;debug&quot;&gt;Debug&lt;/h4&gt;
&lt;h5 id=&quot;improved-usability-of-environment-tab-in-launch-configurations&quot;&gt;Improved usability of Environment tab in Launch Configurations&lt;/h5&gt;
&lt;p&gt;In the &lt;em&gt;Environment &lt;/em&gt;tab of the &lt;em&gt;Launch Configuration&lt;/em&gt; dialog, you can now double-click on an environment variable name or value and start editing it directly from the table.&lt;/p&gt;
&lt;p id=&quot;jlDQIQU&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649167 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289bbaa944.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Right-clicking on the environment variable table now opens a context menu, allowing for quick addition, removal, copying, and pasting of environment variables.&lt;/p&gt;
&lt;p id=&quot;lvnAjnF&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649177 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289d4cbe63.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;show-command-line-for-external-program-launch&quot;&gt;Show Command Line for external program launch&lt;/h5&gt;
&lt;p&gt;The &lt;em&gt;External Tools Configuration&lt;/em&gt; dialog for launching an external program now supports the &lt;em&gt;Show Command Line&lt;/em&gt; button.&lt;/p&gt;
&lt;p id=&quot;YvIXtXZ&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649187 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc289f8619f8.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;preferences&quot;&gt;Preferences&lt;/h4&gt;
&lt;h5 id=&quot;close-editors-automatically-when-reaching-99-open-editors&quot;&gt;Close editors automatically when reaching 99 open editors&lt;/h5&gt;
&lt;p&gt;The preference to close editors automatically is now enabled by default. It will be triggered when you have opened 99 files. If you continue to open editors, old editors will be closed to protect you from performance problems. You can modify this setting in the &lt;em&gt;Preferences &lt;/em&gt;dialog via the &lt;em&gt;General &amp;gt; Editors &amp;gt; Close&lt;/em&gt; editors automatically preference.&lt;/p&gt;
&lt;h5 id=&quot;in-table-color-previews-for-text-editor-appearance-color-options&quot;&gt;In-table color previews for Text Editor appearance color options&lt;/h5&gt;
&lt;p&gt;You can now see all the colors currently being used in &lt;em&gt;Text Editors&lt;/em&gt; from the &lt;em&gt;Appearance&lt;/em&gt; color options table, located in the &lt;em&gt;Preferences &amp;gt; General &amp;gt; Editors &amp;gt; Text Editor&lt;/em&gt; page.&lt;/p&gt;
&lt;p id=&quot;kiZnGAv&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a2598121.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649197 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a2598121.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;automatic-detection-of-ui-freezes-in-the-eclipse-sdk&quot;&gt;Automatic detection of UI freezes in the Eclipse SDK&lt;/h5&gt;
&lt;p&gt;The Eclipse SDK has been configured to show stack traces for UI freezes in the Error Log view by default for new workspaces. You can use this information to identify and report slow parts of the Eclipse IDE.&lt;/p&gt;
&lt;p id=&quot;gzSfxaG&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649207 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a6127521.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can disable the monitoring or tweak its settings via the options in the &lt;em&gt;General &amp;gt; UI Responsiveness Monitoring&lt;/em&gt; preference page as shown below.&lt;/p&gt;
&lt;p id=&quot;DWTLdpb&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot; size-full  wp-image-649217 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28a7e4e8cf.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;themes-and-styling&quot;&gt;Themes and Styling&lt;/h4&gt;
&lt;h5 id=&quot;start-automatically-in-dark-theme-based-on-os-theme&quot;&gt;Start automatically in dark theme based on OS theme&lt;/h5&gt;
&lt;p&gt;On Linux and Mac, Eclipse can now start automatically in dark theme when the OS theme is dark. This works by default, that is on a new workspace or when the user has not explicitly set or changed the theme in Eclipse.&lt;/p&gt;
&lt;h5 id=&quot;display-of-help-content-respects-os-theme&quot;&gt;Display of Help content respects OS theme&lt;/h5&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More and more operating systems provide a system-wide dark theme. Eclipse now respects this system-wide theme setting when the Eclipse help content is displayed in an external browser. A prerequisite for this is a browser that supports the prefers-color-scheme CSS media query.&lt;/p&gt;
&lt;p&gt;As of the time of writing, the following browser versions support it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Firefox version 67&lt;/li&gt;
&lt;li&gt;Chrome version 76&lt;/li&gt;
&lt;li&gt;Safari version 12.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p id=&quot;vKFrhgY&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot; size-full  wp-image-649237 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ac00ce7a.png&quot; /&gt;&lt;/a&gt;Help content uses high-resolution icons.&lt;/p&gt;
&lt;p&gt;The Help System, as well as the help content of the Eclipse Platform, the Java Development Tooling, and the Plug-in Development Environment, now uses high-resolution icons. They are now crisp on high-resolution displays and also look much better in the dark theme.&lt;/p&gt;
&lt;p id=&quot;MgPdhll&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot; size-full  wp-image-649247 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b01e109f.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;improved-dark-theme-on-windows&quot;&gt;Improved dark theme on Windows&lt;/h5&gt;
&lt;p&gt;Labels, Sections, Checkboxes, Radio Buttons, FormTexts, and Sashes on forms now use the correct background color in the dark mode on windows.&lt;/p&gt;
&lt;p id=&quot;eCZFkGA&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot; size-full  wp-image-649257 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b336d5f5.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;general-updates&quot;&gt;General Updates&lt;/h4&gt;
&lt;h5 id=&quot;interactive-performance&quot;&gt;Interactive performance&lt;/h5&gt;
&lt;p&gt;Interactive performance has been further improved in this release and several UI freezes have been fixed.&lt;/p&gt;
&lt;h5 id=&quot;show-key-bindings-when-command-is-invoked&quot;&gt;Show key bindings when command is invoked&lt;/h5&gt;
&lt;p&gt;For presentations, screencasts, and learning purposes, it is very helpful to show the corresponding key binding when a command is invoked. When the command is invoked (via a key binding or menu interaction) the key binding, the command’s name and description are shown on the screen.&lt;/p&gt;
&lt;p id=&quot;GYMhyBt&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot; size-full  wp-image-649267 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28b754fce3.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can activate this in the &lt;em&gt;Preferences&lt;/em&gt; dialog via the &lt;em&gt;Show key binding when command is invoked&lt;/em&gt; checkbox on the &lt;em&gt;General &amp;gt; Keys&lt;/em&gt; preference page. To toggle this setting quickly, you can use the &lt;em&gt;Toggle Whether to Show Key Binding&lt;/em&gt; command (e.g., via the quick access).&lt;/p&gt;
&lt;h3 id=&quot;java-developement-tools-jdt&quot;&gt;Java Developement Tools (JDT)&lt;/h3&gt;
&lt;h4 id=&quot;java-13-support&quot;&gt;Java 13 Support&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Java 13 is out, and Eclipse JDT supports Java 13 for 4.13 via Marketplace.&lt;/p&gt;
&lt;p&gt;The release notably includes the following Java 13 features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JEP 354: Switch Expressions (Preview).&lt;/li&gt;
&lt;li&gt;JEP 355: Text Blocks (Preview).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please note that these are preview language features; hence, the &lt;em&gt;enable preview&lt;/em&gt; option should be on. For an informal introduction of the support, please refer to &lt;a href=&quot;https://wiki.eclipse.org/Java13/Examples&quot;&gt;Java 13 Examples wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;java-views-and-dialogs&quot;&gt;Java Views and Dialogs&lt;/h4&gt;
&lt;h5 id=&quot;synchronize-standard-and-error-output-in-console&quot;&gt;Synchronize standard and error output in console&lt;/h5&gt;
&lt;p&gt;The &lt;em&gt;Eclipse Console&lt;/em&gt; view currently can not ensure that mixed standard and error output is shown in the same order as it is produced by the running process. For Java applications, the launch configuration &lt;em&gt;Common&lt;/em&gt; tab now provides an option to merge standard and error output. This ensures that standard and error output is shown in the same order it was produced but also disables the individual coloring of error output.&lt;/p&gt;
&lt;p id=&quot;gIOygVd&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot; size-full  wp-image-649277 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bcc0f373.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;java-editor&quot;&gt;Java Editor&lt;/h4&gt;
&lt;h5 id=&quot;convert-to-enhanced-for-loop-using-collections&quot;&gt;Convert to enhanced ‘for’ loop using Collections&lt;/h5&gt;
&lt;p&gt;The Java quickfix/cleanup &lt;em&gt;Convert to enhanced ‘for’ loop&lt;/em&gt; is now offered on &lt;code&gt;for&lt;/code&gt; loops that are iterating through Collections. The loop must reference the &lt;code&gt;size&lt;/code&gt; method as part of the condition and if accessing elements in the body, must use the &lt;code&gt;get&lt;/code&gt; method. All other Collection methods other than &lt;code&gt;isEmpty&lt;/code&gt; invalidate the quickfix being offered.&lt;/p&gt;
&lt;p id=&quot;sPapTUy&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot; size-full  wp-image-649287 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28bf5d868d.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;YEvemaq&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649297 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c0a94307.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;AHsmwvS&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649307 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c25a78cf.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;initialize-final-fields&quot;&gt;Initialize ‘final’ fields&lt;/h5&gt;
&lt;p&gt;A Java quickfix is now offered to initialize an uninitialized &lt;code&gt;final&lt;/code&gt; field in the class constructor. The fix will initialize a &lt;code&gt;String&lt;/code&gt; to the empty string, a numeric base type to 0, and, for class fields, it initializes them using their default constructor if available or &lt;code&gt;null&lt;/code&gt; if no default constructor exists.&lt;/p&gt;
&lt;p id=&quot;mawdFOH&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649317 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c4e3af01.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;ZsqgmUv&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649327 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c5d5925e.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;autoboxing-and-unboxing&quot;&gt;Autoboxing and Unboxing&lt;/h5&gt;
&lt;p&gt;Use &lt;em&gt;Autoboxing&lt;/em&gt; and &lt;em&gt;Unboxing&lt;/em&gt; when possible. These features are enabled only for Java 5 and higher.&lt;/p&gt;
&lt;p id=&quot;lNmXHIs&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649337 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28c83f066f.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;improved-redundant-modifier-removal&quot;&gt;Improved redundant modifier removal&lt;/h5&gt;
&lt;p&gt;The &lt;em&gt;Remove redundant modifier&lt;/em&gt; now also removes useless &lt;code&gt;abstract&lt;/code&gt; modifier on the interfaces.&lt;/p&gt;
&lt;p id=&quot;AXlqKLQ&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649347 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28ce95318e.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For the given code:&lt;/p&gt;
&lt;p id=&quot;JHNZiFo&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649357 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d0358ad7.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You get this:&lt;/p&gt;
&lt;p id=&quot;AChNWYA&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649367 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d1d55c4a.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;javadoc-comment-generation-for-module&quot;&gt;Javadoc comment generation for module&lt;/h5&gt;
&lt;p&gt;Adding a Javadoc comment to a Java module (module-info.java) will result in automatic annotations being added per the new module comment preferences.&lt;/p&gt;
&lt;p id=&quot;GdyeAMe&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649377 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d4d0982d.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;$(tags)&lt;/code&gt; directive will add &lt;code&gt;@uses&lt;/code&gt; and &lt;code&gt;@provides&lt;/code&gt; tags for all uses and provides module statements.&lt;/p&gt;
&lt;p id=&quot;fvoYQoK&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649387 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d68efcdf.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;chain-completion-code-assist&quot;&gt;Chain Completion Code Assist&lt;/h5&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Code assist for “Chain Template Proposals” will be available. These will traverse reachable local variables, fields, and methods, to produce a chain whose return type is compatible with the expected type in a particular context.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The preference to enable the feature can be found in the &lt;em&gt;Advanced&lt;/em&gt; sub-menu of the &lt;em&gt;Content Assis&lt;/em&gt;t menu group (&lt;em&gt;Preferences &amp;gt; Java &amp;gt; Editor &amp;gt; Content Assist &amp;gt; Advanced&lt;/em&gt;).&lt;/p&gt;
&lt;p id=&quot;KvCKJwO&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649397 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28d8d75fbc.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;java-formatter&quot;&gt;Java Formatter&lt;/h4&gt;
&lt;h5 id=&quot;remove-excess-blank-lines&quot;&gt;Remove excess blank lines&lt;/h5&gt;
&lt;p&gt;All the settings in the &lt;em&gt;Blank lines&lt;/em&gt; section can now be configured to remove excess blank lines, effectively taking precedence over the &lt;em&gt;Number of empty lines to preserve&lt;/em&gt; setting. Each setting has its own button to turn the feature on, right next to its number control. The button is enabled only if the selected number of lines is smaller than the &lt;em&gt;Number of empty lines to preserve;&lt;/em&gt; otherwise, any excess lines are removed anyway.&lt;/p&gt;
&lt;p id=&quot;hvxYnRD&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649407 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28dbac187d.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;changes-in-blank-lines-settings&quot;&gt;Changes in blank lines settings&lt;/h5&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There’s quite a lot of changes in the &lt;em&gt;Blank lines &lt;/em&gt;section of the formatter profile.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some of the existing subsections and settings are now phrased differently to better express their function:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;em&gt;Blank lines within class declarations&lt;/em&gt; subsection is now &lt;em&gt;Blank lines within type declaration.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Before first declaration&lt;/em&gt; is now &lt;em&gt;Before first member declaration.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Before declarations of the same kind&lt;/em&gt; is now &lt;em&gt;Between member declarations of different kind.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Before member class declarations&lt;/em&gt; is now &lt;em&gt;Between member type declarations.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Before field declarations&lt;/em&gt; is now &lt;em&gt;Between field declarations.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Before method declarations&lt;/em&gt; is now &lt;em&gt;Between method/constructor declarations.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;More importantly, a few new settings have been added to support more places where the number of empty lines can be controlled:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;After last member declaration&lt;/em&gt; in a type (to complement previously existing &lt;em&gt;Before first member declaration&lt;/em&gt; setting).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Between abstract method declarations&lt;/em&gt; in a type (these cases were previously handled by &lt;em&gt;Between method/constructor declarations&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;At end of method/constructor body&lt;/em&gt; (to complement previously existing &lt;em&gt;At beginning of method/constructor body&lt;/em&gt; setting).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;At beginning of code block&lt;/em&gt; and &lt;em&gt;At end of code block.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Before statement with code block&lt;/em&gt; and &lt;em&gt;After statement with code block.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Between statement groups in ‘switch.’&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of the new settings have been put in a new subsection &lt;em&gt;Blank lines within method/constructor declarations.&lt;/em&gt;&lt;/p&gt;
&lt;p id=&quot;iEvaaJW&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649417 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28de77401f.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;junit&quot;&gt;JUnit&lt;/h4&gt;
&lt;h5 id=&quot;junit-5-5-1&quot;&gt;JUnit 5.5.1&lt;/h5&gt;
&lt;p&gt;JUnit 5.5.1 is here and Eclipse JDT has been updated to use this version.&lt;/p&gt;
&lt;h4 id=&quot;debug-2&quot;&gt;Debug&lt;/h4&gt;
&lt;h5 id=&quot;enhanced-support-for-patch-module-during-launch&quot;&gt;Enhanced support for –patch-module during launch&lt;/h5&gt;
&lt;p&gt;The Java Launch Configuration now supports patching of different modules by different sources during the launch. This can be verified in the &lt;em&gt;Override Dependencies…​&lt;/em&gt; dialog in the &lt;em&gt;Dependencies&lt;/em&gt; tab in a Java Launch Configuration.&lt;/p&gt;
&lt;p id=&quot;UPIgMIc&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649427 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e37adacb.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;FVHSBeU&quot;&gt;&lt;a href=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578.png&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;  size-full   wp-image-649437 &quot; src=&quot;https://developers.redhat.com/blog/wp-content/uploads/2019/11/img_5dc28e47bb578.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;java-build&quot;&gt;Java Build&lt;/h4&gt;
&lt;h5 id=&quot;full-build-on-jdt-core-preferences-change&quot;&gt;Full build on JDT core preferences change&lt;/h5&gt;
&lt;p&gt;Manually changing the settings file &lt;code&gt;.settings/org.eclipse.jdt.core.prefs&lt;/code&gt; of a project will result in a full project build, if the workspace auto-build is on. For example, pulling different settings from a git repository or generating the settings with a tool will now trigger a build. Note that this includes timestamp changes, even if actual settings file contents were not changed.&lt;/p&gt;
&lt;p&gt;For the 4.13 release, it is possible to disable this new behavior with the VM property: &lt;code&gt;-Dorg.eclipse.disableAutoBuildOnSettingsChange=true&lt;/code&gt;. It is planned to remove this VM property in a future release.&lt;/p&gt;
&lt;h3 id=&quot;and-more&quot;&gt;And more…​&lt;/h3&gt;
&lt;p&gt;You can find more noteworthy updates in on &lt;a href=&quot;https://tools.jboss.org/documentation/whatsnew/jbosstools/4.13.0.Final.html&quot;&gt;this page&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;what-is-next&quot;&gt;What is next?&lt;/h2&gt;
&lt;p&gt;Having JBoss Tools 4.13.0 and Red Hat CodeReady Studio 12.13 out we are already working on the next release for Eclipse 2019-12.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a class=&quot;a2a_button_facebook&quot; href=&quot;https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;amp;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Facebook&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_twitter&quot; href=&quot;https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;amp;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Twitter&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_linkedin&quot; href=&quot;https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;amp;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;LinkedIn&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_email&quot; href=&quot;https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;amp;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Email&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_print&quot; href=&quot;https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;amp;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Print&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_reddit&quot; href=&quot;https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;amp;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Reddit&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_button_flipboard&quot; href=&quot;https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;amp;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09&quot; rel=&quot;nofollow noopener&quot; target=&quot;_blank&quot; title=&quot;Flipboard&quot;&gt;&lt;/a&gt;&lt;a class=&quot;a2a_dd addtoany_share_save addtoany_share&quot; href=&quot;https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F11%2F11%2Fnew-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09%2F&amp;amp;title=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.13.0.GA%20and%20JBoss%20Tools%204.13.0.Final%20for%20Eclipse%202019-09&quot;&gt;&lt;img alt=&quot;Share&quot; src=&quot;https://static.addtoany.com/buttons/favicon.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a href=&quot;https://developers.redhat.com/blog/2019/11/11/new-features-in-red-hat-codeready-studio-12-13-0-ga-and-jboss-tools-4-13-0-final-for-eclipse-2019-09/&quot; rel=&quot;nofollow&quot;&gt;New features in Red Hat CodeReady Studio 12.13.0.GA and JBoss Tools 4.13.0.Final for Eclipse 2019-09&lt;/a&gt; appeared first on &lt;a href=&quot;https://developers.redhat.com/blog&quot; rel=&quot;nofollow&quot;&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Mon, 11 Nov 2019 07:30:52 +0000</pubDate>
</item>
<item>
	<title>Ed Merks: Getting to the Source</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3879044552984472733.post-2271472252707441274</guid>
	<link>http://ed-merks.blogspot.com/2019/11/getting-to-source.html</link>
	<description>As a Java developer using JDT, no doubt you are intimately familiar with Ctrl-Shift-T to launch the Open Type dialog.  You might not even realize this is a shortcut accessible via the Navigate menu.  So you probably will not have noticed that this menu also contains Open Discovered Type: &lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-JwsYn0w4HDI/XcUkFZFWfpI/AAAAAAAACuA/x-itRQnxAi4l_srTPEYvffHS6d2Px8EEwCLcBGAsYHQ/s1600/NavigateOpenDiscoveredType.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;https://1.bp.blogspot.com/-JwsYn0w4HDI/XcUkFZFWfpI/AAAAAAAACuA/x-itRQnxAi4l_srTPEYvffHS6d2Px8EEwCLcBGAsYHQ/s320/NavigateOpenDiscoveredType.png&quot; width=&quot;169&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Eclipse has a huge variety of open source projects maintained in a bewildering collection of Git repositories.  Many are hosted at Eclipse:&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;&lt;a href=&quot;https://git.eclipse.org/c/&quot;&gt;https://git.eclipse.org/c/&lt;/a&gt;&lt;/blockquote&gt;Others are hosted at Github: &lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;&lt;a href=&quot;https://github.com/eclipse/&quot;&gt;https://github.com/eclipse/&lt;/a&gt;&lt;/blockquote&gt;&lt;br /&gt;Finding the Git repository that contains a particular Java class is like finding a needle in a haystack.  This is where Open Discovered Type comes to the rescue.  Once a week, Oomph indexes every *.java file in every Git repository hosted by git.eclipse.org and github.com/eclipse.  The Open Discovered Type dialog loads this information to populate a tree view of all these packages and classes.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-lZXS9WRSVr8/XcUophKI66I/AAAAAAAACuM/HfMp5TN738w_cQnDTi999qN5Y8COhXNPgCLcBGAsYHQ/s1600/EmptyOpenDiscoveredDialog.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;215&quot; src=&quot;https://1.bp.blogspot.com/-lZXS9WRSVr8/XcUophKI66I/AAAAAAAACuM/HfMp5TN738w_cQnDTi999qN5Y8COhXNPgCLcBGAsYHQ/s320/EmptyOpenDiscoveredDialog.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Please read the help information the first time you use it.  It was written to help you get the most out of this dialog.  Also be patient the first time you launch the dialog; there's a lot of information to download.&lt;br /&gt;&lt;br /&gt;Suffice to say, you can use the dialog much like you do Open Type.  So here we search for JavaCore and discover all the classes with that name:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-3Girme8m5z4/XcUrB7s2neI/AAAAAAAACuY/ISr8AMR0zuEgnlpkX5a3Vw337WNLKeiuACLcBGAsYHQ/s1600/OpenDiscoveredTypeDialogForJavaCore.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;https://1.bp.blogspot.com/-3Girme8m5z4/XcUrB7s2neI/AAAAAAAACuY/ISr8AMR0zuEgnlpkX5a3Vw337WNLKeiuACLcBGAsYHQ/s320/OpenDiscoveredTypeDialogForJavaCore.png&quot; width=&quot;249&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;We can select any one of them and discover all the Git repositories containing that class and we can use the context menu for each link for each repository or for the specific file in that repository to open the link where we want it opened.  From that link, you can of course see the full history of the repository or specific file.&lt;br /&gt;&lt;br /&gt;As a bonus, if this repository provides an Oomph setup, you can easily use that Oomph setup to import the sources for this project into your workspace. If there is no Oomph setup, you'll have to do that manually.&lt;br /&gt;&lt;br /&gt;In any case, contributing to Eclipse open source projects has never been easier.</description>
	<pubDate>Fri, 08 Nov 2019 09:04:06 +0000</pubDate>
	<author>noreply@blogger.com (Ed Merks)</author>
</item>
<item>
	<title>Lars Vogel: Eclipse startup up time improved</title>
	<guid isPermaLink="true">https://www.vogella.com/blog/posts/eclipse-ide-startuptime/</guid>
	<link>https://www.vogella.com/blog/posts/eclipse-ide-startuptime/</link>
	<description>I’m happy to report that the Eclipse SDK integration builds starts in less than 5 seconds (~4900 ms) on my machine into an empty workspace.
IIRC this used to be around 9 seconds 2 years ago. 4.13 (which was already quite a bit improved used around 5800ms (6887ms with EGit and Marketplace).
For recent improvements in this release see https://bugs.eclipse.org/bugs/show_bug.cgi?id=550136
Thanks to everyone who contributed.</description>
	<pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Ditto: Announcing Ditto Milestone 1.0.0-M2</title>
	<guid isPermaLink="true">https://www.eclipse.org/ditto/2019-11-04-milestone-announcement-100-M2.html</guid>
	<link>https://www.eclipse.org/ditto/2019-11-04-milestone-announcement-100-M2.html</link>
	<description>&lt;p&gt;The second and last milestone of the upcoming release 
&lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/1.0.0&quot;&gt;1.0.0&lt;/a&gt; was released today.&lt;/p&gt;

&lt;p&gt;Have a look at the Milestone &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_100-M2.html&quot;&gt;1.0.0-M2 release notes&lt;/a&gt; for what changed in detail.&lt;/p&gt;

&lt;p&gt;The main changes and new features since the last release &lt;a href=&quot;https://www.eclipse.org/ditto/release_notes_100-M1a.html&quot;&gt;1.0.0-M1a release notes&lt;/a&gt; are&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;invoking custom foreign HTTP endpoints as a result of events/messages&lt;/li&gt;
  &lt;li&gt;ability to reflect Eclipse Hono’s device connection state in Ditto’s things&lt;/li&gt;
  &lt;li&gt;support for OpenID Connect / OAuth2.0 based authentication in Ditto Java Client&lt;/li&gt;
  &lt;li&gt;configurbale throttling of max. consumed WebSocket commands / time interval&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;Ditto&quot; class=&quot;docimage&quot; src=&quot;https://www.eclipse.org/ditto/images/ditto.svg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;</description>
	<pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>Scott Lewis: ECF 3.14.6 Released</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-20358640.post-1917910940170520894</guid>
	<link>http://eclipseecf.blogspot.com/2019/11/ecf-3146-released_2.html</link>
	<description>&lt;a href=&quot;https://www.eclipse.org/ecf/&quot;&gt;ECF 3.14.6&lt;/a&gt; has been released and may be &lt;a href=&quot;https://www.eclipse.org/ecf/downloads.php&quot;&gt;downloaded&lt;/a&gt; here.&lt;br /&gt;&lt;br /&gt;In concert with this bug fix release have been a number of additions to &lt;a href=&quot;https://github.com/ECF&quot;&gt;ECF's github projects for Remote Services Development.&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Distribution and Discovery Providers&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;New:  &lt;a href=&quot;https://github.com/ECF/DubboProvider/&quot;&gt;Apache Dubbo-based Distribution Provider&lt;/a&gt;&lt;br /&gt;Enhanced:  &lt;a href=&quot;https://github.com/ECF/HazelcastProvider&quot;&gt;Hazelcast-based Distribution Provider&lt;/a&gt; and New: &lt;a href=&quot;https://github.com/ECF/HazelcastProvider&quot;&gt;Discovery Provider&lt;/a&gt;&lt;br /&gt;Enhanced:  System and Service-Properties docs for &lt;a href=&quot;https://wiki.eclipse.org/Distribution_Providers&quot;&gt;Distribution Providers&lt;/a&gt; and &lt;a href=&quot;https://wiki.eclipse.org/Discovery_Providers&quot;&gt;Discovery Providers&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Bndtools Development&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Enhanced:  &lt;a href=&quot;https://github.com/ECF/bndtools.workspace&quot;&gt;Bndtools Workspace, Project, and Bndrun templates for Remote Services Development&lt;/a&gt;&lt;br /&gt;New:  &lt;a href=&quot;https://github.com/ECF/bndtools.example.tasklist&quot;&gt;Bndtools Workspace with Jersey JaxRS Distribution Provider and Tasklist Example&lt;/a&gt;&lt;br /&gt;Enhanced:  &lt;a href=&quot;https://wiki.eclipse.org/Bndtools_Support_for_Remote_Services_Development&quot;&gt;Tutorial for using Bndtools for Remote Services Development&lt;/a&gt; &lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Sun, 03 Nov 2019 00:09:05 +0000</pubDate>
	<author>noreply@blogger.com (Scott Lewis)</author>
</item>
<item>
	<title>Jens von Pilgrim: Setup a Github Triggered Build Machine for an Eclipse Project</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-4884093826755448868.post-968132271991652819</guid>
	<link>https://jevopisdeveloperblog.blogspot.com/2019/10/setup-github-triggered-build-machine.html</link>
	<description>Disclaimer 1: This blog post literally is a &quot;web log&quot;, i.e., it is my log about setting up a Jenkins machine with a job that is triggered on a Github pull request. A lot of parts have been described elsewhere, and I link to the sources I used here. I also know that nowadays (e.g., new Eclipse build infrastructure) you usually do that via docker -- but then you need to configure docker, in which</description>
	<pubDate>Tue, 29 Oct 2019 12:55:56 +0000</pubDate>
	<author>noreply@blogger.com (Jens v.P.)</author>
</item>
<item>
	<title>Fabio Zadrozny: LiClipse 6.0.0 released</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7855001383687474475.post-1728353912076381023</guid>
	<link>http://liclipse.blogspot.com/2019/10/liclipse-600-released.html</link>
	<description>LiClipse 6.0.0 is now out.&lt;br /&gt;&lt;br /&gt;The main changes is that many dependencies have been updated:&lt;br /&gt;&lt;br /&gt;- it's now based on Eclipse 4.13 (2019-09), which is a pretty nice upgrade (in my day-to-day use I find it appears smoother than previous versions, although I know this sounds pretty subjective).&lt;br /&gt;&lt;br /&gt;- PyDev was updated to 7.4.0, so, Python 3.8 (which was just released) is now already supported.&lt;br /&gt;&lt;br /&gt;Enjoy!</description>
	<pubDate>Fri, 25 Oct 2019 18:59:14 +0000</pubDate>
	<author>noreply@blogger.com (Fabio Zadrozny)</author>
</item>
<item>
	<title>Denis Roy: Running a CI system is hard? It doesn't have to be.</title>
	<guid isPermaLink="false">6740 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/denis-roy/running-ci-system-hard-it-doesnt-have-be</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;At EclipseCon Europe 2019 I attended a very interesting talk entitled &quot;&lt;a href=&quot;https://www.eclipsecon.org/europe2019/sessions/ci-systems-need-care-too-heres-how-we-improved-ours-over-years&quot;&gt;CI systems need care, too! Here's how we improved ours over the years&lt;/a&gt;&quot;. It was an eye opener! Here's what I gathered.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;New developer comes to a Company&lt;/li&gt;
	&lt;li&gt;Company sells a software product built by a CI system&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;The CI system is a cobbled hack&lt;/strong&gt;&lt;/li&gt;
	&lt;li&gt;Developer raises awareness that
	&lt;ul&gt;
		&lt;li&gt;CI is important&lt;/li&gt;
		&lt;li&gt;Fast CI feedback loop is important&lt;/li&gt;
		&lt;li&gt;&lt;strong&gt;CI is on the criticali path to profit&lt;/strong&gt; (delivering the product)&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Developer becomes an IT sysadmin and a Release Engineer to fix the CI, thus &lt;strong&gt;distracted from the actual task of improving the product.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Eclipse CBI project (Common Build Infra) has been solving these problems for over 12 years. If you can relate to the unfortunate scenario above, here's what I can suggest:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;Host your code at the Eclipse Foundation. &lt;/strong&gt;

	&lt;ul&gt;
		&lt;li&gt;With IT and Release Engineers on staff, you can focus on code, not the build.&lt;/li&gt;
		&lt;li&gt;With Best Practices, we can help with your build so you can focus on code.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;If you must fix your CI system yourself:
	&lt;ul&gt;
		&lt;li&gt;&lt;strong&gt;Come to EclipseCon&lt;/strong&gt;. Seriously, &lt;strong&gt;we'll save you so much more than the price of admission&lt;/strong&gt;.&lt;/li&gt;
		&lt;li&gt;Check out the &lt;a href=&quot;https://wiki.eclipse.org/CBI&quot;&gt;Eclipse CBI project&lt;/a&gt;&lt;/li&gt;
		&lt;li&gt;Browse the Foundation's &lt;a href=&quot;https://www.youtube.com/user/EclipseFdn/search?query=cbi&quot;&gt;YouTube channel&lt;/a&gt;, there are a number of CBI talks that can be beneficial.
		&lt;ul&gt;
			&lt;li&gt;Specifically, &lt;a href=&quot;https://www.youtube.com/watch?v=rfWoxsWKG_E&quot;&gt;this one&lt;/a&gt; &lt;/li&gt;
		&lt;/ul&gt;
		&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;We've all been guilty of reinventing the wheel. Let's not do that. &lt;a href=&quot;https://www.eclipsecon.org/europe2019/eclipse-night-school&quot;&gt;We're here to help&lt;/a&gt; (slides to come).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-tags field-type-taxonomy-term-reference field-label-above&quot;&gt;&lt;div class=&quot;field-label&quot;&gt;Tags: &lt;/div&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/cbi&quot;&gt;cbi&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item odd&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/ci&quot;&gt;ci&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/build&quot;&gt;Build&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;field-item odd&quot;&gt;&lt;a href=&quot;https://blogs.eclipse.org/blog-tags/jenkins&quot;&gt;jenkins&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 23 Oct 2019 09:44:07 +0000</pubDate>
</item>
<item>
	<title>Ekkehard Gentz: Qt World Summit 2019 Berlin – Secrets of Successful Mobile Business Apps</title>
	<guid isPermaLink="false">http://ekkescorner.wordpress.com/?p=4353</guid>
	<link>https://ekkescorner.wordpress.com/2019/10/22/qt-world-summit-2019-berlin-secrets-of-successful-mobile-business-apps/</link>
	<description>&lt;h1&gt;Qt World Summit 2019&lt;/h1&gt;
&lt;p&gt;Meet me at &lt;a href=&quot;https://www.qtworldsummit.com/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;Qt World Summit 2019 in Berlin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.qt.io/qtws19/home&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;QtWS19_globe&quot; class=&quot;alignnone size-full wp-image-4347&quot; src=&quot;https://ekkescorner.files.wordpress.com/2019/10/qtws19_globe.png?w=550&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’ll speak about development of mobile business apps with&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Qt 5.13.1+ (Qt Quick Controls 2)
&lt;ul&gt;
&lt;li&gt;Android&lt;/li&gt;
&lt;li&gt;iOS&lt;/li&gt;
&lt;li&gt;Windows 10&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://www.qtworldsummit.com/2019/sessions/mobile-business-apps-with-qt/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;ekkes_session_qtws19&quot; class=&quot;alignnone size-full wp-image-4356&quot; src=&quot;https://ekkescorner.files.wordpress.com/2019/10/ekkes_session_qtws19.png?w=550&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Qt World Summit 2019 Conference App&lt;/h1&gt;
&lt;p&gt;As a little appetizer I developed a conference app. HowTo download from Google Play Store or Apple and some more screenshots see &lt;a href=&quot;https://appbus.wordpress.com/2019/10/21/qt-world-summit-2019-conference-app/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://appbus.wordpress.com/2019/10/21/qt-world-summit-2019-conference-app/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;02_sessions_android&quot; class=&quot;alignnone size-full wp-image-4358&quot; src=&quot;https://ekkescorner.files.wordpress.com/2019/10/02_sessions_android.png?w=550&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sources at &lt;a href=&quot;https://github.com/ekke/c2gQtWS_x&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;cu in Berlin&lt;/p&gt;</description>
	<pubDate>Tue, 22 Oct 2019 12:39:24 +0000</pubDate>
</item>
<item>
	<title>Lars Vogel: A nicer icon for Quick Access / Find Actions</title>
	<guid isPermaLink="true">https://www.vogella.com/blog/posts/eclipse-ide-new-icon/</guid>
	<link>https://www.vogella.com/blog/posts/eclipse-ide-new-icon/</link>
	<description>Finally we use a decent icon for Quick Access / Find Actions. This is now a button in the toolbar which allows you to trigger arbitrary commands in the Eclipse IDE.</description>
	<pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate>
</item>
<item>
	<title>BJ Hargrave: A Tool for Jakarta EE Package Renaming in Binaries</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-18834385.post-2773222166057858942</guid>
	<link>https://blog.hargrave.io/2019/10/a-tool-for-jakarta-ee-package-renaming.html</link>
	<description>In a &lt;a href=&quot;https://blog.hargrave.io/2019/05/jakarta-ee-and-package-renaming.html&quot;&gt;previous post&lt;/a&gt;, I laid out my thinking on how to approach the package renaming problem which the Jakarta EE community now faces. Regardless of whether the community chooses big bang or incremental, there are still existing artifacts in the world using the Java EE package names that the community will need to use together with the new Jakarta EE package names.&lt;br /&gt;&lt;br /&gt;Tools are always important to take the drudgery away from developers. So I have put together a &lt;a href=&quot;https://github.com/bjhargrave/transformer&quot;&gt;tool&lt;/a&gt; prototype which can be used to transform binaries such as individual class files and complete JARs and WARs to rename uses of the Java EE package names to their new Jakarta EE package names.&lt;br /&gt;&lt;br /&gt;The tools is rule driven which is nice since the Jakarta EE community still needs to define the actual package renames for Jakarta EE 9. The rules also allow the users to control which class files in a JAR/WAR are transformed. Different users may want different rules depending upon their specific needs. And the tool can be used for any package renaming challenge, not just the specific Jakarta EE package renames.&lt;br /&gt;&lt;br /&gt;The tools provides an API allowing it to be embedded in a runtime to dynamically &lt;a href=&quot;https://github.com/bjhargrave/transformer/blob/5b2ba77f4647cce275567219e4e97cd7b41ef0b1/src/main/java/dev/hargrave/transformer/Transformer.java#L231&quot;&gt;transform class files&lt;/a&gt; during the class loader definition process. The API also supports &lt;a href=&quot;https://github.com/bjhargrave/transformer/blob/5b2ba77f4647cce275567219e4e97cd7b41ef0b1/src/main/java/dev/hargrave/transformer/Transformer.java#L158&quot;&gt;transforming JAR files&lt;/a&gt;. A &lt;a href=&quot;https://github.com/bjhargrave/transformer#command-line&quot;&gt;CLI&lt;/a&gt; is also provided to allow use from the command line. Ultimately, the tool can be packaged as Gradle and Maven plugins to incorporate in a broader tool chain.&lt;br /&gt;&lt;br /&gt;Given that the tool is prototype, and there is much work to be done in the Jakarta EE community regarding the package renames, I have started a &lt;a href=&quot;https://github.com/bjhargrave/transformer/labels/enhancement&quot;&gt;list of TODOs&lt;/a&gt; in the project' issues for known work items.&lt;br /&gt;&lt;br /&gt;Please try out the tool and let me know what you think. I am hoping that tooling such as this will ease the community cost of dealing with the package renames in Jakarta EE.&lt;br /&gt;&lt;br /&gt;PS. Package renaming in source code is also something the community will need to deal with. But most IDEs are pretty good at this sort of thing, so I think there is probably sufficient tooling in existence for handling the package renames in source code.</description>
	<pubDate>Thu, 17 Oct 2019 21:26:16 +0000</pubDate>
	<author>noreply@blogger.com (BJ Hargrave)</author>
</item>
<item>
	<title>Doug Schaefer: I’ll never forget that first EclipseCon meeting with you guys and Disney characters all around and…</title>
	<guid isPermaLink="false">https://medium.com/p/a91be3d126b2</guid>
	<link>https://medium.com/@dougschaefer/ill-never-forget-that-first-eclipsecon-meeting-with-you-guys-and-disney-characters-all-around-and-a91be3d126b2?source=rss-8f7a70438965------2</link>
	<description>&lt;p&gt;I’ll never forget that first EclipseCon meeting with you guys and Disney characters all around and the music. And all the late nights in the Santa Clara bar and summits and meetings talking until no one else was left. Great times indeed. Until we meet again Michael!&lt;/p&gt;&lt;img height=&quot;1&quot; src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=a91be3d126b2&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 16 Oct 2019 01:18:06 +0000</pubDate>
</item>
<item>
	<title>EclipseCon Europe 2019: Missing ECE already? Bring back a little of it - take the survey!</title>
	<guid isPermaLink="false">2258 at https://www.eclipsecon.org</guid>
	<link>https://www.eclipsecon.org/europe2019/news/missing-ece-already-bring-back-little-it-take-survey</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;We hope you enjoyed the 2019 version of EclipseCon Europe and OSGi Community Event as much as we did.&lt;/p&gt;

&lt;p&gt;Please share your thoughts and feedback by completing the &lt;a href=&quot;https://www.surveymonkey.com/r/EclipseConEurope2019&quot; target=&quot;_blank&quot;&gt;short attendee survey&lt;/a&gt;. We read all responses, and we will use them to improve next year's event.&lt;/p&gt;

&lt;p&gt;Speakers, please upload your slides to your session page. Attendees really appreciate this!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019/news/missing-ece-already-bring-back-little-it-take-survey&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/jon-tyson-vD6UFu8QYUI-unsplash.jpg?itok=y0QRkbws&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Tue, 15 Oct 2019 21:22:00 +0000</pubDate>
</item>
<item>
	<title>Thabang Mashologu: A Committer’s View of Our New ECD Tools Working Group</title>
	<guid isPermaLink="false">6736 at https://blogs.eclipse.org</guid>
	<link>https://blogs.eclipse.org/post/thabang-mashologu/committer%E2%80%99s-view-our-new-ecd-tools-working-group</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p dir=&quot;ltr&quot;&gt;When you look at the very impressive list of founding members for our new &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/eclipse_cloud_development_charter.php&quot;&gt;Eclipse Cloud Development (ECD) Tools Working Group&lt;/a&gt;, it’s clear that world-leading technology companies strongly believe that open source, cloud native development tools are needed. Our Eclipse Foundation developer community has also enthusiastically embraced the initiative.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;To get an insider’s view of why the ECD Tools Working Group initiative is so important, I recently talked to&lt;a href=&quot;https://projects.eclipse.org/user/12136&quot;&gt; Carlos Andres De La Rosa&lt;/a&gt;, an active Eclipse Foundation committer, about why he is getting involved in the Working Group. Here’s an edited version of our conversation.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. How did you first become involved in the open source communities at the Eclipse Foundation?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; A. I was looking for something interesting from which I could learn something new related to cloud technologies. I found the Eclipse MicroProfile project about two years ago. That was a very interesting topic for me, especially the fault tolerance spec. I added my email address to the mailing list and started joining weekly calls. After a while, I started to contribute to the spec with different things, like improving the spec testing, adding and modifying documentation, and also debating about how to evolve the spec. I became a committer and an entire technological world opened up for me. Jakarta EE was another interesting project that got my attention, so then I became involved with the Jakarta EE community.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;I like the fact that Eclipse projects are from the people, for the people, so anyone can learn and contribute to solve problems that can help a lot of developers around the world. It’s shared knowledge and that’s the most important thing for me.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. Why did you expand your involvement to include the ECD Tools Working Group?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; A. When you’re part of the community, you have access to beta versions of the specifications and projects. I was looking around and I learned about this new project for cloud development tools. I saw the &lt;a href=&quot;https://www.eclipse.org/org/workinggroups/eclipse_cloud_development_charter.php&quot;&gt;charter&lt;/a&gt; and what people were trying to achieve and I knew I wanted to be part of it. It was that simple.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;I think cloud technologies will be the biggest and most important topic for the next 10 years. Everything is moving to the cloud, so every day we have more applications, from banking to AI medical analysis services. And, people have easy access to all this thanks to the cloud. I want to be there at the forefront and be working for the community when cloud really starts to grow.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. What benefits do you expect to gain from your participation in the ECD Tools Working Group?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;A. It’s a huge opportunity to learn from the best engineers in the world because there are a lot of great professionals at the Eclipse Foundation and they have a lot of experience driving technology forward. If you’re new to this field and you’re trying to learn new things, this is a big chance to do it. Also, I’m currently working as a cloud consultant and this project is very related to my day-to-day job, so I can use what I learn in this project to improve my consultancy services.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. What impact do you think the ECD Tools Working Group will have on open source, cloud native development?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;A. I think the impact will be huge because this group will deliver all of the tools that will be used every day in cloud development. From deploy, scale, debug, and manage, to Cloud Foundry applications, everything is integrated with the Eclipse IDE making the job of developers more productive.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. How does your participation in the ECD Tools Working Group fit with the other cloud-related projects you’re involved with at the Eclipse Foundation?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;A. Everything is related. MicroProfile provides implementations and specs for capabilities such as fault tolerance that are needed in a microservices architecture to make it easier for developers to create microservices. And the Jakarta EE specs are basically the foundation for the MicroProfile framework because MicroProfile depends on the Java enterprise specs. The Eclipse Cloud Development Tools is a complementary project that helps to complete the framework for cloud native applications. So, they are all part of the cloud ecosystem. &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;I really think that MicroProfile, Jakarta EE, and now the Eclipse Cloud Development Tools Working Group are the three most important projects at the Eclipse Foundation right now. They will drive the future of cloud technologies and everything that is handled and developed by the community.&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt; &lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;&lt;strong&gt;Q. What would you say to people who are considering joining the ECD Tools Working Group?&lt;/strong&gt;&lt;/p&gt;

&lt;p dir=&quot;ltr&quot;&gt;A. I would say “join now!” The most important thing I can tell people is get involved if you want to learn about a cutting-edge technology that will be driving peoples’ lives for a long time. And contribute to help create something meaningful. It’s a community, so it’s for everyone.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 10 Oct 2019 13:48:21 +0000</pubDate>
</item>
<item>
	<title>Chris Aniszczyk: Open Source Gerrymandering</title>
	<guid isPermaLink="false">https://www.aniszczyk.org/?p=4203</guid>
	<link>https://www.aniszczyk.org/2019/10/08/open-source-gerrymandering/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Over the years, I have spent a lot of time thinking about and working on open source communities… from bootstrapping projects out of corporations (or broken communities), to starting brand new open source foundations.&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;&quot;Good governance never depends upon laws, but upon the personal qualities of those who govern… The most important element of government, therefore, is the method of choosing leaders&quot;&lt;/p&gt;
&lt;p&gt;— Chris Aniszczyk (@cra) &lt;a href=&quot;https://twitter.com/cra/status/1166767809185165312?ref_src=twsrc%5Etfw&quot;&gt;August 28, 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I was recently having a conversation with an old colleague about bringing an open source project out of a company into the wild and how to setup the project for success. A key part of that discussion involved setting up the governance for the project and what that means. There was also discussion how neutral and open governance under a nonprofit foundation can be good for certain projects as &lt;/span&gt;&lt;a href=&quot;http://openlife.cc/blogs/2010/november/how-grow-your-open-source-project-10x-and-revenues-5x&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;research&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; has shown that neutral foundations can promote growth and community better than other approaches. Also the conversation led to a funny side discussion on the concept of &lt;/span&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Gerrymandering&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;gerrymandering&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; and open source.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter size-full wp-image-4315&quot; height=&quot;722&quot; src=&quot;https://www.aniszczyk.org/wp-content/uploads/2018/02/gerrymandering.png&quot; width=&quot;994&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;For those who arenâ€™t familiar with the term, itâ€™s become popular in the US political lexicon as a â€œpractice intended to establish a political advantage for a particular party or group by manipulating district boundaries.â€� A practical example of this is from my town of Austin TX which is in district 35 which snakes all the way from Austin to San Antonio for &lt;/span&gt;&lt;a href=&quot;https://www.politifact.com/texas/statements/2018/aug/16/beto-orourke/texas-one-nations-most-gerrymandered-states/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;some reason&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The same concept of gerrymandering can apply to open source communities as open source projects can act like mini political institutions (or bigger ones in the case of Kubernetes). I shared some of my favorite examples with my friend so I figured Iâ€™d write this down for future reference and share it with folks as you really need to read the â€œfine printâ€� to find these at times.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Apache Cassandra&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The Apache Software Foundation (ASF) is a fantastic open source organization that has been around for a long time (they celebrated their 20th anniversary) and has had a lot of impact across the world. The way projects are governed in the ASF are through the &lt;/span&gt;&lt;a href=&quot;https://www.apache.org/theapacheway/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Apache Way&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, which places a lot of emphasis on â€œcommunity over codeâ€� amongst some other principles which are great practices for open source projects to follow.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;There have been some interesting governance issues and lessons learned over the years in the ASF, in particular it can be challenging when you have a strong single vendor associated with a project as was with the case with Cassandra awhile ago:&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;The Apache Software Foundation is really out of line in their actions with Cassandra IMO. Meeting notes: &lt;a href=&quot;https://t.co/TQXvF0pfex&quot;&gt;https://t.co/TQXvF0pfex&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Kelly Sommers (@kellabyte) &lt;a href=&quot;https://twitter.com/kellabyte/status/794377137092497408?ref_src=twsrc%5Etfw&quot;&gt;November 4, 2016&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;As the ASF board noted in &lt;/span&gt;&lt;a href=&quot;https://www.apache.org/foundation/records/minutes/2016/board_minutes_2016_08_17.txt&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;the minutes&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; from its meeting with DataStax representatives, “The Board expressed continuing concern that the PMC was not acting independently and that one company had undue influence over the project.” There was some interesting &lt;/span&gt;&lt;a href=&quot;https://www.theregister.co.uk/2016/11/14/datastax_versus_asf_staxeit/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;press&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; around the time this happened:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;â€œJagielski told me in an interview, echoing what &lt;/span&gt;&lt;/i&gt;&lt;a href=&quot;http://www.mail-archive.com/dev@cassandra.apache.org/msg10122.html&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;he’d said&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; on the Cassandra mailing list, that undue influence conflicts with project leadership obligations established by the ASF. As he suggested, the ASF tried many times to get a DataStax-heavy Project Management Committee (PMC) to pay attention to alleged trademark and other &lt;/span&gt;&lt;/i&gt;&lt;a href=&quot;http://apache.org/foundation/press/Project-PR-BrandGuidelines.pdf&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;violations&lt;/span&gt;&lt;/i&gt;&lt;/a&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, to no avail. Whatever DataStax’s positive influence on the development of the projectâ€”in other wordsâ€”it failed to exercise equivalent influence on governing the project in ASF fashion.â€�&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The ASF basically forced a reorganization of the Cassandra PMC to be in more in lines with its values and then caused the primary vendor behind the project to pull engineers off the open source project.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Containerd&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The &lt;/span&gt;&lt;a href=&quot;https://containerd.io/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;containerd&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; project is an industry-standard container runtime with an emphasis on simplicity, robustness and portability. The history of the project comes from being born at Docker where their open source projects had a governance policy essentially aligned with the BDFL philosophy with one of their project founders.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In &lt;a href=&quot;https://cncf.io&quot;&gt;CNCF&lt;/a&gt;, (which containered is a project of), project governance documents arenâ€™t considered static and evolve over time to meet the needs of their community. For example, when containerd &lt;/span&gt;&lt;a href=&quot;https://www.cncf.io/announcement/2017/03/29/containerd-joins-cloud-native-computing-foundation/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;joined&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; the CNCF their governance was geared towards a BDFL approach but over time evolved to a more &lt;/span&gt;&lt;a href=&quot;https://github.com/containerd/project/pull/16&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;neutral&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; approach that spread authority across maintainers.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Cloud Foundry&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Cloud Foundry is an open source community that has a large and mature ecosystem of PaaS focused projects. In the Cloud Foundry Foundation (CFF), they have a&lt;/span&gt;&lt;a href=&quot;https://www.cloudfoundry.org/wp-content/uploads/2017/01/CFF_Bylaws.pdf&quot;&gt; &lt;span style=&quot;font-weight: 400;&quot;&gt;unique governance clauses&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; in regards to how affiliates are treated and voting.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Pivotal Platinum Director Voting Power. The Platinum Director appointed by Pivotal (â€œPivotal Directorâ€�) shall have five (5) votes on any matter submitted to a vote of the Board. (i) On a date one (1) year after the incorporation date set forth in the Certificate, the number of Pivotal Directorâ€™s votes will be reduced to three (3). (ii) On a date two (2) years after the incorporation date set forth in the Certificate, the number of Pivotal Directorâ€™s votes will be reduced to one (1)&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;To bootstrap the foundation, the originating company wanted a &lt;/span&gt;&lt;b&gt;little bit of control&lt;/b&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; for a couple of years, which can make sense in some situations as the beginning of a foundation can be a tumultuous time. In my opinion, itâ€™s great to see the extra vote clause expire after 2 years, however, itâ€™s still very unfair to the early potential members of the organization.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Another example of open source gerrymandering can be how votes are represented by member companies that are owned by a single entity:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;At no time may a Member and its Affiliates have more than one Director who is an employee, officer, director, or consultant of that Member, except that Pivotal, EMC, and VMware, though Affiliates, shall each have one (1) Director on the Board).&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This is an interesting tidbit given that Dell owns Pivotal, EMC and VMWare. In some organizations, usually there is &lt;/span&gt;&lt;a href=&quot;https://github.com/cdfoundation/charter/blob/master/CHARTER.md#9-subsidiaries-and-related-companies&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;legal language&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; that collapses owned entities into one vote.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I personally Iâ€™m not the biggest fan of this approach as it makes things unfair from the beginning and can be an impediment to wide adoption across the industry. There can definitely be reasons of why you need to do this in the formation phase but it should be done with caution. If you saw the recent news that Pivotal was being spun back into VMWare and their &lt;/span&gt;&lt;a href=&quot;https://www.theregister.co.uk/2019/07/25/pivotal_ford_write_down/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;woes with adoption&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, it shouldnâ€™t come as a surprise in my opinion as one company was bearing too much of the burden in my opinion and not building a diverse community of contributors.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Cloud Native Computing Foundation (CNCF)&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If you remember the early days of the container and orchestration wars, there was a lot different technologies, approaches and corporate politics. When CNCF was founded, the &lt;/span&gt;&lt;a href=&quot;https://github.com/cncf/foundation/commit/0659ab992e0e3e04324beff1214f17cb8896cd4c#diff-778830d439b70bb644e57dac072da3e6&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;original charter&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; included a clause that upgraded certain startup members from Silver to Platinum that were important in the ever evolving cloud native ecosystem.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;â€œThe Governing Board may extend a Platinum membership at the Silver Membership Scale rates on a year-by-year basis for up to 5 years to startup companies with revenues less than $50 million that are deemed strategic technology contributors by the Governing Board.â€�&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In my opinion, that particular piece in the charter was important in bringing together all the relevant startups to the table along with the big established companies at the time.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In terms of projects, the CNCF Technical Oversight Committee (TOC) defines a set of &lt;/span&gt;&lt;a href=&quot;https://github.com/cncf/toc/blob/master/PRINCIPLES.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;principles&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; to steward the technical community. The most important principle is around a minimum viable governance that enables projects to be self-governing. TOC members are available to provide guidance to the projects but do not control them.Â &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;https://twitter.com/CloudNativeFdn/status/1167455648768045056&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Unlike Apache and the &lt;/span&gt;&lt;a href=&quot;https://www.apache.org/theapacheway/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Apache Way&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, CNCF does not require its hosted projects to follow any specific governance model. Instead, CNCF &lt;/span&gt;&lt;a href=&quot;https://github.com/cncf/toc/blob/master/process/graduation_criteria.adoc&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;specifies&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; that graduated projects need to â€œexplicitly define a project governance and committer process.â€� So in reality, CNCF operates under the principle of subsidiarity, encouraging decisions to be made at the lowest project level consistent with their resolution.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;GitLab&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;GitLab is a fantastic open source project AND company that I admire deeply for their &lt;/span&gt;&lt;a href=&quot;https://about.gitlab.com/handbook/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;transparency&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;. The way the GitLab &lt;/span&gt;&lt;b&gt;project&lt;/b&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; is structured is that itâ€™s wholly owned by the GitLab company (they also own the trademark). To the credit of GitLab, they make this clear via their &lt;/span&gt;&lt;a href=&quot;https://about.gitlab.com/company/stewardship/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;stewardship principles&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; online and discuss what they consider enterprise product work versus project work.&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;nice &quot;stewardship promises&quot; from &lt;a href=&quot;https://twitter.com/gitlab?ref_src=twsrc%5Etfw&quot;&gt;@gitlab&lt;/a&gt; based on their opencore business model, all opencore biz should do this &lt;a href=&quot;https://t.co/mqGkOeejp3&quot;&gt;https://t.co/mqGkOeejp3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Chris Aniszczyk (@cra) &lt;a href=&quot;https://twitter.com/cra/status/819988877335207938?ref_src=twsrc%5Etfw&quot;&gt;January 13, 2017&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Iâ€™d love for them in the future to separate the branding from the company, project and the product as I believe itâ€™s confusing and dilutes the messaging, but that’s just my opinion &lt;img alt=&quot;ğŸ™‚&quot; class=&quot;wp-smiley&quot; src=&quot;https://s.w.org/images/core/emoji/12.0.0-1/72x72/1f642.png&quot; style=&quot;height: 1em;&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Istio&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Istio is a popular service mesh project originated at Google. It has documented its governance model publicly: &lt;/span&gt;&lt;a href=&quot;https://github.com/istio/community/blob/master/STEERING-COMMITTEE.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;https://github.com/istio/community/blob/master/STEERING-COMMITTEE.md&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;However, as you can see, itâ€™s heavily tilted towards Google and there seems to be no limits on the number of spots on the steering committee from one company which is a common tactic in open governance approaches to keep things fair. On top of that, Google owns the trademark, domains and other project assets so Iâ€™d consider Istio to be heavily gerrymandered in Googleâ€™s versus the communityâ€™s interest.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;JCP&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I had the pleasure of serving on the Java Community Process (JCP) Executive Committee for a few years while I was at Twitter. Itâ€™s a great organization that drives standardization across the Java ecosystem, some of the &lt;/span&gt;&lt;a href=&quot;https://jcp.org/en/procedures/jcp2#3.7&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;fine print is interesting though&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;â€œThe EC is composed of 25 Java Community Process Members whose seats are allocated as follows: 16 Ratified Seats, 6 Elected Seats, and 2 Associate Seats, plus one permanent seat held by Oracle. (Oracle’s representative must not be a member of the PMO.) The EC is led by a non-voting Chair from the PMO.â€�&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This essentially gives Oracle a permanent seat on the Executive Committee.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Hereâ€™s another fun clause:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Ballots to approve Umbrella JSRs that define the initial version of a new Platform Edition Specification or JSRs that propose changes to the Java language are approved if (a) at least a two-thirds majority of the votes cast are “yes” votes, (b) a minimum of 5 “yes” votes are cast, and (c) Oracle casts one of the “yes” votes. Ballots are otherwise rejected.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;This essentially gives Oracle a veto vote on any JSR.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Note: The coolest thing the JCP has done is contribute the EE specification work to the Eclipse Foundation and form the Jakarta project over there to &lt;/span&gt;&lt;a href=&quot;https://blogs.eclipse.org/post/tanja-obradovic/how-participate-advancing-jakarta-ee-specification&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;steward things in an open way&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Knative&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Knative, like Istio mentioned above, is an open source project that was born at Google and controlled by Google. There have been a lot of discussion lately about this as Google recently decided to not openly govern the project and move it to a neutral foundation:&lt;/span&gt;&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;I'm pretty disappointed to see Knative forgo open governance.&lt;a href=&quot;https://t.co/fVhbP687rs&quot;&gt;https://t.co/fVhbP687rs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The growth and user focus of Kubernetes, Helm and many others show that CNCF is a great home for open communities.&lt;/p&gt;
&lt;p&gt;OSS is better if we work together in neutral spaces&lt;/p&gt;
&lt;p&gt;— brendandburns (@brendandburns) &lt;a href=&quot;https://twitter.com/brendandburns/status/1179176440647913472?ref_src=twsrc%5Etfw&quot;&gt;October 1, 2019&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Kubernetes&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Kubernetes operates under the auspices of the CNCF and openly governed by the &lt;/span&gt;&lt;a href=&quot;https://kubernetes.io/blog/2019/10/03/2019-steering-committee-election-results/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Kubernetes Steering Committee&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (KSC). The Kubernetes project has &lt;/span&gt;&lt;a href=&quot;https://www.cncf.io/cncf-kubernetes-project-journey/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;grown significantly over time&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;, but has done a great job of keeping things openly governed and inclusive in my opinion, especially compared to its project size these days. The KSC &lt;/span&gt;&lt;a href=&quot;https://github.com/kubernetes/community/blob/master/governance.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;governs the project&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; along with a variety of sub working groups. Also, the Kubernetes trademark is neutrally owned by the CNCF and openly governed via the &lt;/span&gt;&lt;a href=&quot;https://github.com/kubernetes/community/blob/master/governance.md&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Conformance Working Group&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; which decides how certification works for the community, which there are nearly &lt;/span&gt;&lt;a href=&quot;https://www.cncf.io/certification/software-conformance/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;100 certified solutions&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; out there!&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Spinnaker&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The Spinnaker project was originally born at Netflix and recently spun out into the &lt;/span&gt;&lt;a href=&quot;https://cd.foundation&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Continuous Delivery Foundation&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (CDF) as an openly &lt;/span&gt;&lt;a href=&quot;https://www.spinnaker.io/community/governance/&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;governed&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; project. The project assets, from domains to github to trademarks are all neutrally owned by the community through the CDF.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Vault&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;a href=&quot;https://github.com/hashicorp/vault&quot;&gt;Vault&lt;/a&gt; is a fantastic and widely used secrets management tool from Hashicorp. Itâ€™s a single vendor controlled open source project that has an open core model with an open source and enterprise versions (see &lt;/span&gt;&lt;a href=&quot;https://www.hashicorp.com/products/vault/enterprise&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;matrix&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;). What this essentially means is that the buck stops at the single vendor on what features/fixes end up in the open source version, most likely that wonâ€™t include things that they sell in their enterprise offering.&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Conclusion&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;I hope you learned something new about open source projects, foundations and communities as these things can be a little bit more complicated as you dig into the details. Itâ€™s really important to note that there is a difference between open source and &lt;/span&gt;&lt;a href=&quot;https://github.com/opengovernance/opengovernance.dev&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;open governance&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; and you should always be skeptical of a project that claims itâ€™s truly open if only one for profit company owns all the assets and control. While thereâ€™s nothing wrong with this approach at all, most organizations donâ€™t set expectations up front which can lead to frustrations down the road. Note, thereâ€™s nothing wrong with single vendor controlled open source projects, I think they are great but I think they need to be upfront, similar to what GitLab stewardship principles on what they will put in open source versus their enterprise version.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;In conclusion, as with anything in life, you should always read the fine print of an open source communities charter or legal paperwork to understand how it works. The lesson here is that every organization or project has its own rules and governance and itâ€™s important that you understand how decisions are made and who has ownership of project assets like trademarks.&lt;/span&gt;&lt;/p&gt;</description>
	<pubDate>Tue, 08 Oct 2019 18:20:53 +0000</pubDate>
</item>
<item>
	<title>Jens von Pilgrim: JShell in Eclipse</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-4884093826755448868.post-5953202569285019139</guid>
	<link>https://jevopisdeveloperblog.blogspot.com/2019/10/jshell-in-eclipse.html</link>
	<description>Java 9 introduced a new command line tool: JShell. This is a read–eval–print loop (REPL) for Java with some really nice features. For programmers I would assume writing a test is the preferred choice, but for demonstrating something (in a class room for example) this is a perfect tool if you are not using a special IDE such as BlueJ (which comes with its own REPL).

The interesting thing about</description>
	<pubDate>Tue, 08 Oct 2019 12:16:32 +0000</pubDate>
	<author>noreply@blogger.com (Jens v.P.)</author>
</item>
<item>
	<title>PapyrusUML: Removing “Contact Us</title>
	<guid isPermaLink="false">http://papyrusuml.wordpress.com/?p=2371</guid>
	<link>https://papyrusuml.wordpress.com/2019/10/07/removing-contact-us/</link>
	<description>&lt;p&gt;Unfortunately, because of the larger amount of spam, I now have to remove off the “&lt;a href=&quot;https://papyrusuml.wordpress.com/wp-admin/post.php?post=678&amp;amp;action=edit&quot;&gt;Contact Us&lt;/a&gt;” page.&lt;/p&gt;



&lt;p&gt;If you want to contact us, I would recommend you go through our twitter account.&lt;/p&gt;</description>
	<pubDate>Mon, 07 Oct 2019 14:17:36 +0000</pubDate>
</item>
<item>
	<title>N4JS: Instanceof Type Guards in N4JS</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-7569987920628430132.post-5441381820374499063</guid>
	<link>https://n4js.blogspot.com/2019/09/instanceof-type-guards-in-n4js.html</link>
	<description>&lt;h4&gt;Statically typed languages like Java use &lt;span&gt;instanceof&lt;/span&gt; checks to determine the type of an object at runtime. After a successful check, a type cast needs to be done explicitly in most of those languages. In this post we present how N4JS introduced type guards to perform these type casts implicitly. &lt;/h4&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-k8VG4ZChX4E/XR4Y74o1khI/AAAAAAAAAKs/rNn1qAac2Twtr3rlVi__edXAvjECND7GwCLcBGAs/s1600/tg_f1.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;300&quot; src=&quot;https://1.bp.blogspot.com/-k8VG4ZChX4E/XR4Y74o1khI/AAAAAAAAAKs/rNn1qAac2Twtr3rlVi__edXAvjECND7GwCLcBGAs/s1600/tg_f1.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 12.8px;&quot;&gt;No error due to implicit cast in successful &lt;/span&gt;&lt;span&gt;instanceof&lt;/span&gt;&lt;span style=&quot;font-size: 12.8px;&quot;&gt; type guard&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;h4&gt;The example above&lt;span style=&quot;font-weight: normal;&quot;&gt; shows that strict type rules on the &lt;span&gt;any&lt;/span&gt; instance &lt;span&gt;a&lt;/span&gt; causes errors to show up when accessing the unknown property &lt;span&gt;pX&lt;/span&gt;. However, after asserting that &lt;span&gt;a&lt;/span&gt; is an instance of &lt;span&gt;X&lt;/span&gt;, the property &lt;span&gt;pX&lt;/span&gt; can be accessed without errors. A separate type cast is unnecessary, since type inference now also considers &lt;span&gt;instanceof&lt;/span&gt; type guard information.&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-LDRo370o02M/XR8SffBT-WI/AAAAAAAAALE/L0z7eK0-rpw45HfFvckQkxvoULiVrG3XwCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B11.00.31.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;130&quot; src=&quot;https://1.bp.blogspot.com/-LDRo370o02M/XR8SffBT-WI/AAAAAAAAALE/L0z7eK0-rpw45HfFvckQkxvoULiVrG3XwCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B11.00.31.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Hover information on variable access of &lt;span&gt;a&lt;/span&gt; shows the inferred type&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;The resulting type&lt;span style=&quot;font-weight: normal;&quot;&gt; is the intersection type of the original type (which is here &lt;span&gt;any&lt;/span&gt;) and of all type guards that must hold on a specific variable access (which is here only type &lt;span&gt;X&lt;/span&gt;). Keeping the original types &lt;span&gt;any&lt;/span&gt; or &lt;span&gt;Object&lt;/span&gt; is not necessary and could be optimised later. In case the original type is different, it is necessary to include it in the resulting intersection type. The reason is that the type guard could check for an interface only. If so, property accesses to properties of the original types would cause errors.&lt;/span&gt;&lt;/h4&gt;&lt;div&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-uMfGgEJdmJA/XR8g15OqgOI/AAAAAAAAALQ/TJvo54WPnd84n2N4rDYv-2xrLWlPZgX2QCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.04.37.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;300&quot; src=&quot;https://1.bp.blogspot.com/-uMfGgEJdmJA/XR8g15OqgOI/AAAAAAAAALQ/TJvo54WPnd84n2N4rDYv-2xrLWlPZgX2QCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.04.37.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Re-definition of a type guarded variable&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;b&gt;Two distinct differences&lt;/b&gt; between type guards and type declarations are (1) their data flow nature and (2) their read-only effects. Firstly, when redefining (in the sense of the data flow) a variable, the type guard information gets lost. Consequently, subsequent accesses to the variable will no longer benefit from the type guard, since the type guard was invalidated by the re-definition. Secondly, only the original type information is considered for a redefinition. That means that the type guard does not change the expected type and, hence, does not limit the set of types that can be assigned to a type guarded variable.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-Tgjm3RwmYco/XR8sIy_XQWI/AAAAAAAAALc/smgNTaOcr_wbJC1mCDNN5QrNXXclTtzngCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.52.50.png&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;475&quot; src=&quot;https://1.bp.blogspot.com/-Tgjm3RwmYco/XR8sIy_XQWI/AAAAAAAAALc/smgNTaOcr_wbJC1mCDNN5QrNXXclTtzngCLcBGAs/s1600/Screenshot%2B2019-07-05%2Bat%2B12.52.50.png&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Further examples for &lt;span&gt;instanceof&lt;/span&gt; type guards in N4JS&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;b&gt;Data flow analysis&lt;/b&gt; is essential for type guards and has been presented in a &lt;a href=&quot;https://n4js.blogspot.com/2018/08/control-flow-graphs-in-n4js_29.html&quot;&gt;previous post&lt;/a&gt;. Based upon this information, type information for each variable access is computed. Since also complicated data flows are handled correctly, such as in &lt;span&gt;for&lt;/span&gt; loops or &lt;a href=&quot;https://n4js.blogspot.com/2018/10/short-circuit-evaluation-in-n4js_17.html&quot;&gt;short circuit evaluation&lt;/a&gt;, type guard information is already available in composed condition expressions (see function &lt;span&gt;f3&lt;/span&gt; and &lt;span&gt;f5&lt;/span&gt; above). Aside from being able to nest &lt;span&gt;instanceof&lt;/span&gt; type guards (see function &lt;span&gt;f4&lt;/span&gt; above), they also can be used as a filter at the beginning of a function (see function &lt;span&gt;f6&lt;/span&gt; above) or inside a loop: Negating a type guard and then exiting the function or block leaves helpful valid type guard information on all the remaining control flow paths.&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: x-small;&quot;&gt;by Marcus Mews&lt;/span&gt;&lt;/div&gt;</description>
	<pubDate>Mon, 30 Sep 2019 08:06:18 +0000</pubDate>
	<author>noreply@blogger.com (n4js dev)</author>
</item>
<item>
	<title>EclipseCon Europe 2019: Team Sports for Developers! Edge Computing Mini-Hackathon</title>
	<guid isPermaLink="false">2246 at https://www.eclipsecon.org</guid>
	<link>https://www.eclipsecon.org/europe2019/news/team-sports-developers-edge-computing-mini-hackathon</link>
	<description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Do you like to build gadgets and/or hack? Then get a team together for the &lt;a href=&quot;https://www.eclipsecon.org/europe2019/hackathon&quot; target=&quot;_blank&quot;&gt;Edge Computing Mini-Hackathon&lt;/a&gt;, organized by Edgeworx.&lt;/p&gt;

&lt;p&gt;Teams will be challenged to integrate at least one other Eclipse IoT project with Eclipse ioFog and showcase what they were able to accomplish. Representatives from all Eclipse projects are welcome to come help guide, coach, and influence participants to make use of their projects. There will be prizes for the standouts, plus giveaways (and fun) for all!&lt;/p&gt;

&lt;p&gt;The event is part of Community Night on Tuesday, October 22, from 19:30 - 22:00 in the Theater Stage room at the Forum.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-news-image field-type-image field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019/news/team-sports-developers-edge-computing-mini-hackathon&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;img-responsive block-center&quot; height=&quot;250&quot; src=&quot;https://www.eclipsecon.org/sites/default/files/styles/solstice_news_-_default_-_thumbnail/public/news/raspberry_pi.jpg?itok=Kv6nTVKk&quot; width=&quot;250&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Thu, 26 Sep 2019 21:21:28 +0000</pubDate>
</item>
<item>
	<title>Wim Jongman: Blocked by an Eclipse Wizard?</title>
	<guid isPermaLink="false">623 at https://remainsoftware.com</guid>
	<link>https://remainsoftware.com/blog/blocked-eclipse-wizard</link>
	<description>&lt;span class=&quot;datestamp&quot;&gt;
      &lt;span class=&quot;date-display-single&quot;&gt;Tuesday, September 24, 2019&lt;/span&gt;  &lt;/span&gt;
        &lt;div class=&quot;field-item even&quot;&gt;
      There is a small but very useful patch in Eclipse 4.12 for people that do not want the UI to be blocked by wizards. There are many cases where it is desired that the underlying window can be reached WHILE the user is finishing the wizard.  That's why it's strange that the Eclipse Wizard demands from us to always have full and utter attention.      &lt;p class=&quot;clearfix&quot;&gt;&lt;a href=&quot;https://remainsoftware.com/node/623&quot;&gt;Read more&lt;/a&gt;&lt;/p&gt;
    &lt;/div&gt;</description>
	<pubDate>Tue, 24 Sep 2019 08:53:59 +0000</pubDate>
</item>
<item>
	<title>Niko Stotz: How to Render a (Hierarchical) Tree in Asciidoctor</title>
	<guid isPermaLink="false">https://www.nikostotz.de/blog/?p=443</guid>
	<link>https://www.nikostotz.de/blog/how-to-render-a-hierarchical-tree-in-asciidoctor/</link>
	<description>&lt;p&gt;Showing a hierarchical tree, like a file system directory tree, in Asciidoctor is surprisingly hard. We use PlantUML to render the tree on all common platforms.&lt;/p&gt;



&lt;figure class=&quot;wp-block-image&quot;&gt;&lt;img alt=&quot;Example of rendered hierarchical tree&quot; class=&quot;wp-image-444&quot; src=&quot;https://www.nikostotz.de/blog/wp-content/uploads/2019/09/tree-in-asciidoctor.png&quot; /&gt;&lt;/figure&gt;



&lt;p&gt;This tree is rendered from the following code:&lt;/p&gt;




&lt;div class=&quot;codecolorer-container text default&quot; style=&quot;overflow: auto; white-space: nowrap; width: 435px;&quot;&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;1&lt;br /&gt;2&lt;br /&gt;3&lt;br /&gt;4&lt;br /&gt;5&lt;br /&gt;6&lt;br /&gt;7&lt;br /&gt;8&lt;br /&gt;9&lt;br /&gt;10&lt;br /&gt;11&lt;br /&gt;12&lt;br /&gt;13&lt;br /&gt;14&lt;br /&gt;15&lt;br /&gt;16&lt;br /&gt;17&lt;br /&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&quot;text codecolorer&quot;&gt;[plantuml, format=svg, opts=&quot;inline&quot;]&lt;br /&gt;
----&lt;br /&gt;
skinparam Legend {&lt;br /&gt;
    BackgroundColor transparent&lt;br /&gt;
    BorderColor transparent&lt;br /&gt;
    FontName &quot;Noto Serif&quot;, &quot;DejaVu Serif&quot;, serif&lt;br /&gt;
    FontSize 17&lt;br /&gt;
}&lt;br /&gt;
legend&lt;br /&gt;
Root&lt;br /&gt;
|_ Element 1&lt;br /&gt;
  |_ Element 1.1&lt;br /&gt;
  |_ Element 1.2&lt;br /&gt;
|_ Element 2&lt;br /&gt;
  |_ Element 2.1&lt;br /&gt;
end legend&lt;br /&gt;
----&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;It works on all Asciidoctor implementations that support &lt;tt&gt;asciidoctor-diagram&lt;/tt&gt; and renders well in both HTML and PDF. Readers can select the text (i.e. it’s not an image), and we don’t need to ship additional files.&lt;/p&gt;



&lt;p&gt;We might want to externalize the boilerplate:&lt;/p&gt;




&lt;div class=&quot;codecolorer-container text default&quot; style=&quot;overflow: auto; white-space: nowrap; width: 435px;&quot;&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;1&lt;br /&gt;2&lt;br /&gt;3&lt;br /&gt;4&lt;br /&gt;5&lt;br /&gt;6&lt;br /&gt;7&lt;br /&gt;8&lt;br /&gt;9&lt;br /&gt;10&lt;br /&gt;11&lt;br /&gt;12&lt;br /&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&quot;text codecolorer&quot;&gt;[plantuml, format=svg, opts=&quot;inline&quot;]&lt;br /&gt;
----&lt;br /&gt;
!include asciidoctor-style.iuml&lt;br /&gt;
legend&lt;br /&gt;
Root&lt;br /&gt;
|_ Element 1&lt;br /&gt;
  |_ Element 1.1&lt;br /&gt;
  |_ Element 1.2&lt;br /&gt;
|_ Element 2&lt;br /&gt;
  |_ Element 2.1&lt;br /&gt;
end legend&lt;br /&gt;
----&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;




&lt;i&gt;asciidoctor-style.iuml&lt;/i&gt;

&lt;div class=&quot;codecolorer-container text default&quot; style=&quot;overflow: auto; white-space: nowrap; width: 435px;&quot;&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;div&gt;1&lt;br /&gt;2&lt;br /&gt;3&lt;br /&gt;4&lt;br /&gt;5&lt;br /&gt;6&lt;br /&gt;&lt;/div&gt;&lt;/td&gt;&lt;td&gt;&lt;div class=&quot;text codecolorer&quot;&gt;skinparam Legend {&lt;br /&gt;
    BackgroundColor transparent&lt;br /&gt;
    BorderColor transparent&lt;br /&gt;
    FontName &quot;Noto Serif&quot;, &quot;DejaVu Serif&quot;, serif&lt;br /&gt;
    FontSize 17&lt;br /&gt;
}&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;Thanks to &lt;a href=&quot;https://forum.plantuml.net/10200/dont-require-dot-for-shapeless-diagrams-and-svg-output&quot;&gt;PlantUML’s impressive reaction time&lt;/a&gt;, we soon won’t even need Graphviz installed.&lt;/p&gt;



&lt;p&gt;Please find all details in the &lt;a href=&quot;https://github.com/enikao/asciidoctor-tree&quot;&gt;example repository&lt;/a&gt; and &lt;a href=&quot;https://nikostotz.de/blog/tree-in-asciidoctor.html&quot;&gt;example HTML&lt;/a&gt; / &lt;a href=&quot;https://nikostotz.de/blog/tree-in-asciidoctor.pdf&quot;&gt;example PDF&lt;/a&gt; rendering.&lt;/p&gt;</description>
	<pubDate>Sat, 21 Sep 2019 15:16:27 +0000</pubDate>
        <enclosure url="https://www.nikostotz.de/blog/wp-content/uploads/2019/09/tree-in-asciidoctor.png" length="2854" type="image/png"/>
</item>
<item>
	<title>Cedric Brun: Let's Do It! Obeo loves The SeaCleaners</title>
	<guid isPermaLink="false">https://cedric.brun.io/eclipse/obeo-environment-theseacleaners</guid>
	<link>https://cedric.brun.io/eclipse/obeo-environment-theseacleaners/</link>
	<description>&lt;p&gt;I am deeply convinced a company is not only an economical actor. It has a much wider responsibility as any decision also has &lt;strong&gt;social&lt;/strong&gt;, &lt;strong&gt;environmental&lt;/strong&gt; or even &lt;strong&gt;political&lt;/strong&gt; implications.&lt;/p&gt;

&lt;p&gt;Looking at our environment state, its recent evolution and how it is forecasted to evolve indeed the task in front of us is huge. It would be easy to dismiss this as a problem our governments and big organizations should step up to, and indeed those in power have the responsibility, the ability and leverage to act and maybe bend those charts.&lt;/p&gt;

&lt;p&gt;But I have a motto to &lt;em&gt;“Focus on what you can control, then you can act”&lt;/em&gt; and so do I.&lt;/p&gt;

&lt;p&gt;Obeo participates and hosts quite a few events each year and we are often struck by the nonsensical nature of the “goodies” industry and what global model they promote: built at the cheapest price, moved across the globe, distributed at the event and then pretty quickly to the bin.&lt;/p&gt;

&lt;p&gt;Starting now, &lt;strong&gt;you won’t get any more goodies from us at conferences or events&lt;/strong&gt;, but instead we will gladly discuss how we try to do our part, as a company, in this global challenge.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://www.theseacleaners.org/en/&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/seacleaners/seacleaners.png&quot; style=&quot;float: right;&quot; /&gt;&lt;/a&gt;      
&lt;/figure&gt;

&lt;p&gt;In relation to this initiative to stop producing waste we do not deem necessary: &lt;strong&gt;Obeo is partnering with The SeaCleaners organization to reduce plastic waste&lt;/strong&gt;. &lt;a href=&quot;https://www.theseacleaners.org/en&quot; target=&quot;_blank&quot;&gt;The SeaCleaners&lt;/a&gt; is building a giant multihull boat designed to retrieve the plastic waste in the Ocean: The &lt;strong&gt;MANTA&lt;/strong&gt;. The organization vision is that the preservation of the oceans is a global, long-term and worldwide matter that integrates economic, social, human, educational and scientific perspectives. They do that in a dynamic and solidarity-based project.
You can &lt;a href=&quot;https://news.obeo.fr/en/post/world-cleanup-day-obeo-supports-the-seacleaners-to-reduce-plastic-waste&quot; target=&quot;_blank&quot;&gt;learn more about this initiative on Obeo’s website&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://www.theseacleaners.org/en/technical-data/&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/seacleaners/manta.png&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;The &quot;Manta&quot;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Furthermore, &lt;strong&gt;all the designs and blueprints of the Manta boat will be Open-Source&lt;/strong&gt; and that enable enhancements and duplication at a global scale, a principle clearly aligned with our values and what we do within the Eclipse community.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://www.theseacleaners.org/en/technical-data/&quot;&gt;&lt;img src=&quot;https://cedric.brun.io/images/blog/seacleaners/manta-tech.png&quot; /&gt;&lt;/a&gt;  
    &lt;figcaption&gt;The &quot;Manta&quot; boat technical data&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;That being said, it is &lt;strong&gt;just one step on a very specific part of our activity&lt;/strong&gt;, but a step starting a journey with more to do to improve the way Obeo operates regarding its environmental responsibility. When you start building awareness of our impact on all the ins and outs of what we do, you realize even a non-industrial, software company can contribute.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;https://cedric.brun.io/eclipse/obeo-environment-theseacleaners/&quot;&gt;Let's Do It! Obeo loves The SeaCleaners&lt;/a&gt; was originally published by Cédric Brun at &lt;a href=&quot;https://cedric.brun.io&quot;&gt;CEO @ Obeo&lt;/a&gt; on September 20, 2019.&lt;/p&gt;</description>
	<pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate>
	<author>cedric.brun@obeo.fr (Cédric Brun)</author>
</item>
<item>
	<title>Webtools News: WTP 3.15 Released!</title>
	<guid isPermaLink="false">http://www.eclipse.org/webtools/news.php#permalink189</guid>
	<link>http://eclipse.org/webtools/releases/3.15</link>
	<description>&lt;div&gt;
		The Eclipse Web Tools Platform 3.15 has been released!
		&lt;a href=&quot;https://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F&quot;&gt;Installation&lt;/a&gt;
		and updates can be performed using the
		Eclipse IDE 2019-09
		&lt;a href=&quot;http://download.eclipse.org/releases/2019-09/&quot;&gt;Update Site&lt;/a&gt;
		or through the
		&lt;a href=&quot;https://marketplace.eclipse.org/user/nitind/listings&quot;&gt;Eclipse Marketplace&lt;/a&gt;
		.
		Release 3.15 is included in the 2019-09
		&lt;a href=&quot;https://www.eclipse.org/downloads/packages/release/2019-09/r/eclipse-ide-enterprise-java-developers&quot;&gt;
			Eclipse IDE for Enterprise Java Developers
		&lt;/a&gt;
		, with selected portions also included in several
		&lt;a href=&quot;http://www.eclipse.org/downloads/compare.php&quot;&gt;other packages&lt;/a&gt;
		. Adopters can download
		&lt;a href=&quot;http://download.eclipse.org/webtools/downloads/&quot;&gt;the R3.15 build&lt;/a&gt;
		directly and combine it with the necessary dependencies.&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;http://www.eclipse.org/webtools/news.php#permalink189&quot;&gt;More news&lt;/a&gt;&lt;/p&gt;</description>
	<pubDate>Thu, 19 Sep 2019 14:14:59 +0000</pubDate>
</item>
<item>
	<title>itemis: Language-Workbench für Testsprachen</title>
	<guid isPermaLink="true">https://blogs.itemis.com/de/language-workbench-fuer-testsprachen</guid>
	<link>https://blogs.itemis.com/de/language-workbench-fuer-testsprachen</link>
	<description>&lt;p&gt;Kennen Sie das? Das Gefühl, all das schon einmal erlebt zu haben? Ein Déjà-vu? Selbiges beschlich mich vergangene Woche bei einem ersten Gespräch mit einem Automobilhersteller über das Tooling seiner hauseigenen Testsprache.&lt;/p&gt;  
&lt;p&gt;&lt;img alt=&quot;Language Workbench für Testsprachen&quot; src=&quot;https://blogs.itemis.com/hs-fs/hubfs/Blog%20(2019)/Software%20Development/Language-Workbench%20f%C3%BCr%20Testsprachen/language_workbench_fuer_testsprachen.jpg?width=950&amp;amp;name=language_workbench_fuer_testsprachen.jpg&quot; style=&quot;width: 950px; margin: 20px 0px;&quot; width=&quot;950&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Das Problem ist jedes Mal dasselbe. Schon vor Jahren ist die Erkenntnis gereift, dass es nicht sinnvoll ist, die riesige Menge an &lt;strong&gt;Testfällen&lt;/strong&gt; gegen fast jährlich neue Modelle immer wieder neu zu entwickeln. Jedes Mal wieder Unmengen an Zeit und Geld in die Programmierung zu stecken für Arbeiten, die doch eigentlich schon zig Mal erledigt wurden. Nur eben „ein klein wenig anders“.&lt;/p&gt; 
&lt;p&gt;Auch die Lösung dieses Problems war grundsätzlich die Richtige: eine eigene, kleine Programmiersprache, um Testfälle zu spezifizieren. Der eigentliche Testcode in C wird dann daraus generiert.&lt;/p&gt; 
&lt;p&gt;Auf diese Weise können sinnvolle Abstraktionen geschaffen werden, welche für verschiedene Modellserien &lt;strong&gt;anpassbar&lt;/strong&gt; und &lt;strong&gt;parametrisierbar&lt;/strong&gt; sind, ohne sich mit technischen Aspekten wie &lt;strong&gt;Zeigerarithmetik&lt;/strong&gt; und &lt;strong&gt;Speicherverletzungen&lt;/strong&gt; herumzuschlagen.&lt;/p&gt; 
&lt;p&gt;Doch nach einiger Zeit wurden die Schattenseiten dieses Ansatzes deutlich. Während das Tooling für gängige Programmiersprachen exzellent und ausgereift ist und die Entwickler mit mächtigen Werkzeugen zum Editieren des Codes verwöhnt werden, stellt sich die Situation für die neue Testsprache anders dar.&lt;/p&gt; 
&lt;p&gt;Natürlich liefert der Compiler mehr oder weniger hilfreiche Fehlermeldungen, und immerhin wurde ein einfaches &lt;strong&gt;Eclipse-Plugin&lt;/strong&gt; entwickelt, um zumindest Schlüsselwörter hervorzuheben, aber von einer echten Toolunterstützung kann keine Rede sein. Es gibt keine Codevervollständigung, keine automatische Formatierung, und auch die Integration mit den anderen Tools ist minimalistisch.&lt;/p&gt; 
&lt;p&gt;Erste Abschätzungen deuten auf mehrere Personenjahre an Entwicklungsaufwand hin, um hier auch nur annähernd dahin zu kommen, wo die Entwicklung mit &lt;strong&gt;Java&lt;/strong&gt; oder&lt;strong&gt; C&lt;/strong&gt; schon lange ist. Und gemacht hat das auch noch keiner im Unternehmen.&lt;/p&gt; 
&lt;p&gt;Ein hoher Aufwand und ein hohes Risiko, welche in keinem Verhältnis zum Nutzen stehen.&lt;/p&gt; 
&lt;p&gt;Also war die eigene Sprache ein Irrweg? Oder muss man mit dem schlechten Tooling leben?&lt;/p&gt; 
&lt;p&gt;Mitnichten!&lt;/p&gt; 
&lt;p&gt;Es handelt sich hier um ein gelöstes Problem. Die Idee, &lt;strong&gt;domänenspezifische Sprachen&lt;/strong&gt; mit &lt;strong&gt;&lt;a href=&quot;https://martinfowler.com/articles/languageWorkbench.html&quot; title=&quot;Link zum Artikel von Martin Fowler (öffnet im neuen Tab)&quot;&gt;Language-Workbenches&lt;/a&gt; &lt;/strong&gt; zu entwickeln, existiert seit Jahrzehnten. Der Begriff wurde vor 14 Jahren geprägt. Doch während es sich damals noch um Experimente handelte, die noch nicht wirklich produktionstaugilch waren, sind diese Tools mittlerweile ausgereift und verkürzen die Entwicklung von Werkzeugen für &lt;strong&gt;DSLs&lt;/strong&gt; um den Faktor 10 und mehr.&lt;/p&gt; 
&lt;p&gt;Mit wenigen Wochen Aufwand können bereits beeindruckende Ergebnisse erzielt werden; mit noch etwas mehr Mühe kommt man nahe an das Tooling heran, welches man von Java gewöhnt ist.&lt;/p&gt; 
&lt;p&gt;Insbesondere im Open-Source-Umfeld um Eclipse herum existiert mit &lt;strong&gt;&lt;a href=&quot;https://www.eclipse.org/Xtext/&quot; title=&quot;Link zu https://www.eclipse.org/Xtext/ (öffnet im neuen Tab)&quot;&gt;Xtext&lt;/a&gt;&lt;/strong&gt; eine Lösung, die exakt diesen Anwendungsfall optimal unterstützt, eine existierende Sprache mit wenig Aufwand um hervorragendes Tooling zu erweitern. Warum Zeit und Geld verschwenden, um das Rad mal wieder neu zu erfinden, wenn man einfach auf die Arbeit von anderen aufbauen kann? Du hast ein ähnliches Problem?&lt;/p&gt; 
&lt;p&gt;Schreibe uns gerne deine Erfahrungen in die Kommentare oder sprich uns an!&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;P.S.: Langweilig wird mir das nicht … auch wenn ich meine, das alles schon einmal erlebt zu haben. Hat ja manchmal auch Vorteile.&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;https://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fde%2Flanguage-workbench-fuer-testsprachen&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Fri, 13 Sep 2019 14:12:14 +0000</pubDate>
	<author>adeutsch@itemis.de (Arne Deutsch)</author>
</item>
<item>
	<title>Jens Reimann: From building blocks to IoT solutions</title>
	<guid isPermaLink="false">https://dentrassi.de/?p=4293</guid>
	<link>https://dentrassi.de/2019/09/10/from-building-blocks-to-iot-solutions/</link>
	<description>&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright is-resized&quot;&gt;&lt;a href=&quot;https://iot.eclipse.org&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Eclipse IoT&quot; class=&quot;wp-image-3752&quot; height=&quot;207&quot; src=&quot;https://dentrassi.de/wp-content/uploads/eclipse-IoT-light-300x269.png&quot; width=&quot;231&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;The Eclipse IoT ecosystem consists of around 40 different projects, ranging from embedded devices, to IoT gateways and up to cloud scale solutions. Many of those projects stand alone as “building blocks”, rather than ready to run solutions. And there is a good reason for that: you can take these building blocks, and incorporate them into your own solution, rather than adopting a complete, pre-built solution.&lt;/p&gt;



&lt;p&gt;This approach however comes with a downside. Most people will understand the purpose of building blocks, like “&lt;a href=&quot;https://www.eclipse.org/paho/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Paho&lt;/a&gt;” (an MQTT protocol library) and “&lt;a href=&quot;https://github.com/eclipse/milo&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Milo&lt;/a&gt;” (an &lt;a href=&quot;https://dentrassi.de/2019/07/06/eclipse-milo-0-3-updated-examples/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;OPC UA protocol library&lt;/a&gt;) and can easily integrate them into their solution. But on the cloud side of things, building blocks become much more complex to integrate, and harder to understand.&lt;/p&gt;



&lt;p&gt;Of course, the “getting started” experience is extremely important. You can simply &lt;a href=&quot;https://www.eclipse.org/downloads/packages/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;download an Eclipse IDE package&lt;/a&gt;, tailored towards your context (Java, Modelling, Rust, …), and are up and running within minutes. We don’t want you to design your deployment descriptors first, and then let you figure out how to start up your distributed cluster. Otherwise “getting started” will become a week long task. And a rather frustrating one.&lt;/p&gt;



&lt;h2&gt;Getting started. Quickly!&lt;/h2&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright&quot;&gt;&lt;a href=&quot;https://dentrassi.de/2019/02/20/integrating-eclipse-iot/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Eclipse IoT building blocks&quot; class=&quot;wp-image-4121&quot; src=&quot;https://dentrassi.de/wp-content/uploads/Selection_583-300x236.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;During the &lt;a href=&quot;https://www.eclipse.org/lists/iot-wg/msg01495.html&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse IoT face-to-face meeting in Berlin&lt;/a&gt;, early this year, the Eclipse IoT working group discussed various ideas. How can we enable interested parties to get started, with as little effort as possible. And still, give you full control. Not only with a single component, which doesn’t provide much benefit on its own. But get you started with a complete solution, which solves actual IoT related problems.&lt;/p&gt;



&lt;p&gt;The goal was simple. Take an IoT use case, which is easy to understand by IoT related people. And provide some form of deployment, which gets people up and running in less than 15 minutes. With as little as possible external requirements. At best, run everything on your local laptop. Still, create everything in a close-to-production style of deployment. Not something completely stripped down. But use a way of deployment, that you could actually use as a basis for extending it further.&lt;/p&gt;



&lt;h2&gt;Kubernetes &amp;amp; Helm&lt;/h2&gt;



&lt;p&gt;We quickly agreed on &lt;a href=&quot;https://kubernetes.io/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Kubernetes&lt;/a&gt; as the runtime platform, and &lt;a href=&quot;https://helm.sh/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Helm&lt;/a&gt; as the way to perform the actual deployments. With Kubernetes being available even on a local machine (using &lt;a href=&quot;https://kubernetes.io/docs/setup/learning-environment/minikube/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;minikube&lt;/a&gt; on Linux, Windows and Mac) and being available, at the same time, in several enterprise ready environments, it seemed like an ideal choice. Helm charts seemed like an ideal choice as well. Helm designed directly for Kubernetes. And it also allows you to generate YAML files, from the Helm charts. So that the deployment only requires you to deploy a bunch of YAML files. Maintaining the charts, is still way easier than directly authoring YAML files.&lt;/p&gt;



&lt;h2&gt;Challenges, moving towards an IoT solution&lt;/h2&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;wp-image-4341&quot; src=&quot;https://dentrassi.de/wp-content/uploads/logo_stack_proper_200px.png&quot; /&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;A much tougher question was: how do we structure this, from a project perspective. During the meeting, it soon turned out, there would be two good initial candidates for “stacks” or “groups of projects”, which we would like to create.&lt;/p&gt;



&lt;p&gt;It also turned out that we would need some “glue” components for a package like that. Even though it may only be a script here, or a “readme” file there. Some artifacts just don’t fit into either of those projects. And what about “in development” versions of the projects? How can you point people towards a stable deployment, only using a stable (released) group of projects, when scripts and readme’s are spread all over the place, in different branches.&lt;/p&gt;



&lt;p&gt;A combination of “&lt;a href=&quot;https://www.eclipse.org/hono/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Hono&lt;/a&gt;, &lt;a href=&quot;https://www.eclipse.org/ditto/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Ditto&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.eclipse.org/hawkbit/&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Hawkbit&lt;/a&gt;” seemed like an ideal IoT solution to start with. People from various companies already work across those three projects, using them in combination for their own purpose. So, why not build on that?&lt;/p&gt;



&lt;p&gt;But in addition to all those technical challenges, the governance of this effort is an aspect to consider. We did not want to exclude other Eclipse IoT projects, simply by starting out with “Hono, Ditto, and Hawkbit”. We only wanted to create “an” Eclipse IoT solution, and not “the” Eclipse IoT solution. The whole Eclipse IoT ecosystem is much too diverse, to force our initial idea on everyone else. So what if someone comes up with an additional group of Eclipse IoT projects? Or what if someone would like to add a new project to an existing deployment?&lt;/p&gt;



&lt;h2&gt;A home for everyone&lt;/h2&gt;



&lt;p&gt;Luckily, creating an Eclipse Foundation project solves all those issues. And the &lt;a href=&quot;https://projects.eclipse.org/projects/technology.packaging&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;Eclipse Packaging project&lt;/a&gt; already proves that this approach works. We played with the idea, to create some kind of a “meta” project. Not a real project in the sense of having a huge code base. But more a project, which makes use of the Eclipse Foundations governance framework. Allowing multiple, even competing companies, to work upstream in a joint effort. And giving all the bits and pieces, which are specific to the integration of the projects, a dedicated home.&lt;/p&gt;



&lt;p&gt;A home, not only for the package of “Hono, Ditto and Hawkbit”, but hopefully for other packages as well. If other projects would like to present their IoT solution, by combining multiple Eclipse IoT projects, this is their chance. You can easily become a contributor to this new project, and publish your scripts, documentation and walk-throughs, alongside the other packages.&lt;/p&gt;



&lt;p&gt;Of course everything will be open source, licensed under the EPL. So go ahead and fork it, add your custom application on top of it. Or replace an existing component with something, you think is even better than what we put it. We want to enable you to deploy what we provide in a few minutes. Offer you an explanation, what to expect from it, and what this IoT solution can do for you. And encourage you to play around with it. And enable you to extend it, and build something bigger.&lt;/p&gt;



&lt;h2&gt;Let’s get started&lt;/h2&gt;



&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;alignright&quot;&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;EclipseCon Europe 2019&quot; class=&quot;wp-image-4321&quot; src=&quot;https://dentrassi.de/wp-content/uploads/https___www.eclipsecon.org_sites_default_files_ECE_only_round_200x200.png.png&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/div&gt;



&lt;p&gt;We created a new project &lt;a href=&quot;https://projects.eclipse.org/proposals/eclipse-iot-packages&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;proposal for the Eclipse IoT packages&lt;/a&gt; project. The project is currently in the community review phase. Once we pass the creation review, we will start publishing the content for the first package we have.&lt;/p&gt;



&lt;p&gt;The Eclipse IoT working group will also meet at the &lt;a href=&quot;https://www.eclipsecon.org/europe2019/eclipse-community-day&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;IoT community day&lt;/a&gt; of &lt;a href=&quot;https://www.eclipsecon.org/europe2019&quot; rel=&quot;noreferrer noopener&quot; target=&quot;_blank&quot;&gt;EclipseCon Europe 2019&lt;/a&gt;. Our goal is to present an initial version of the initial package. Ready to run!&lt;/p&gt;



&lt;p&gt;But even more important, we would like to continue our discussions around this effort. All contributions are welcome: code, documentation, additional packages … your ideas, thoughts, and feedback!&lt;/p&gt;
&lt;p&gt;The post &lt;a href=&quot;https://dentrassi.de/2019/09/10/from-building-blocks-to-iot-solutions/&quot; rel=&quot;nofollow&quot;&gt;From building blocks to IoT solutions&lt;/a&gt; appeared first on &lt;a href=&quot;https://dentrassi.de&quot; rel=&quot;nofollow&quot;&gt;ctron's blog&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Tue, 10 Sep 2019 07:07:37 +0000</pubDate>
</item>

</channel>
</rss>
